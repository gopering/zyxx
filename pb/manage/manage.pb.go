// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: manage.proto

package manage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionType int32

const (
	VersionType_VersionUnKnow   VersionType = 0 // 未知版本
	VersionType_VersionCustomer VersionType = 1 // C端
	VersionType_VersionBusiness VersionType = 2 // B端
	VersionType_VersionShare    VersionType = 3 // 共享版
	VersionType_VersionMax      VersionType = 4 // 最大版本
)

// Enum value maps for VersionType.
var (
	VersionType_name = map[int32]string{
		0: "VersionUnKnow",
		1: "VersionCustomer",
		2: "VersionBusiness",
		3: "VersionShare",
		4: "VersionMax",
	}
	VersionType_value = map[string]int32{
		"VersionUnKnow":   0,
		"VersionCustomer": 1,
		"VersionBusiness": 2,
		"VersionShare":    3,
		"VersionMax":      4,
	}
)

func (x VersionType) Enum() *VersionType {
	p := new(VersionType)
	*p = x
	return p
}

func (x VersionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionType) Descriptor() protoreflect.EnumDescriptor {
	return file_manage_proto_enumTypes[0].Descriptor()
}

func (VersionType) Type() protoreflect.EnumType {
	return &file_manage_proto_enumTypes[0]
}

func (x VersionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionType.Descriptor instead.
func (VersionType) EnumDescriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{0}
}

type MeasureSkinDimensionType int32

const (
	MeasureSkinDimensionType_UnKnow     MeasureSkinDimensionType = 0  // 未知
	MeasureSkinDimensionType_Wrinkle    MeasureSkinDimensionType = 1  // 皱纹
	MeasureSkinDimensionType_Pore       MeasureSkinDimensionType = 2  // 毛孔
	MeasureSkinDimensionType_Grease     MeasureSkinDimensionType = 3  // 油脂
	MeasureSkinDimensionType_Pigment    MeasureSkinDimensionType = 4  // 色素
	MeasureSkinDimensionType_Spot       MeasureSkinDimensionType = 5  // 斑点
	MeasureSkinDimensionType_Sensitive  MeasureSkinDimensionType = 6  // 敏感
	MeasureSkinDimensionType_Redacne    MeasureSkinDimensionType = 7  // 痘痘
	MeasureSkinDimensionType_Blackheads MeasureSkinDimensionType = 8  // 黑头
	MeasureSkinDimensionType_Darkeye    MeasureSkinDimensionType = 9  // 黑眼圈
	MeasureSkinDimensionType_Max        MeasureSkinDimensionType = 10 // 最大值
)

// Enum value maps for MeasureSkinDimensionType.
var (
	MeasureSkinDimensionType_name = map[int32]string{
		0:  "UnKnow",
		1:  "Wrinkle",
		2:  "Pore",
		3:  "Grease",
		4:  "Pigment",
		5:  "Spot",
		6:  "Sensitive",
		7:  "Redacne",
		8:  "Blackheads",
		9:  "Darkeye",
		10: "Max",
	}
	MeasureSkinDimensionType_value = map[string]int32{
		"UnKnow":     0,
		"Wrinkle":    1,
		"Pore":       2,
		"Grease":     3,
		"Pigment":    4,
		"Spot":       5,
		"Sensitive":  6,
		"Redacne":    7,
		"Blackheads": 8,
		"Darkeye":    9,
		"Max":        10,
	}
)

func (x MeasureSkinDimensionType) Enum() *MeasureSkinDimensionType {
	p := new(MeasureSkinDimensionType)
	*p = x
	return p
}

func (x MeasureSkinDimensionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeasureSkinDimensionType) Descriptor() protoreflect.EnumDescriptor {
	return file_manage_proto_enumTypes[1].Descriptor()
}

func (MeasureSkinDimensionType) Type() protoreflect.EnumType {
	return &file_manage_proto_enumTypes[1]
}

func (x MeasureSkinDimensionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeasureSkinDimensionType.Descriptor instead.
func (MeasureSkinDimensionType) EnumDescriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{1}
}

type SkinAnalysisType int32

const (
	SkinAnalysisType_UnKnowType SkinAnalysisType = 0 // 未知类型
	SkinAnalysisType_Quick      SkinAnalysisType = 1 // 快速
	SkinAnalysisType_FullFace   SkinAnalysisType = 2 // 全脸
	SkinAnalysisType_MaxType    SkinAnalysisType = 3 // 最大类型
)

// Enum value maps for SkinAnalysisType.
var (
	SkinAnalysisType_name = map[int32]string{
		0: "UnKnowType",
		1: "Quick",
		2: "FullFace",
		3: "MaxType",
	}
	SkinAnalysisType_value = map[string]int32{
		"UnKnowType": 0,
		"Quick":      1,
		"FullFace":   2,
		"MaxType":    3,
	}
)

func (x SkinAnalysisType) Enum() *SkinAnalysisType {
	p := new(SkinAnalysisType)
	*p = x
	return p
}

func (x SkinAnalysisType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkinAnalysisType) Descriptor() protoreflect.EnumDescriptor {
	return file_manage_proto_enumTypes[2].Descriptor()
}

func (SkinAnalysisType) Type() protoreflect.EnumType {
	return &file_manage_proto_enumTypes[2]
}

func (x SkinAnalysisType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkinAnalysisType.Descriptor instead.
func (SkinAnalysisType) EnumDescriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{2}
}

type DictType int32

const (
	DictType_UnKnowDict       DictType = 0
	DictType_ProductBrand     DictType = 1 // 护肤品品牌
	DictType_ProductType      DictType = 2 // 护肤品类型
	DictType_ProductSpec      DictType = 3 // 产品规格
	DictType_Effect           DictType = 4 // 功效
	DictType_Dimension        DictType = 5 // 维度
	DictType_VideoProductType DictType = 6 // 视频产品类型
	DictType_Mainbusiness     DictType = 7 // 主营业务
	DictType_CosmeticsBrand   DictType = 8 // 化妆品品牌
	DictType_CosmeticsType    DictType = 9 // 化妆品类型
)

// Enum value maps for DictType.
var (
	DictType_name = map[int32]string{
		0: "UnKnowDict",
		1: "ProductBrand",
		2: "ProductType",
		3: "ProductSpec",
		4: "Effect",
		5: "Dimension",
		6: "VideoProductType",
		7: "Mainbusiness",
		8: "CosmeticsBrand",
		9: "CosmeticsType",
	}
	DictType_value = map[string]int32{
		"UnKnowDict":       0,
		"ProductBrand":     1,
		"ProductType":      2,
		"ProductSpec":      3,
		"Effect":           4,
		"Dimension":        5,
		"VideoProductType": 6,
		"Mainbusiness":     7,
		"CosmeticsBrand":   8,
		"CosmeticsType":    9,
	}
)

func (x DictType) Enum() *DictType {
	p := new(DictType)
	*p = x
	return p
}

func (x DictType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DictType) Descriptor() protoreflect.EnumDescriptor {
	return file_manage_proto_enumTypes[3].Descriptor()
}

func (DictType) Type() protoreflect.EnumType {
	return &file_manage_proto_enumTypes[3]
}

func (x DictType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DictType.Descriptor instead.
func (DictType) EnumDescriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{3}
}

// RoleInfo 角色信息
type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // 角色ID
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 角色名称
	Description    string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`               // 角色描述
	PermissionList []int32 `protobuf:"varint,4,rep,packed,name=permissionList,proto3" json:"permissionList,omitempty"` // 权限列表
	Status         bool    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                        // 状态
	CreateTime     string  `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`                 // 创建时间
	UpdateTime     string  `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                 // 更新时间
	BusinessId     int32   `protobuf:"varint,8,opt,name=businessId,proto3" json:"businessId,omitempty"`                // 业务ID
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{0}
}

func (x *RoleInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RoleInfo) GetPermissionList() []int32 {
	if x != nil {
		return x.PermissionList
	}
	return nil
}

func (x *RoleInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RoleInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RoleInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *RoleInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// ManagerInfo 管理员信息表
type ManagerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     // 管理员ID
	User         string      `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`                  // 用户名
	PhoneNumber  string      `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`    // 电话号码
	Name         string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                  // 姓名
	Passwd       string      `protobuf:"bytes,5,opt,name=passwd,proto3" json:"passwd,omitempty"`              // 密码
	RoleList     []*RoleInfo `protobuf:"bytes,6,rep,name=roleList,proto3" json:"roleList,omitempty"`          // 角色列表
	Desc         string      `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`                  // 描述
	Status       bool        `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`             // 状态
	CreateTime   string      `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`      // 创建时间
	UpdateTime   string      `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`     // 更新时间
	BusinessId   int32       `protobuf:"varint,11,opt,name=businessId,proto3" json:"businessId,omitempty"`    // 业务ID
	BusinessName string      `protobuf:"bytes,12,opt,name=businessName,proto3" json:"businessName,omitempty"` // 业务名称
	ShopId       int32       `protobuf:"varint,13,opt,name=shopId,proto3" json:"shopId,omitempty"`            // 商店ID
	ShopName     string      `protobuf:"bytes,14,opt,name=shopName,proto3" json:"shopName,omitempty"`         // 商店名称
	AccountType  int32       `protobuf:"varint,15,opt,name=accountType,proto3" json:"accountType,omitempty"`  // 账户类型
	RoleId       int32       `protobuf:"varint,16,opt,name=roleId,proto3" json:"roleId,omitempty"`            // 角色ID
	Gender       string      `protobuf:"bytes,17,opt,name=gender,proto3" json:"gender,omitempty"`             // 性别
	Birthday     string      `protobuf:"bytes,18,opt,name=birthday,proto3" json:"birthday,omitempty"`         // 生日
	HeadIcon     string      `protobuf:"bytes,19,opt,name=headIcon,proto3" json:"headIcon,omitempty"`         // 头像
}

func (x *ManagerInfo) Reset() {
	*x = ManagerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerInfo) ProtoMessage() {}

func (x *ManagerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerInfo.ProtoReflect.Descriptor instead.
func (*ManagerInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{1}
}

func (x *ManagerInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ManagerInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ManagerInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ManagerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ManagerInfo) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *ManagerInfo) GetRoleList() []*RoleInfo {
	if x != nil {
		return x.RoleList
	}
	return nil
}

func (x *ManagerInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ManagerInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ManagerInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ManagerInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ManagerInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ManagerInfo) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *ManagerInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ManagerInfo) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *ManagerInfo) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *ManagerInfo) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *ManagerInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *ManagerInfo) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *ManagerInfo) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

// MeasureSkinDimensionInfo 测肤维度文案信息表
type MeasureSkinDimensionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 维度ID
	Name                string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                // 维度名称
	Degree              string `protobuf:"bytes,3,opt,name=degree,proto3" json:"degree,omitempty"`                            // 程度
	Type                string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                // 类型
	Summary             string `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary,omitempty"`                          // 摘要
	Desc                string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                                // 描述
	CreateTime          string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`                    // 创建时间
	UpdateTime          string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                    // 更新时间
	DictId              uint64 `protobuf:"varint,9,opt,name=dictId,proto3" json:"dictId,omitempty"`                           // 字典ID
	SeverityDescription string `protobuf:"bytes,10,opt,name=severityDescription,proto3" json:"severityDescription,omitempty"` // 严重程度描述
	SymptomUrl          string `protobuf:"bytes,11,opt,name=symptomUrl,proto3" json:"symptomUrl,omitempty"`                   // 症状URL
	PossibleCauses      string `protobuf:"bytes,12,opt,name=possibleCauses,proto3" json:"possibleCauses,omitempty"`           // 可能原因
	ScoreRangeMin       int32  `protobuf:"varint,13,opt,name=scoreRangeMin,proto3" json:"scoreRangeMin,omitempty"`            // 分数范围最小值
	ScoreRangeMax       int32  `protobuf:"varint,14,opt,name=scoreRangeMax,proto3" json:"scoreRangeMax,omitempty"`            // 分数范围最大值
}

func (x *MeasureSkinDimensionInfo) Reset() {
	*x = MeasureSkinDimensionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureSkinDimensionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureSkinDimensionInfo) ProtoMessage() {}

func (x *MeasureSkinDimensionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureSkinDimensionInfo.ProtoReflect.Descriptor instead.
func (*MeasureSkinDimensionInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{2}
}

func (x *MeasureSkinDimensionInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MeasureSkinDimensionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetDegree() string {
	if x != nil {
		return x.Degree
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *MeasureSkinDimensionInfo) GetSeverityDescription() string {
	if x != nil {
		return x.SeverityDescription
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetSymptomUrl() string {
	if x != nil {
		return x.SymptomUrl
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetPossibleCauses() string {
	if x != nil {
		return x.PossibleCauses
	}
	return ""
}

func (x *MeasureSkinDimensionInfo) GetScoreRangeMin() int32 {
	if x != nil {
		return x.ScoreRangeMin
	}
	return 0
}

func (x *MeasureSkinDimensionInfo) GetScoreRangeMax() int32 {
	if x != nil {
		return x.ScoreRangeMax
	}
	return 0
}

// MeasureDimensionSettingInfo 检测维度设置信息表
type MeasureDimensionSettingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // 设置ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // 设置名称
	EffectMain string `protobuf:"bytes,3,opt,name=effectMain,proto3" json:"effectMain,omitempty"`   // 主要效果
	EffectSub1 string `protobuf:"bytes,5,opt,name=effectSub1,proto3" json:"effectSub1,omitempty"`   // 次要效果1
	EffectSub2 string `protobuf:"bytes,7,opt,name=effectSub2,proto3" json:"effectSub2,omitempty"`   // 次要效果2
	CreateTime string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`   // 创建时间
	UpdateTime string `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  // 更新时间
	DictId     int64  `protobuf:"varint,11,opt,name=dictId,proto3" json:"dictId,omitempty"`         // 字典ID
	BusinessId int32  `protobuf:"varint,12,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,13,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *MeasureDimensionSettingInfo) Reset() {
	*x = MeasureDimensionSettingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureDimensionSettingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureDimensionSettingInfo) ProtoMessage() {}

func (x *MeasureDimensionSettingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureDimensionSettingInfo.ProtoReflect.Descriptor instead.
func (*MeasureDimensionSettingInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{3}
}

func (x *MeasureDimensionSettingInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MeasureDimensionSettingInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MeasureDimensionSettingInfo) GetEffectMain() string {
	if x != nil {
		return x.EffectMain
	}
	return ""
}

func (x *MeasureDimensionSettingInfo) GetEffectSub1() string {
	if x != nil {
		return x.EffectSub1
	}
	return ""
}

func (x *MeasureDimensionSettingInfo) GetEffectSub2() string {
	if x != nil {
		return x.EffectSub2
	}
	return ""
}

func (x *MeasureDimensionSettingInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MeasureDimensionSettingInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MeasureDimensionSettingInfo) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *MeasureDimensionSettingInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *MeasureDimensionSettingInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// ProductDictInfo 产品字典信息表
type ProductDictInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // 字典ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              // 名称
	Value      string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`            // 值
	Desc       string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`              // 描述
	CreateTime string `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	UpdateTime string `protobuf:"bytes,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  // 更新时间
	BusinessId int32  `protobuf:"varint,7,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,8,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *ProductDictInfo) Reset() {
	*x = ProductDictInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDictInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDictInfo) ProtoMessage() {}

func (x *ProductDictInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDictInfo.ProtoReflect.Descriptor instead.
func (*ProductDictInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{4}
}

func (x *ProductDictInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductDictInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductDictInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProductDictInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ProductDictInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductDictInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ProductDictInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ProductDictInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// PushMessageInfo 推送消息表
type PushMessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // 消息ID
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`            // 标题
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`        // 内容
	Url        string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                // URL
	PushTime   string `protobuf:"bytes,5,opt,name=pushTime,proto3" json:"pushTime,omitempty"`      // 推送时间
	CreateTime string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	UpdateTime string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  // 更新时间
	BusinessId int32  `protobuf:"varint,8,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,9,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *PushMessageInfo) Reset() {
	*x = PushMessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessageInfo) ProtoMessage() {}

func (x *PushMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessageInfo.ProtoReflect.Descriptor instead.
func (*PushMessageInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{5}
}

func (x *PushMessageInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PushMessageInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PushMessageInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PushMessageInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PushMessageInfo) GetPushTime() string {
	if x != nil {
		return x.PushTime
	}
	return ""
}

func (x *PushMessageInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PushMessageInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *PushMessageInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *PushMessageInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// IssueInfo 意见反馈表
type IssueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                      // 反馈ID
	User         string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`                   // 用户
	UserName     string   `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`           // 用户名称
	DeviceCode   string   `protobuf:"bytes,4,opt,name=deviceCode,proto3" json:"deviceCode,omitempty"`       // 设备编码
	Title        string   `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                 // 标题
	IssueDesc    string   `protobuf:"bytes,6,opt,name=issueDesc,proto3" json:"issueDesc,omitempty"`         // 反馈描述
	Type         string   `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                   // 类型
	FixDesc      string   `protobuf:"bytes,8,opt,name=fixDesc,proto3" json:"fixDesc,omitempty"`             // 修复描述
	Pictures     []string `protobuf:"bytes,9,rep,name=pictures,proto3" json:"pictures,omitempty"`           // 图片列表
	Status       bool     `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`             // 状态
	AppProductId uint32   `protobuf:"varint,11,opt,name=appProductId,proto3" json:"appProductId,omitempty"` // 应用产品ID
	PlatformType uint32   `protobuf:"varint,12,opt,name=platformType,proto3" json:"platformType,omitempty"` // 平台类型
	MacAddress   string   `protobuf:"bytes,13,opt,name=macAddress,proto3" json:"macAddress,omitempty"`      // MAC地址
	Gender       string   `protobuf:"bytes,14,opt,name=gender,proto3" json:"gender,omitempty"`              // 性别
	PhoneNumber  string   `protobuf:"bytes,15,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`    // 电话号码
	DeviceType   string   `protobuf:"bytes,16,opt,name=deviceType,proto3" json:"deviceType,omitempty"`      // 设备类型
	CreateTime   string   `protobuf:"bytes,17,opt,name=createTime,proto3" json:"createTime,omitempty"`      // 创建时间
	UpdateTime   string   `protobuf:"bytes,18,opt,name=updateTime,proto3" json:"updateTime,omitempty"`      // 更新时间
}

func (x *IssueInfo) Reset() {
	*x = IssueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueInfo) ProtoMessage() {}

func (x *IssueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueInfo.ProtoReflect.Descriptor instead.
func (*IssueInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{6}
}

func (x *IssueInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IssueInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *IssueInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *IssueInfo) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *IssueInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IssueInfo) GetIssueDesc() string {
	if x != nil {
		return x.IssueDesc
	}
	return ""
}

func (x *IssueInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IssueInfo) GetFixDesc() string {
	if x != nil {
		return x.FixDesc
	}
	return ""
}

func (x *IssueInfo) GetPictures() []string {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *IssueInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *IssueInfo) GetAppProductId() uint32 {
	if x != nil {
		return x.AppProductId
	}
	return 0
}

func (x *IssueInfo) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *IssueInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *IssueInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *IssueInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *IssueInfo) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *IssueInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *IssueInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// OperationLogInfo 操作历史记录
type OperationLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                      // 记录ID
	OperationUser string `protobuf:"bytes,2,opt,name=operationUser,proto3" json:"operationUser,omitempty"` // 操作用户
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                 // 标题
	Content       string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`             // 内容
	CreateTime    string `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`       // 创建时间
	IpAddress     string `protobuf:"bytes,6,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`         // IP地址
	RoleName      string `protobuf:"bytes,7,opt,name=roleName,proto3" json:"roleName,omitempty"`           // 角色名称
	BusinessId    int32  `protobuf:"varint,8,opt,name=businessId,proto3" json:"businessId,omitempty"`      // 业务ID
	ShopId        int32  `protobuf:"varint,9,opt,name=shopId,proto3" json:"shopId,omitempty"`              // 商店ID
}

func (x *OperationLogInfo) Reset() {
	*x = OperationLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationLogInfo) ProtoMessage() {}

func (x *OperationLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationLogInfo.ProtoReflect.Descriptor instead.
func (*OperationLogInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{7}
}

func (x *OperationLogInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OperationLogInfo) GetOperationUser() string {
	if x != nil {
		return x.OperationUser
	}
	return ""
}

func (x *OperationLogInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperationLogInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *OperationLogInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OperationLogInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *OperationLogInfo) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *OperationLogInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *OperationLogInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// CosmeticsProductInfo 彩妆商品
type CosmeticsProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         // 商品ID
	ProductCode    string `protobuf:"bytes,2,opt,name=productCode,proto3" json:"productCode,omitempty"`        // 商品编码
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                      // 商品名称
	BrandId        string `protobuf:"bytes,4,opt,name=brandId,proto3" json:"brandId,omitempty"`                // 品牌ID
	Type           string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                      // 类型
	Family         string `protobuf:"bytes,6,opt,name=family,proto3" json:"family,omitempty"`                  // 系列
	StandardsId    string `protobuf:"bytes,7,opt,name=standardsId,proto3" json:"standardsId,omitempty"`        // 规格ID
	StandardsValue string `protobuf:"bytes,8,opt,name=standardsValue,proto3" json:"standardsValue,omitempty"`  // 规格值
	Price          string `protobuf:"bytes,9,opt,name=price,proto3" json:"price,omitempty"`                    // 价格
	Thumb          string `protobuf:"bytes,10,opt,name=thumb,proto3" json:"thumb,omitempty"`                   // 缩略图
	Introduction   string `protobuf:"bytes,11,opt,name=introduction,proto3" json:"introduction,omitempty"`     // 简介
	Description    string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`       // 描述
	Status         bool   `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`                // 状态
	CreateTime     string `protobuf:"bytes,14,opt,name=createTime,proto3" json:"createTime,omitempty"`         // 创建时间
	UpdateTime     string `protobuf:"bytes,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`         // 更新时间
	BusinessId     int32  `protobuf:"varint,16,opt,name=businessId,proto3" json:"businessId,omitempty"`        // 业务ID
	ShopId         int32  `protobuf:"varint,17,opt,name=shopId,proto3" json:"shopId,omitempty"`                // 商店ID
	BrandName      string `protobuf:"bytes,18,opt,name=brandName,proto3" json:"brandName,omitempty"`           // 品牌名称
	SubName        string `protobuf:"bytes,19,opt,name=subName,proto3" json:"subName,omitempty"`               // 子名称
	DetailPictures string `protobuf:"bytes,20,opt,name=detailPictures,proto3" json:"detailPictures,omitempty"` // 详情图片
}

func (x *CosmeticsProductInfo) Reset() {
	*x = CosmeticsProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmeticsProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmeticsProductInfo) ProtoMessage() {}

func (x *CosmeticsProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmeticsProductInfo.ProtoReflect.Descriptor instead.
func (*CosmeticsProductInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{8}
}

func (x *CosmeticsProductInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CosmeticsProductInfo) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *CosmeticsProductInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CosmeticsProductInfo) GetBrandId() string {
	if x != nil {
		return x.BrandId
	}
	return ""
}

func (x *CosmeticsProductInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CosmeticsProductInfo) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *CosmeticsProductInfo) GetStandardsId() string {
	if x != nil {
		return x.StandardsId
	}
	return ""
}

func (x *CosmeticsProductInfo) GetStandardsValue() string {
	if x != nil {
		return x.StandardsValue
	}
	return ""
}

func (x *CosmeticsProductInfo) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CosmeticsProductInfo) GetThumb() string {
	if x != nil {
		return x.Thumb
	}
	return ""
}

func (x *CosmeticsProductInfo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CosmeticsProductInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CosmeticsProductInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CosmeticsProductInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CosmeticsProductInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CosmeticsProductInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *CosmeticsProductInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CosmeticsProductInfo) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *CosmeticsProductInfo) GetSubName() string {
	if x != nil {
		return x.SubName
	}
	return ""
}

func (x *CosmeticsProductInfo) GetDetailPictures() string {
	if x != nil {
		return x.DetailPictures
	}
	return ""
}

// CourseProductInfo 教程商品
type CourseProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // 商品ID
	CourseId          uint64 `protobuf:"varint,2,opt,name=courseId,proto3" json:"courseId,omitempty"`                    // 课程ID
	Type              string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                             // 类型
	ProductId         uint64 `protobuf:"varint,4,opt,name=productId,proto3" json:"productId,omitempty"`                  // 产品ID
	ProductClass      uint64 `protobuf:"varint,5,opt,name=productClass,proto3" json:"productClass,omitempty"`            // 产品类别
	ClickCount        uint64 `protobuf:"varint,6,opt,name=clickCount,proto3" json:"clickCount,omitempty"`                // 点击次数
	StartTime         string `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`                   // 开始时间
	EndTime           string `protobuf:"bytes,8,opt,name=endTime,proto3" json:"endTime,omitempty"`                       // 结束时间
	YouZanAlias       string `protobuf:"bytes,9,opt,name=youZanAlias,proto3" json:"youZanAlias,omitempty"`               // 有赞别名
	YouZanProductName string `protobuf:"bytes,10,opt,name=youZanProductName,proto3" json:"youZanProductName,omitempty"`  // 有赞产品名称
	YouZanPropValueId uint64 `protobuf:"varint,11,opt,name=youZanPropValueId,proto3" json:"youZanPropValueId,omitempty"` // 有赞属性值ID
}

func (x *CourseProductInfo) Reset() {
	*x = CourseProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseProductInfo) ProtoMessage() {}

func (x *CourseProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseProductInfo.ProtoReflect.Descriptor instead.
func (*CourseProductInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{9}
}

func (x *CourseProductInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseProductInfo) GetCourseId() uint64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CourseProductInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CourseProductInfo) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CourseProductInfo) GetProductClass() uint64 {
	if x != nil {
		return x.ProductClass
	}
	return 0
}

func (x *CourseProductInfo) GetClickCount() uint64 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *CourseProductInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CourseProductInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CourseProductInfo) GetYouZanAlias() string {
	if x != nil {
		return x.YouZanAlias
	}
	return ""
}

func (x *CourseProductInfo) GetYouZanProductName() string {
	if x != nil {
		return x.YouZanProductName
	}
	return ""
}

func (x *CourseProductInfo) GetYouZanPropValueId() uint64 {
	if x != nil {
		return x.YouZanPropValueId
	}
	return 0
}

// DeviceVersionInfo 设备版本信息
type DeviceVersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                       // 版本ID
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                    // 版本名称
	Type          uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`                   // 类型
	Info          string `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`                    // 信息
	Url           string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`                      // URL
	Code          uint32 `protobuf:"varint,6,opt,name=code,proto3" json:"code,omitempty"`                   // 版本号
	Remark        string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`                // 备注
	Status        uint32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`               // 状态
	PublishTime   string `protobuf:"bytes,9,opt,name=publishTime,proto3" json:"publishTime,omitempty"`      // 发布时间
	DeviceVersion string `protobuf:"bytes,10,opt,name=deviceVersion,proto3" json:"deviceVersion,omitempty"` // 设备版本
	ProjectName   string `protobuf:"bytes,11,opt,name=projectName,proto3" json:"projectName,omitempty"`     // 项目名称
	TargetType    uint32 `protobuf:"varint,12,opt,name=targetType,proto3" json:"targetType,omitempty"`      // 目标类型
	Remark1       string `protobuf:"bytes,13,opt,name=remark1,proto3" json:"remark1,omitempty"`             // 备注1
	Remark2       string `protobuf:"bytes,14,opt,name=remark2,proto3" json:"remark2,omitempty"`             // 备注2
	Remark3       string `protobuf:"bytes,15,opt,name=remark3,proto3" json:"remark3,omitempty"`             // 备注3
	AppProductId  uint32 `protobuf:"varint,16,opt,name=appProductId,proto3" json:"appProductId,omitempty"`  // 应用产品ID
	PlatformType  uint32 `protobuf:"varint,17,opt,name=platformType,proto3" json:"platformType,omitempty"`  // 平台类型
}

func (x *DeviceVersionInfo) Reset() {
	*x = DeviceVersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceVersionInfo) ProtoMessage() {}

func (x *DeviceVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceVersionInfo.ProtoReflect.Descriptor instead.
func (*DeviceVersionInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{10}
}

func (x *DeviceVersionInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceVersionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceVersionInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DeviceVersionInfo) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *DeviceVersionInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DeviceVersionInfo) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeviceVersionInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DeviceVersionInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeviceVersionInfo) GetPublishTime() string {
	if x != nil {
		return x.PublishTime
	}
	return ""
}

func (x *DeviceVersionInfo) GetDeviceVersion() string {
	if x != nil {
		return x.DeviceVersion
	}
	return ""
}

func (x *DeviceVersionInfo) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *DeviceVersionInfo) GetTargetType() uint32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *DeviceVersionInfo) GetRemark1() string {
	if x != nil {
		return x.Remark1
	}
	return ""
}

func (x *DeviceVersionInfo) GetRemark2() string {
	if x != nil {
		return x.Remark2
	}
	return ""
}

func (x *DeviceVersionInfo) GetRemark3() string {
	if x != nil {
		return x.Remark3
	}
	return ""
}

func (x *DeviceVersionInfo) GetAppProductId() uint32 {
	if x != nil {
		return x.AppProductId
	}
	return 0
}

func (x *DeviceVersionInfo) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

// ImportTask 导入任务
type ImportTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     // 任务ID
	TaskType     int32  `protobuf:"varint,2,opt,name=taskType,proto3" json:"taskType,omitempty"`         // 任务类型
	Url          string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                    // URL
	Status       int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`             // 状态
	FailDesc     string `protobuf:"bytes,5,opt,name=failDesc,proto3" json:"failDesc,omitempty"`          // 失败描述
	CreateTime   string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`      // 创建时间
	UpdateTime   string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`      // 更新时间
	BusinessId   int32  `protobuf:"varint,8,opt,name=businessId,proto3" json:"businessId,omitempty"`     // 业务ID
	ShopId       int32  `protobuf:"varint,9,opt,name=shopId,proto3" json:"shopId,omitempty"`             // 商店ID
	TaskName     string `protobuf:"bytes,10,opt,name=taskName,proto3" json:"taskName,omitempty"`         // 任务名称
	TaskNameDesc string `protobuf:"bytes,11,opt,name=taskNameDesc,proto3" json:"taskNameDesc,omitempty"` // 任务名称描述
	StatusDesc   string `protobuf:"bytes,12,opt,name=statusDesc,proto3" json:"statusDesc,omitempty"`     // 状态描述
}

func (x *ImportTask) Reset() {
	*x = ImportTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTask) ProtoMessage() {}

func (x *ImportTask) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTask.ProtoReflect.Descriptor instead.
func (*ImportTask) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{11}
}

func (x *ImportTask) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ImportTask) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *ImportTask) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImportTask) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ImportTask) GetFailDesc() string {
	if x != nil {
		return x.FailDesc
	}
	return ""
}

func (x *ImportTask) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ImportTask) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ImportTask) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ImportTask) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ImportTask) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *ImportTask) GetTaskNameDesc() string {
	if x != nil {
		return x.TaskNameDesc
	}
	return ""
}

func (x *ImportTask) GetStatusDesc() string {
	if x != nil {
		return x.StatusDesc
	}
	return ""
}

// RunTimeFilters 过滤相关参数
type RunTimeFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`              // 过滤键的名称
	Values     []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`          // 一个或多个过滤值
	ExactMatch bool     `protobuf:"varint,3,opt,name=exactMatch,proto3" json:"exactMatch,omitempty"` // 是否精确匹配
}

func (x *RunTimeFilters) Reset() {
	*x = RunTimeFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTimeFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTimeFilters) ProtoMessage() {}

func (x *RunTimeFilters) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTimeFilters.ProtoReflect.Descriptor instead.
func (*RunTimeFilters) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{12}
}

func (x *RunTimeFilters) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunTimeFilters) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *RunTimeFilters) GetExactMatch() bool {
	if x != nil {
		return x.ExactMatch
	}
	return false
}

// FindOptionCommon 分页，导出参数
type FindOptionCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset     uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`         // 偏移量，默认为0
	Limit      uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           // 需要返回的数量，默认为10
	Order      string `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`            // 排序方式
	By         string `protobuf:"bytes,4,opt,name=by,proto3" json:"by,omitempty"`                  // 排序字段
	BusinessId int32  `protobuf:"varint,5,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,6,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *FindOptionCommon) Reset() {
	*x = FindOptionCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOptionCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOptionCommon) ProtoMessage() {}

func (x *FindOptionCommon) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOptionCommon.ProtoReflect.Descriptor instead.
func (*FindOptionCommon) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{13}
}

func (x *FindOptionCommon) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FindOptionCommon) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindOptionCommon) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *FindOptionCommon) GetBy() string {
	if x != nil {
		return x.By
	}
	return ""
}

func (x *FindOptionCommon) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *FindOptionCommon) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// SummaryRequest 统计数据入参
type SummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SummaryRequest) Reset() {
	*x = SummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryRequest) ProtoMessage() {}

func (x *SummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryRequest.ProtoReflect.Descriptor instead.
func (*SummaryRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{14}
}

// SummaryResp 统计数据出参
type SummaryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TodayIncreaseUserCount                     uint32 `protobuf:"varint,1,opt,name=todayIncreaseUserCount,proto3" json:"todayIncreaseUserCount,omitempty"`                                          // 今日新增用户数
	YesterdayIncreaseUserCount                 uint32 `protobuf:"varint,2,opt,name=yesterdayIncreaseUserCount,proto3" json:"yesterdayIncreaseUserCount,omitempty"`                                  // 昨日新增用户数
	TotalUserCount                             uint32 `protobuf:"varint,3,opt,name=totalUserCount,proto3" json:"totalUserCount,omitempty"`                                                          // 总用户数
	TodayMeasureCount                          uint32 `protobuf:"varint,4,opt,name=todayMeasureCount,proto3" json:"todayMeasureCount,omitempty"`                                                    // 今日测量次数
	YesterdayMeasureCount                      uint32 `protobuf:"varint,5,opt,name=yesterdayMeasureCount,proto3" json:"yesterdayMeasureCount,omitempty"`                                            // 昨日测量次数
	OpenStatusMachinesCount                    uint32 `protobuf:"varint,6,opt,name=openStatusMachinesCount,proto3" json:"openStatusMachinesCount,omitempty"`                                        // 运行状态的设备数
	MachinesCount                              uint32 `protobuf:"varint,7,opt,name=machinesCount,proto3" json:"machinesCount,omitempty"`                                                            // 设备总数
	SkinCareProductCount                       uint32 `protobuf:"varint,8,opt,name=skinCareProductCount,proto3" json:"skinCareProductCount,omitempty"`                                              // 护肤产品数量
	CosmeticsProductCount                      uint32 `protobuf:"varint,9,opt,name=cosmeticsProductCount,proto3" json:"cosmeticsProductCount,omitempty"`                                            // 化妆品数量
	TodayUserActivityCount                     uint32 `protobuf:"varint,10,opt,name=todayUserActivityCount,proto3" json:"todayUserActivityCount,omitempty"`                                         // 今日用户活动次数
	NextDayUserRetainedCount                   uint32 `protobuf:"varint,11,opt,name=nextDayUserRetainedCount,proto3" json:"nextDayUserRetainedCount,omitempty"`                                     // 次日留存用户数
	TodaySkinReportOpenCount                   uint32 `protobuf:"varint,12,opt,name=todaySkinReportOpenCount,proto3" json:"todaySkinReportOpenCount,omitempty"`                                     // 今日皮肤报告打开次数
	TodaySkinRecordDimensionTendencyClickCount uint32 `protobuf:"varint,13,opt,name=todaySkinRecordDimensionTendencyClickCount,proto3" json:"todaySkinRecordDimensionTendencyClickCount,omitempty"` // 今日皮肤记录维度趋势点击次数
	TodaySkinReportDimensionDetailOpenCount    uint32 `protobuf:"varint,14,opt,name=todaySkinReportDimensionDetailOpenCount,proto3" json:"todaySkinReportDimensionDetailOpenCount,omitempty"`       // 今日皮肤报告维度详情打开次数
	TodaySkinRecordOpenCount                   uint32 `protobuf:"varint,15,opt,name=todaySkinRecordOpenCount,proto3" json:"todaySkinRecordOpenCount,omitempty"`                                     // 今日皮肤记录打开次数
	TodayCoursePlayCount                       uint32 `protobuf:"varint,16,opt,name=todayCoursePlayCount,proto3" json:"todayCoursePlayCount,omitempty"`                                             // 今日课程播放次数
	TodayCourseCollectClickCount               uint32 `protobuf:"varint,17,opt,name=todayCourseCollectClickCount,proto3" json:"todayCourseCollectClickCount,omitempty"`                             // 今日课程收藏点击次数
	TodayCourseProductClickCount               uint32 `protobuf:"varint,18,opt,name=todayCourseProductClickCount,proto3" json:"todayCourseProductClickCount,omitempty"`                             // 今日课程产品点击次数
	TodayCourseOpenCount                       uint32 `protobuf:"varint,19,opt,name=todayCourseOpenCount,proto3" json:"todayCourseOpenCount,omitempty"`                                             // 今日课程打开次数
	YesterdayCourseOpenCount                   uint32 `protobuf:"varint,20,opt,name=yesterdayCourseOpenCount,proto3" json:"yesterdayCourseOpenCount,omitempty"`                                     // 昨日课程打开次数
}

func (x *SummaryResp) Reset() {
	*x = SummaryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryResp) ProtoMessage() {}

func (x *SummaryResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryResp.ProtoReflect.Descriptor instead.
func (*SummaryResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{15}
}

func (x *SummaryResp) GetTodayIncreaseUserCount() uint32 {
	if x != nil {
		return x.TodayIncreaseUserCount
	}
	return 0
}

func (x *SummaryResp) GetYesterdayIncreaseUserCount() uint32 {
	if x != nil {
		return x.YesterdayIncreaseUserCount
	}
	return 0
}

func (x *SummaryResp) GetTotalUserCount() uint32 {
	if x != nil {
		return x.TotalUserCount
	}
	return 0
}

func (x *SummaryResp) GetTodayMeasureCount() uint32 {
	if x != nil {
		return x.TodayMeasureCount
	}
	return 0
}

func (x *SummaryResp) GetYesterdayMeasureCount() uint32 {
	if x != nil {
		return x.YesterdayMeasureCount
	}
	return 0
}

func (x *SummaryResp) GetOpenStatusMachinesCount() uint32 {
	if x != nil {
		return x.OpenStatusMachinesCount
	}
	return 0
}

func (x *SummaryResp) GetMachinesCount() uint32 {
	if x != nil {
		return x.MachinesCount
	}
	return 0
}

func (x *SummaryResp) GetSkinCareProductCount() uint32 {
	if x != nil {
		return x.SkinCareProductCount
	}
	return 0
}

func (x *SummaryResp) GetCosmeticsProductCount() uint32 {
	if x != nil {
		return x.CosmeticsProductCount
	}
	return 0
}

func (x *SummaryResp) GetTodayUserActivityCount() uint32 {
	if x != nil {
		return x.TodayUserActivityCount
	}
	return 0
}

func (x *SummaryResp) GetNextDayUserRetainedCount() uint32 {
	if x != nil {
		return x.NextDayUserRetainedCount
	}
	return 0
}

func (x *SummaryResp) GetTodaySkinReportOpenCount() uint32 {
	if x != nil {
		return x.TodaySkinReportOpenCount
	}
	return 0
}

func (x *SummaryResp) GetTodaySkinRecordDimensionTendencyClickCount() uint32 {
	if x != nil {
		return x.TodaySkinRecordDimensionTendencyClickCount
	}
	return 0
}

func (x *SummaryResp) GetTodaySkinReportDimensionDetailOpenCount() uint32 {
	if x != nil {
		return x.TodaySkinReportDimensionDetailOpenCount
	}
	return 0
}

func (x *SummaryResp) GetTodaySkinRecordOpenCount() uint32 {
	if x != nil {
		return x.TodaySkinRecordOpenCount
	}
	return 0
}

func (x *SummaryResp) GetTodayCoursePlayCount() uint32 {
	if x != nil {
		return x.TodayCoursePlayCount
	}
	return 0
}

func (x *SummaryResp) GetTodayCourseCollectClickCount() uint32 {
	if x != nil {
		return x.TodayCourseCollectClickCount
	}
	return 0
}

func (x *SummaryResp) GetTodayCourseProductClickCount() uint32 {
	if x != nil {
		return x.TodayCourseProductClickCount
	}
	return 0
}

func (x *SummaryResp) GetTodayCourseOpenCount() uint32 {
	if x != nil {
		return x.TodayCourseOpenCount
	}
	return 0
}

func (x *SummaryResp) GetYesterdayCourseOpenCount() uint32 {
	if x != nil {
		return x.YesterdayCourseOpenCount
	}
	return 0
}

// ExportSummaryRequest 导出统计数据入参
type ExportSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   string   `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`     // 开始时间
	EndTime     string   `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`         // 结束时间
	SelectModel []string `protobuf:"bytes,3,rep,name=selectModel,proto3" json:"selectModel,omitempty"` // 选择模型
}

func (x *ExportSummaryRequest) Reset() {
	*x = ExportSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportSummaryRequest) ProtoMessage() {}

func (x *ExportSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportSummaryRequest.ProtoReflect.Descriptor instead.
func (*ExportSummaryRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{16}
}

func (x *ExportSummaryRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ExportSummaryRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ExportSummaryRequest) GetSelectModel() []string {
	if x != nil {
		return x.SelectModel
	}
	return nil
}

// DurationSummaryResp 统计数据出参
type ExportSummaryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportDate string `protobuf:"bytes,1,opt,name=exportDate,proto3" json:"exportDate,omitempty"` // 导出日期
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`          // 计数
}

func (x *ExportSummaryItem) Reset() {
	*x = ExportSummaryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportSummaryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportSummaryItem) ProtoMessage() {}

func (x *ExportSummaryItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportSummaryItem.ProtoReflect.Descriptor instead.
func (*ExportSummaryItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{17}
}

func (x *ExportSummaryItem) GetExportDate() string {
	if x != nil {
		return x.ExportDate
	}
	return ""
}

func (x *ExportSummaryItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// durationSummaryResp
type DurationSummaryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TodayIncreaseUserCount                     []*ExportSummaryItem `protobuf:"bytes,1,rep,name=todayIncreaseUserCount,proto3" json:"todayIncreaseUserCount,omitempty"`                                          // 今日新增用户数量列表
	YesterdayIncreaseUserCount                 []*ExportSummaryItem `protobuf:"bytes,2,rep,name=yesterdayIncreaseUserCount,proto3" json:"yesterdayIncreaseUserCount,omitempty"`                                  // 昨日新增用户数量列表
	TotalUserCount                             []*ExportSummaryItem `protobuf:"bytes,3,rep,name=totalUserCount,proto3" json:"totalUserCount,omitempty"`                                                          // 总用户数量列表
	TodayMeasureCount                          []*ExportSummaryItem `protobuf:"bytes,4,rep,name=todayMeasureCount,proto3" json:"todayMeasureCount,omitempty"`                                                    // 今日测量次数列表
	YesterdayMeasureCount                      []*ExportSummaryItem `protobuf:"bytes,5,rep,name=yesterdayMeasureCount,proto3" json:"yesterdayMeasureCount,omitempty"`                                            // 昨日测量次数列表
	OpenStatusMachinesCount                    []*ExportSummaryItem `protobuf:"bytes,6,rep,name=openStatusMachinesCount,proto3" json:"openStatusMachinesCount,omitempty"`                                        // 运行状态设备数量列表
	MachinesCount                              []*ExportSummaryItem `protobuf:"bytes,7,rep,name=machinesCount,proto3" json:"machinesCount,omitempty"`                                                            // 设备总数量列表
	SkinCareProductCount                       []*ExportSummaryItem `protobuf:"bytes,8,rep,name=skinCareProductCount,proto3" json:"skinCareProductCount,omitempty"`                                              // 护肤产品数量列表
	CosmeticsProductCount                      []*ExportSummaryItem `protobuf:"bytes,9,rep,name=cosmeticsProductCount,proto3" json:"cosmeticsProductCount,omitempty"`                                            // 化妆品数量列表
	TodayUserActivityCount                     []*ExportSummaryItem `protobuf:"bytes,10,rep,name=todayUserActivityCount,proto3" json:"todayUserActivityCount,omitempty"`                                         // 今日用户活动次数列表
	NextDayUserRetainedCount                   []*ExportSummaryItem `protobuf:"bytes,11,rep,name=nextDayUserRetainedCount,proto3" json:"nextDayUserRetainedCount,omitempty"`                                     // 次日留存用户数量列表
	TodaySkinReportOpenCount                   []*ExportSummaryItem `protobuf:"bytes,12,rep,name=todaySkinReportOpenCount,proto3" json:"todaySkinReportOpenCount,omitempty"`                                     // 今日皮肤报告打开次数列表
	TodaySkinRecordDimensionTendencyClickCount []*ExportSummaryItem `protobuf:"bytes,13,rep,name=todaySkinRecordDimensionTendencyClickCount,proto3" json:"todaySkinRecordDimensionTendencyClickCount,omitempty"` // 今日皮肤记录维度趋势点击次数列表
	TodaySkinReportDimensionDetailOpenCount    []*ExportSummaryItem `protobuf:"bytes,14,rep,name=todaySkinReportDimensionDetailOpenCount,proto3" json:"todaySkinReportDimensionDetailOpenCount,omitempty"`       // 今日皮肤报告维度详情打开次数列表
	TodaySkinRecordOpenCount                   []*ExportSummaryItem `protobuf:"bytes,15,rep,name=todaySkinRecordOpenCount,proto3" json:"todaySkinRecordOpenCount,omitempty"`                                     // 今日皮肤记录打开次数列表
	TodayCoursePlayCount                       []*ExportSummaryItem `protobuf:"bytes,16,rep,name=todayCoursePlayCount,proto3" json:"todayCoursePlayCount,omitempty"`                                             // 今日课程播放次数列表
	TodayCourseCollectClickCount               []*ExportSummaryItem `protobuf:"bytes,17,rep,name=todayCourseCollectClickCount,proto3" json:"todayCourseCollectClickCount,omitempty"`                             // 今日课程收藏点击次数列表
	TodayCourseProductClickCount               []*ExportSummaryItem `protobuf:"bytes,18,rep,name=todayCourseProductClickCount,proto3" json:"todayCourseProductClickCount,omitempty"`                             // 今日课程产品点击次数列表
	TodayCourseOpenCount                       []*ExportSummaryItem `protobuf:"bytes,19,rep,name=todayCourseOpenCount,proto3" json:"todayCourseOpenCount,omitempty"`                                             // 今日课程打开次数列表
	YesterdayCourseOpenCount                   []*ExportSummaryItem `protobuf:"bytes,20,rep,name=yesterdayCourseOpenCount,proto3" json:"yesterdayCourseOpenCount,omitempty"`                                     // 昨日课程打开次数列表
}

func (x *DurationSummaryResp) Reset() {
	*x = DurationSummaryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DurationSummaryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DurationSummaryResp) ProtoMessage() {}

func (x *DurationSummaryResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DurationSummaryResp.ProtoReflect.Descriptor instead.
func (*DurationSummaryResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{18}
}

func (x *DurationSummaryResp) GetTodayIncreaseUserCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodayIncreaseUserCount
	}
	return nil
}

func (x *DurationSummaryResp) GetYesterdayIncreaseUserCount() []*ExportSummaryItem {
	if x != nil {
		return x.YesterdayIncreaseUserCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTotalUserCount() []*ExportSummaryItem {
	if x != nil {
		return x.TotalUserCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodayMeasureCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodayMeasureCount
	}
	return nil
}

func (x *DurationSummaryResp) GetYesterdayMeasureCount() []*ExportSummaryItem {
	if x != nil {
		return x.YesterdayMeasureCount
	}
	return nil
}

func (x *DurationSummaryResp) GetOpenStatusMachinesCount() []*ExportSummaryItem {
	if x != nil {
		return x.OpenStatusMachinesCount
	}
	return nil
}

func (x *DurationSummaryResp) GetMachinesCount() []*ExportSummaryItem {
	if x != nil {
		return x.MachinesCount
	}
	return nil
}

func (x *DurationSummaryResp) GetSkinCareProductCount() []*ExportSummaryItem {
	if x != nil {
		return x.SkinCareProductCount
	}
	return nil
}

func (x *DurationSummaryResp) GetCosmeticsProductCount() []*ExportSummaryItem {
	if x != nil {
		return x.CosmeticsProductCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodayUserActivityCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodayUserActivityCount
	}
	return nil
}

func (x *DurationSummaryResp) GetNextDayUserRetainedCount() []*ExportSummaryItem {
	if x != nil {
		return x.NextDayUserRetainedCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodaySkinReportOpenCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodaySkinReportOpenCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodaySkinRecordDimensionTendencyClickCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodaySkinRecordDimensionTendencyClickCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodaySkinReportDimensionDetailOpenCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodaySkinReportDimensionDetailOpenCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodaySkinRecordOpenCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodaySkinRecordOpenCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodayCoursePlayCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodayCoursePlayCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodayCourseCollectClickCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodayCourseCollectClickCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodayCourseProductClickCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodayCourseProductClickCount
	}
	return nil
}

func (x *DurationSummaryResp) GetTodayCourseOpenCount() []*ExportSummaryItem {
	if x != nil {
		return x.TodayCourseOpenCount
	}
	return nil
}

func (x *DurationSummaryResp) GetYesterdayCourseOpenCount() []*ExportSummaryItem {
	if x != nil {
		return x.YesterdayCourseOpenCount
	}
	return nil
}

// exportSummaryResp  导出统计数据出参
type ExportSummaryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadUrl string `protobuf:"bytes,1,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"` // 下载链接
}

func (x *ExportSummaryResp) Reset() {
	*x = ExportSummaryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportSummaryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportSummaryResp) ProtoMessage() {}

func (x *ExportSummaryResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportSummaryResp.ProtoReflect.Descriptor instead.
func (*ExportSummaryResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{19}
}

func (x *ExportSummaryResp) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

// loginRequest 登录入参
type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`         // 用户名
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{20}
}

func (x *LoginRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// loginResp 登录出参
type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           *ManagerInfo      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`                     // 用户信息
	PermissionList []*PermissionInfo `protobuf:"bytes,2,rep,name=permissionList,proto3" json:"permissionList,omitempty"` // 权限列表
	Err            *ErrCode          `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`                       // 错误代码
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{21}
}

func (x *LoginResp) GetUser() *ManagerInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginResp) GetPermissionList() []*PermissionInfo {
	if x != nil {
		return x.PermissionList
	}
	return nil
}

func (x *LoginResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// listUserRequest 查询用户列表入参
type ListUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListUserRequest) Reset() {
	*x = ListUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRequest) ProtoMessage() {}

func (x *ListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{22}
}

func (x *ListUserRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListUserRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// listManagerRequest 查询管理员列表入参
type ListManagerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`        // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"`  // 查询选项
	BusinessId int32             `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32             `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *ListManagerRequest) Reset() {
	*x = ListManagerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListManagerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagerRequest) ProtoMessage() {}

func (x *ListManagerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagerRequest.ProtoReflect.Descriptor instead.
func (*ListManagerRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{23}
}

func (x *ListManagerRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListManagerRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

func (x *ListManagerRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ListManagerRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// ListManagerResp 查询管理员列表出参
type ListManagerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListUserRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListManagerResp) Reset() {
	*x = ListManagerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListManagerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagerResp) ProtoMessage() {}

func (x *ListManagerResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagerResp.ProtoReflect.Descriptor instead.
func (*ListManagerResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{24}
}

func (x *ListManagerResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListManagerResp) GetList() []*ListUserRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// ListUserResp 查询用户列表出参
type ListUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListUserRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListUserResp) Reset() {
	*x = ListUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResp) ProtoMessage() {}

func (x *ListUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResp.ProtoReflect.Descriptor instead.
func (*ListUserResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{25}
}

func (x *ListUserResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUserResp) GetList() []*ListUserRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// ListUserRespItem 查询用户列表出参Item
type ListUserRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *ManagerInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 用户信息
}

func (x *ListUserRespItem) Reset() {
	*x = ListUserRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRespItem) ProtoMessage() {}

func (x *ListUserRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRespItem.ProtoReflect.Descriptor instead.
func (*ListUserRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{26}
}

func (x *ListUserRespItem) GetUser() *ManagerInfo {
	if x != nil {
		return x.User
	}
	return nil
}

// ModPasswdRequest 修改密码入参
type ModPasswdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`           // 用户ID
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`       // 密码
	NewPassword string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"` // 新密码
}

func (x *ModPasswdRequest) Reset() {
	*x = ModPasswdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModPasswdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModPasswdRequest) ProtoMessage() {}

func (x *ModPasswdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModPasswdRequest.ProtoReflect.Descriptor instead.
func (*ModPasswdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{27}
}

func (x *ModPasswdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ModPasswdRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ModPasswdRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// ModPasswdResp 修改密码出参
type ModPasswdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误代码
}

func (x *ModPasswdResp) Reset() {
	*x = ModPasswdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModPasswdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModPasswdResp) ProtoMessage() {}

func (x *ModPasswdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModPasswdResp.ProtoReflect.Descriptor instead.
func (*ModPasswdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{28}
}

func (x *ModPasswdResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// ModUserInfoRequest 修改用户信息入参
type ModUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string       `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	User      *ManagerInfo `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`           // 用户信息
	RoleId    uint64       `protobuf:"varint,3,opt,name=roleId,proto3" json:"roleId,omitempty"`      // 角色ID
}

func (x *ModUserInfoRequest) Reset() {
	*x = ModUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModUserInfoRequest) ProtoMessage() {}

func (x *ModUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModUserInfoRequest.ProtoReflect.Descriptor instead.
func (*ModUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{29}
}

func (x *ModUserInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModUserInfoRequest) GetUser() *ManagerInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ModUserInfoRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// ModUserInfoResp 修改用户信息出参
type ModUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误代码
}

func (x *ModUserInfoResp) Reset() {
	*x = ModUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModUserInfoResp) ProtoMessage() {}

func (x *ModUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModUserInfoResp.ProtoReflect.Descriptor instead.
func (*ModUserInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{30}
}

func (x *ModUserInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// DelUserRequest 删除用户入参
type DelUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string   `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`   // 操作用户ID
	UserIdList []string `protobuf:"bytes,2,rep,name=userIdList,proto3" json:"userIdList,omitempty"` // 用户ID列表
}

func (x *DelUserRequest) Reset() {
	*x = DelUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserRequest) ProtoMessage() {}

func (x *DelUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserRequest.ProtoReflect.Descriptor instead.
func (*DelUserRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{31}
}

func (x *DelUserRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelUserRequest) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

// DelUserResp 删除用户出参
type DelUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelUserResp) Reset() {
	*x = DelUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserResp) ProtoMessage() {}

func (x *DelUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserResp.ProtoReflect.Descriptor instead.
func (*DelUserResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{32}
}

// ModUserStatusRequest 修改用户状态入参
type ModUserStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string   `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`   // 操作用户ID
	UserIdList []string `protobuf:"bytes,2,rep,name=userIdList,proto3" json:"userIdList,omitempty"` // 用户ID列表
	Status     bool     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`        // 状态
}

func (x *ModUserStatusRequest) Reset() {
	*x = ModUserStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModUserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModUserStatusRequest) ProtoMessage() {}

func (x *ModUserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModUserStatusRequest.ProtoReflect.Descriptor instead.
func (*ModUserStatusRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{33}
}

func (x *ModUserStatusRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModUserStatusRequest) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *ModUserStatusRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// ModUserStatusResp 修改用户状态出参
type ModUserStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModUserStatusResp) Reset() {
	*x = ModUserStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModUserStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModUserStatusResp) ProtoMessage() {}

func (x *ModUserStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModUserStatusResp.ProtoReflect.Descriptor instead.
func (*ModUserStatusResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{34}
}

// AddUserRequest 添加用户入参
type AddUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string       `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	User      *ManagerInfo `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`           // 用户信息
	RoleName  string       `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName,omitempty"`   // 角色名
	RoleId    uint64       `protobuf:"varint,4,opt,name=roleId,proto3" json:"roleId,omitempty"`      // 角色ID
	ShopId    int32        `protobuf:"varint,5,opt,name=shopId,proto3" json:"shopId,omitempty"`      // 商店ID
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{35}
}

func (x *AddUserRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddUserRequest) GetUser() *ManagerInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AddUserRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AddUserRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AddUserRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// AddUserResp 添加用户出参
type AddUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误代码
}

func (x *AddUserResp) Reset() {
	*x = AddUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResp) ProtoMessage() {}

func (x *AddUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResp.ProtoReflect.Descriptor instead.
func (*AddUserResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{36}
}

func (x *AddUserResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// ExportUserRequest 导出用户入参
type ExportUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    string            `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`       // 用户名
	Filters []*RunTimeFilters `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"` // 运行时过滤器列表
}

func (x *ExportUserRequest) Reset() {
	*x = ExportUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserRequest) ProtoMessage() {}

func (x *ExportUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserRequest.ProtoReflect.Descriptor instead.
func (*ExportUserRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{37}
}

func (x *ExportUserRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ExportUserRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ExportUserResp 导出用户出参
type ExportUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadUrl string `protobuf:"bytes,1,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"` // 下载链接
}

func (x *ExportUserResp) Reset() {
	*x = ExportUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserResp) ProtoMessage() {}

func (x *ExportUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserResp.ProtoReflect.Descriptor instead.
func (*ExportUserResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{38}
}

func (x *ExportUserResp) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

// UploadFileRequest 文件上传入参
type UploadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`               // 用户名
	FileNameUrl string `protobuf:"bytes,2,opt,name=fileNameUrl,proto3" json:"fileNameUrl,omitempty"` // 文件名URL
	FileName    string `protobuf:"bytes,3,opt,name=fileName,proto3" json:"fileName,omitempty"`       // 文件名
	FileType    string `protobuf:"bytes,4,opt,name=fileType,proto3" json:"fileType,omitempty"`       // 文件类型
	RecordsId   string `protobuf:"bytes,5,opt,name=recordsId,proto3" json:"recordsId,omitempty"`     // 记录ID
	FileBytes   []byte `protobuf:"bytes,6,opt,name=fileBytes,proto3" json:"fileBytes,omitempty"`     // 文件内容
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{39}
}

func (x *UploadFileRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UploadFileRequest) GetFileNameUrl() string {
	if x != nil {
		return x.FileNameUrl
	}
	return ""
}

func (x *UploadFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *UploadFileRequest) GetRecordsId() string {
	if x != nil {
		return x.RecordsId
	}
	return ""
}

func (x *UploadFileRequest) GetFileBytes() []byte {
	if x != nil {
		return x.FileBytes
	}
	return nil
}

// UploadFileResp 文件上传出参
type UploadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadUrl string `protobuf:"bytes,1,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"` // 下载链接
}

func (x *UploadFileResp) Reset() {
	*x = UploadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResp) ProtoMessage() {}

func (x *UploadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResp.ProtoReflect.Descriptor instead.
func (*UploadFileResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{40}
}

func (x *UploadFileResp) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

// AddRoleInfoRequest 添加角色信息入参
type AddRoleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string    `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Role      *RoleInfo `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`           // 角色信息
}

func (x *AddRoleInfoRequest) Reset() {
	*x = AddRoleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleInfoRequest) ProtoMessage() {}

func (x *AddRoleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleInfoRequest.ProtoReflect.Descriptor instead.
func (*AddRoleInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{41}
}

func (x *AddRoleInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddRoleInfoRequest) GetRole() *RoleInfo {
	if x != nil {
		return x.Role
	}
	return nil
}

// AddRoleInfoResp 添加角色信息出参
type AddRoleInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误代码
}

func (x *AddRoleInfoResp) Reset() {
	*x = AddRoleInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleInfoResp) ProtoMessage() {}

func (x *AddRoleInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleInfoResp.ProtoReflect.Descriptor instead.
func (*AddRoleInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{42}
}

func (x *AddRoleInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// ModRoleInfoRequest 修改角色信息入参
type ModRoleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string    `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Role      *RoleInfo `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`           // 角色信息
}

func (x *ModRoleInfoRequest) Reset() {
	*x = ModRoleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModRoleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModRoleInfoRequest) ProtoMessage() {}

func (x *ModRoleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModRoleInfoRequest.ProtoReflect.Descriptor instead.
func (*ModRoleInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{43}
}

func (x *ModRoleInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModRoleInfoRequest) GetRole() *RoleInfo {
	if x != nil {
		return x.Role
	}
	return nil
}

// ModRoleInfoResp 修改角色信息出参
type ModRoleInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误代码
}

func (x *ModRoleInfoResp) Reset() {
	*x = ModRoleInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModRoleInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModRoleInfoResp) ProtoMessage() {}

func (x *ModRoleInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModRoleInfoResp.ProtoReflect.Descriptor instead.
func (*ModRoleInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{44}
}

func (x *ModRoleInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// DelRoleInfoRequest 删除角色入参
type DelRoleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int32 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // 角色ID集合，支持批量删除
}

func (x *DelRoleInfoRequest) Reset() {
	*x = DelRoleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRoleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRoleInfoRequest) ProtoMessage() {}

func (x *DelRoleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRoleInfoRequest.ProtoReflect.Descriptor instead.
func (*DelRoleInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{45}
}

func (x *DelRoleInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelRoleInfoRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// DelRoleInfoResp 删除角色出参
type DelRoleInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误代码
}

func (x *DelRoleInfoResp) Reset() {
	*x = DelRoleInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRoleInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRoleInfoResp) ProtoMessage() {}

func (x *DelRoleInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRoleInfoResp.ProtoReflect.Descriptor instead.
func (*DelRoleInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{46}
}

func (x *DelRoleInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// ListRoleRequest 查询角色列表入参
type ListRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListRoleRequest) Reset() {
	*x = ListRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleRequest) ProtoMessage() {}

func (x *ListRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleRequest.ProtoReflect.Descriptor instead.
func (*ListRoleRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{47}
}

func (x *ListRoleRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListRoleRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// ListRoleResp 查询角色列表出参
type ListRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListRoleRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListRoleResp) Reset() {
	*x = ListRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleResp) ProtoMessage() {}

func (x *ListRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleResp.ProtoReflect.Descriptor instead.
func (*ListRoleResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{48}
}

func (x *ListRoleResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRoleResp) GetList() []*ListRoleRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// ListRoleRespItem 查询角色列表出参Item
type ListRoleRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info            *RoleInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`                        // 角色信息
	RelateUserCount uint32    `protobuf:"varint,2,opt,name=relateUserCount,proto3" json:"relateUserCount,omitempty"` // 相关用户数量
}

func (x *ListRoleRespItem) Reset() {
	*x = ListRoleRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleRespItem) ProtoMessage() {}

func (x *ListRoleRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleRespItem.ProtoReflect.Descriptor instead.
func (*ListRoleRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{49}
}

func (x *ListRoleRespItem) GetInfo() *RoleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ListRoleRespItem) GetRelateUserCount() uint32 {
	if x != nil {
		return x.RelateUserCount
	}
	return 0
}

// FronzenRoleRequest 冻结角色入参
type FrozenRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId   string   `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`     // 操作用户ID
	RoleNameSet []string `protobuf:"bytes,2,rep,name=roleNameSet,proto3" json:"roleNameSet,omitempty"` // 角色名集合
}

func (x *FrozenRoleRequest) Reset() {
	*x = FrozenRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenRoleRequest) ProtoMessage() {}

func (x *FrozenRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenRoleRequest.ProtoReflect.Descriptor instead.
func (*FrozenRoleRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{50}
}

func (x *FrozenRoleRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *FrozenRoleRequest) GetRoleNameSet() []string {
	if x != nil {
		return x.RoleNameSet
	}
	return nil
}

// FrozenRoleResp 冻结角色出参
type FrozenRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrozenRoleResp) Reset() {
	*x = FrozenRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenRoleResp) ProtoMessage() {}

func (x *FrozenRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenRoleResp.ProtoReflect.Descriptor instead.
func (*FrozenRoleResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{51}
}

// RecoverRoleRequest 恢复角色入参
type RecoverRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId   string   `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`     // 操作用户ID
	RoleNameSet []string `protobuf:"bytes,2,rep,name=roleNameSet,proto3" json:"roleNameSet,omitempty"` // 角色名集合
}

func (x *RecoverRoleRequest) Reset() {
	*x = RecoverRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverRoleRequest) ProtoMessage() {}

func (x *RecoverRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverRoleRequest.ProtoReflect.Descriptor instead.
func (*RecoverRoleRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{52}
}

func (x *RecoverRoleRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *RecoverRoleRequest) GetRoleNameSet() []string {
	if x != nil {
		return x.RoleNameSet
	}
	return nil
}

// RecoverRoleResp 恢复角色出参
type RecoverRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecoverRoleResp) Reset() {
	*x = RecoverRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverRoleResp) ProtoMessage() {}

func (x *RecoverRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverRoleResp.ProtoReflect.Descriptor instead.
func (*RecoverRoleResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{53}
}

// AddMeasureSkinDimensionRequest 新增测肤维度文案入参
type AddMeasureSkinDimensionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string                    `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	ShopId     int32                     `protobuf:"varint,2,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
	BusinessId int32                     `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	Info       *MeasureSkinDimensionInfo `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`              // 测肤维度文案信息
}

func (x *AddMeasureSkinDimensionRequest) Reset() {
	*x = AddMeasureSkinDimensionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMeasureSkinDimensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMeasureSkinDimensionRequest) ProtoMessage() {}

func (x *AddMeasureSkinDimensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMeasureSkinDimensionRequest.ProtoReflect.Descriptor instead.
func (*AddMeasureSkinDimensionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{54}
}

func (x *AddMeasureSkinDimensionRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddMeasureSkinDimensionRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *AddMeasureSkinDimensionRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *AddMeasureSkinDimensionRequest) GetInfo() *MeasureSkinDimensionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// AddMeasureSkinDimensionResp 新增测服维度文案出参
type AddMeasureSkinDimensionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误代码
}

func (x *AddMeasureSkinDimensionResp) Reset() {
	*x = AddMeasureSkinDimensionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMeasureSkinDimensionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMeasureSkinDimensionResp) ProtoMessage() {}

func (x *AddMeasureSkinDimensionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMeasureSkinDimensionResp.ProtoReflect.Descriptor instead.
func (*AddMeasureSkinDimensionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{55}
}

func (x *AddMeasureSkinDimensionResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// ListMeasureSkinDimensionRequest 查询测肤维度文案列表入参
type ListMeasureSkinDimensionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListMeasureSkinDimensionRequest) Reset() {
	*x = ListMeasureSkinDimensionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureSkinDimensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureSkinDimensionRequest) ProtoMessage() {}

func (x *ListMeasureSkinDimensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureSkinDimensionRequest.ProtoReflect.Descriptor instead.
func (*ListMeasureSkinDimensionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{56}
}

func (x *ListMeasureSkinDimensionRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListMeasureSkinDimensionRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// ListMeasureSkinDimensionResp 查询测肤维度文案列表出参
type ListMeasureSkinDimensionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListMeasureSkinDimensionRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListMeasureSkinDimensionResp) Reset() {
	*x = ListMeasureSkinDimensionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureSkinDimensionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureSkinDimensionResp) ProtoMessage() {}

func (x *ListMeasureSkinDimensionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureSkinDimensionResp.ProtoReflect.Descriptor instead.
func (*ListMeasureSkinDimensionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{57}
}

func (x *ListMeasureSkinDimensionResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMeasureSkinDimensionResp) GetList() []*ListMeasureSkinDimensionRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// ListMeasureSkinDimensionRespItem 查询测肤维度文案出参Item
type ListMeasureSkinDimensionRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MeasureSkinDimensionInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 测肤维度文案信息
}

func (x *ListMeasureSkinDimensionRespItem) Reset() {
	*x = ListMeasureSkinDimensionRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureSkinDimensionRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureSkinDimensionRespItem) ProtoMessage() {}

func (x *ListMeasureSkinDimensionRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureSkinDimensionRespItem.ProtoReflect.Descriptor instead.
func (*ListMeasureSkinDimensionRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{58}
}

func (x *ListMeasureSkinDimensionRespItem) GetInfo() *MeasureSkinDimensionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// ModMeasureSkinDimensionRequest 修改测肤维度文案入参
type ModMeasureSkinDimensionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string                    `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *MeasureSkinDimensionInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 测肤维度文案信息
}

func (x *ModMeasureSkinDimensionRequest) Reset() {
	*x = ModMeasureSkinDimensionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMeasureSkinDimensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMeasureSkinDimensionRequest) ProtoMessage() {}

func (x *ModMeasureSkinDimensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMeasureSkinDimensionRequest.ProtoReflect.Descriptor instead.
func (*ModMeasureSkinDimensionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{59}
}

func (x *ModMeasureSkinDimensionRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModMeasureSkinDimensionRequest) GetInfo() *MeasureSkinDimensionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// ModMeasureSkinDimensionResp 修改测肤维度文案出参
type ModMeasureSkinDimensionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModMeasureSkinDimensionResp) Reset() {
	*x = ModMeasureSkinDimensionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMeasureSkinDimensionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMeasureSkinDimensionResp) ProtoMessage() {}

func (x *ModMeasureSkinDimensionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMeasureSkinDimensionResp.ProtoReflect.Descriptor instead.
func (*ModMeasureSkinDimensionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{60}
}

// DelMeasureSkinDimensionRequest 删除测肤维度方案入参
type DelMeasureSkinDimensionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelMeasureSkinDimensionRequest) Reset() {
	*x = DelMeasureSkinDimensionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMeasureSkinDimensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMeasureSkinDimensionRequest) ProtoMessage() {}

func (x *DelMeasureSkinDimensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMeasureSkinDimensionRequest.ProtoReflect.Descriptor instead.
func (*DelMeasureSkinDimensionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{61}
}

func (x *DelMeasureSkinDimensionRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelMeasureSkinDimensionRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// DelMeasureSkinDimensionResp 删除测肤维度方案出参
type DelMeasureSkinDimensionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMeasureSkinDimensionResp) Reset() {
	*x = DelMeasureSkinDimensionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMeasureSkinDimensionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMeasureSkinDimensionResp) ProtoMessage() {}

func (x *DelMeasureSkinDimensionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMeasureSkinDimensionResp.ProtoReflect.Descriptor instead.
func (*DelMeasureSkinDimensionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{62}
}

// AddMeasureDimensionSettingRequest 新增检测维度设置入参
type AddMeasureDimensionSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string                       `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Info       *MeasureDimensionSettingInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`              // 检测维度设置信息
	BusinessId int32                        `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32                        `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *AddMeasureDimensionSettingRequest) Reset() {
	*x = AddMeasureDimensionSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMeasureDimensionSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMeasureDimensionSettingRequest) ProtoMessage() {}

func (x *AddMeasureDimensionSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMeasureDimensionSettingRequest.ProtoReflect.Descriptor instead.
func (*AddMeasureDimensionSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{63}
}

func (x *AddMeasureDimensionSettingRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddMeasureDimensionSettingRequest) GetInfo() *MeasureDimensionSettingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AddMeasureDimensionSettingRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *AddMeasureDimensionSettingRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// AddMeasureDimensionSettingResp 新增检测维度设置出参
type AddMeasureDimensionSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMeasureDimensionSettingResp) Reset() {
	*x = AddMeasureDimensionSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMeasureDimensionSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMeasureDimensionSettingResp) ProtoMessage() {}

func (x *AddMeasureDimensionSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMeasureDimensionSettingResp.ProtoReflect.Descriptor instead.
func (*AddMeasureDimensionSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{64}
}

// ListMeasureDimensionSettingRequest 查询检测维度设置列表入参
type ListMeasureDimensionSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListMeasureDimensionSettingRequest) Reset() {
	*x = ListMeasureDimensionSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureDimensionSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureDimensionSettingRequest) ProtoMessage() {}

func (x *ListMeasureDimensionSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureDimensionSettingRequest.ProtoReflect.Descriptor instead.
func (*ListMeasureDimensionSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{65}
}

func (x *ListMeasureDimensionSettingRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListMeasureDimensionSettingRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// ListMeasureDimensionSettingResp 查询检测维度设置列表出参
type ListMeasureDimensionSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListMeasureDimensionSettingRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListMeasureDimensionSettingResp) Reset() {
	*x = ListMeasureDimensionSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureDimensionSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureDimensionSettingResp) ProtoMessage() {}

func (x *ListMeasureDimensionSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureDimensionSettingResp.ProtoReflect.Descriptor instead.
func (*ListMeasureDimensionSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{66}
}

func (x *ListMeasureDimensionSettingResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMeasureDimensionSettingResp) GetList() []*ListMeasureDimensionSettingRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// ListMeasureDimensionSettingRespItem 查询检测维度设置列表出参Item
type ListMeasureDimensionSettingRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MeasureDimensionSettingInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 检测维度设置信息
}

func (x *ListMeasureDimensionSettingRespItem) Reset() {
	*x = ListMeasureDimensionSettingRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureDimensionSettingRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureDimensionSettingRespItem) ProtoMessage() {}

func (x *ListMeasureDimensionSettingRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureDimensionSettingRespItem.ProtoReflect.Descriptor instead.
func (*ListMeasureDimensionSettingRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{67}
}

func (x *ListMeasureDimensionSettingRespItem) GetInfo() *MeasureDimensionSettingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// ModMeasureDimensionSettingRequest 修改检测维度设置入参
type ModMeasureDimensionSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string                       `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *MeasureDimensionSettingInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 检测维度设置信息
}

func (x *ModMeasureDimensionSettingRequest) Reset() {
	*x = ModMeasureDimensionSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMeasureDimensionSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMeasureDimensionSettingRequest) ProtoMessage() {}

func (x *ModMeasureDimensionSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMeasureDimensionSettingRequest.ProtoReflect.Descriptor instead.
func (*ModMeasureDimensionSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{68}
}

func (x *ModMeasureDimensionSettingRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModMeasureDimensionSettingRequest) GetInfo() *MeasureDimensionSettingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// ModMeasureDimensionSettingResp 修改检测维度设置出参
type ModMeasureDimensionSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModMeasureDimensionSettingResp) Reset() {
	*x = ModMeasureDimensionSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMeasureDimensionSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMeasureDimensionSettingResp) ProtoMessage() {}

func (x *ModMeasureDimensionSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMeasureDimensionSettingResp.ProtoReflect.Descriptor instead.
func (*ModMeasureDimensionSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{69}
}

// DelMeasureDimensionSettingRequest 删除检测维度设置入参
type DelMeasureDimensionSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelMeasureDimensionSettingRequest) Reset() {
	*x = DelMeasureDimensionSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMeasureDimensionSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMeasureDimensionSettingRequest) ProtoMessage() {}

func (x *DelMeasureDimensionSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMeasureDimensionSettingRequest.ProtoReflect.Descriptor instead.
func (*DelMeasureDimensionSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{70}
}

func (x *DelMeasureDimensionSettingRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelMeasureDimensionSettingRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// DelMeasureDimensionSettingResp 删除检测维度设置出参
type DelMeasureDimensionSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMeasureDimensionSettingResp) Reset() {
	*x = DelMeasureDimensionSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMeasureDimensionSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMeasureDimensionSettingResp) ProtoMessage() {}

func (x *DelMeasureDimensionSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMeasureDimensionSettingResp.ProtoReflect.Descriptor instead.
func (*DelMeasureDimensionSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{71}
}

// ReportSetting 报告设置
type ReportSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableAdvice  int32  `protobuf:"varint,1,opt,name=disableAdvice,proto3" json:"disableAdvice,omitempty"`   // 禁用建议
	DisableProduct int32  `protobuf:"varint,2,opt,name=disableProduct,proto3" json:"disableProduct,omitempty"` // 禁用产品
	DisableProject int32  `protobuf:"varint,3,opt,name=disableProject,proto3" json:"disableProject,omitempty"` // 禁用项目
	AdviceTitle    string `protobuf:"bytes,4,opt,name=adviceTitle,proto3" json:"adviceTitle,omitempty"`        // 建议标题
	ProductTitle   string `protobuf:"bytes,5,opt,name=productTitle,proto3" json:"productTitle,omitempty"`      // 产品标题
	ProjectTitle   string `protobuf:"bytes,6,opt,name=projectTitle,proto3" json:"projectTitle,omitempty"`      // 项目标题
	DisableDoctor  int32  `protobuf:"varint,7,opt,name=disableDoctor,proto3" json:"disableDoctor,omitempty"`   // 禁用医生
	DoctorTitle    string `protobuf:"bytes,8,opt,name=doctorTitle,proto3" json:"doctorTitle,omitempty"`        // 医生标题
}

func (x *ReportSetting) Reset() {
	*x = ReportSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSetting) ProtoMessage() {}

func (x *ReportSetting) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSetting.ProtoReflect.Descriptor instead.
func (*ReportSetting) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{72}
}

func (x *ReportSetting) GetDisableAdvice() int32 {
	if x != nil {
		return x.DisableAdvice
	}
	return 0
}

func (x *ReportSetting) GetDisableProduct() int32 {
	if x != nil {
		return x.DisableProduct
	}
	return 0
}

func (x *ReportSetting) GetDisableProject() int32 {
	if x != nil {
		return x.DisableProject
	}
	return 0
}

func (x *ReportSetting) GetAdviceTitle() string {
	if x != nil {
		return x.AdviceTitle
	}
	return ""
}

func (x *ReportSetting) GetProductTitle() string {
	if x != nil {
		return x.ProductTitle
	}
	return ""
}

func (x *ReportSetting) GetProjectTitle() string {
	if x != nil {
		return x.ProjectTitle
	}
	return ""
}

func (x *ReportSetting) GetDisableDoctor() int32 {
	if x != nil {
		return x.DisableDoctor
	}
	return 0
}

func (x *ReportSetting) GetDoctorTitle() string {
	if x != nil {
		return x.DoctorTitle
	}
	return ""
}

// 新增报告设置请求
type AddReportSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings   *ReportSetting `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`      // 报告设置信息
	BusinessId int32          `protobuf:"varint,2,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32          `protobuf:"varint,3,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *AddReportSettingReq) Reset() {
	*x = AddReportSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReportSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReportSettingReq) ProtoMessage() {}

func (x *AddReportSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReportSettingReq.ProtoReflect.Descriptor instead.
func (*AddReportSettingReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{73}
}

func (x *AddReportSettingReq) GetSettings() *ReportSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *AddReportSettingReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *AddReportSettingReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 新增报告设置响应
type AddReportSettingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AddReportSettingRsp) Reset() {
	*x = AddReportSettingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReportSettingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReportSettingRsp) ProtoMessage() {}

func (x *AddReportSettingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReportSettingRsp.ProtoReflect.Descriptor instead.
func (*AddReportSettingRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{74}
}

func (x *AddReportSettingRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 删除报告设置请求
type DelReportSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId int32 `protobuf:"varint,1,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32 `protobuf:"varint,2,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *DelReportSettingReq) Reset() {
	*x = DelReportSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReportSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReportSettingReq) ProtoMessage() {}

func (x *DelReportSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReportSettingReq.ProtoReflect.Descriptor instead.
func (*DelReportSettingReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{75}
}

func (x *DelReportSettingReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *DelReportSettingReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 删除报告设置响应
type DelReportSettingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelReportSettingRsp) Reset() {
	*x = DelReportSettingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReportSettingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReportSettingRsp) ProtoMessage() {}

func (x *DelReportSettingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReportSettingRsp.ProtoReflect.Descriptor instead.
func (*DelReportSettingRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{76}
}

func (x *DelReportSettingRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 修改报告设置请求
type ModReportSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        *ErrCode       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`                // 错误码
	Settings   *ReportSetting `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`      // 报告设置信息
	BusinessId int32          `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32          `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *ModReportSettingReq) Reset() {
	*x = ModReportSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModReportSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModReportSettingReq) ProtoMessage() {}

func (x *ModReportSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModReportSettingReq.ProtoReflect.Descriptor instead.
func (*ModReportSettingReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{77}
}

func (x *ModReportSettingReq) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ModReportSettingReq) GetSettings() *ReportSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ModReportSettingReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ModReportSettingReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 修改报告设置响应
type ModReportSettingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModReportSettingRsp) Reset() {
	*x = ModReportSettingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModReportSettingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModReportSettingRsp) ProtoMessage() {}

func (x *ModReportSettingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModReportSettingRsp.ProtoReflect.Descriptor instead.
func (*ModReportSettingRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{78}
}

func (x *ModReportSettingRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 查询报告设置请求
type ListReportSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId int32 `protobuf:"varint,1,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32 `protobuf:"varint,2,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *ListReportSettingReq) Reset() {
	*x = ListReportSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportSettingReq) ProtoMessage() {}

func (x *ListReportSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportSettingReq.ProtoReflect.Descriptor instead.
func (*ListReportSettingReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{79}
}

func (x *ListReportSettingReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ListReportSettingReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 查询报告设置响应
type ListReportSettingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        *ErrCode       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`               // 错误码
	Settings   *ReportSetting `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`     // 报告设置信息
	CreateTime string         `protobuf:"bytes,3,opt,name=createTime,proto3" json:"createTime,omitempty"` // 创建时间
	UpdateTime string         `protobuf:"bytes,4,opt,name=updateTime,proto3" json:"updateTime,omitempty"` // 更新时间
}

func (x *ListReportSettingRsp) Reset() {
	*x = ListReportSettingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportSettingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportSettingRsp) ProtoMessage() {}

func (x *ListReportSettingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportSettingRsp.ProtoReflect.Descriptor instead.
func (*ListReportSettingRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{80}
}

func (x *ListReportSettingRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ListReportSettingRsp) GetSettings() *ReportSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ListReportSettingRsp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListReportSettingRsp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 新增产品字典请求
type AddProductDictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string           `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *ProductDictInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 产品字典信息
}

func (x *AddProductDictRequest) Reset() {
	*x = AddProductDictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductDictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductDictRequest) ProtoMessage() {}

func (x *AddProductDictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductDictRequest.ProtoReflect.Descriptor instead.
func (*AddProductDictRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{81}
}

func (x *AddProductDictRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddProductDictRequest) GetInfo() *ProductDictInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新增产品字典响应
type AddProductDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`     // 错误码
	Id    int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`      // ID
	Value string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"` // 值
}

func (x *AddProductDictResp) Reset() {
	*x = AddProductDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductDictResp) ProtoMessage() {}

func (x *AddProductDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductDictResp.ProtoReflect.Descriptor instead.
func (*AddProductDictResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{82}
}

func (x *AddProductDictResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *AddProductDictResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddProductDictResp) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// 查询产品字典请求
type ListProductDictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListProductDictRequest) Reset() {
	*x = ListProductDictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductDictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductDictRequest) ProtoMessage() {}

func (x *ListProductDictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductDictRequest.ProtoReflect.Descriptor instead.
func (*ListProductDictRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{83}
}

func (x *ListProductDictRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListProductDictRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询产品字典响应
type ListProductDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListProductDictRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListProductDictResp) Reset() {
	*x = ListProductDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductDictResp) ProtoMessage() {}

func (x *ListProductDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductDictResp.ProtoReflect.Descriptor instead.
func (*ListProductDictResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{84}
}

func (x *ListProductDictResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProductDictResp) GetList() []*ListProductDictRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询产品字典响应项
type ListProductDictRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ProductDictInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 产品字典信息
}

func (x *ListProductDictRespItem) Reset() {
	*x = ListProductDictRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductDictRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductDictRespItem) ProtoMessage() {}

func (x *ListProductDictRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductDictRespItem.ProtoReflect.Descriptor instead.
func (*ListProductDictRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{85}
}

func (x *ListProductDictRespItem) GetInfo() *ProductDictInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改产品字典请求
type ModProductDictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string           `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *ProductDictInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 产品字典信息
}

func (x *ModProductDictRequest) Reset() {
	*x = ModProductDictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModProductDictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModProductDictRequest) ProtoMessage() {}

func (x *ModProductDictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModProductDictRequest.ProtoReflect.Descriptor instead.
func (*ModProductDictRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{86}
}

func (x *ModProductDictRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModProductDictRequest) GetInfo() *ProductDictInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改产品字典响应
type ModProductDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModProductDictResp) Reset() {
	*x = ModProductDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModProductDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModProductDictResp) ProtoMessage() {}

func (x *ModProductDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModProductDictResp.ProtoReflect.Descriptor instead.
func (*ModProductDictResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{87}
}

func (x *ModProductDictResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 删除产品字典请求
type DelProductDictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Ids        []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`        // ID列表
	BusinessId int32   `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32   `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *DelProductDictRequest) Reset() {
	*x = DelProductDictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelProductDictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelProductDictRequest) ProtoMessage() {}

func (x *DelProductDictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelProductDictRequest.ProtoReflect.Descriptor instead.
func (*DelProductDictRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{88}
}

func (x *DelProductDictRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelProductDictRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DelProductDictRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *DelProductDictRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 删除产品字典响应
type DelProductDictResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelProductDictResp) Reset() {
	*x = DelProductDictResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelProductDictResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelProductDictResp) ProtoMessage() {}

func (x *DelProductDictResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelProductDictResp.ProtoReflect.Descriptor instead.
func (*DelProductDictResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{89}
}

func (x *DelProductDictResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 新增推送消息请求
type AddPushMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string           `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *PushMessageInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 推送消息信息
}

func (x *AddPushMessageRequest) Reset() {
	*x = AddPushMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPushMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPushMessageRequest) ProtoMessage() {}

func (x *AddPushMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPushMessageRequest.ProtoReflect.Descriptor instead.
func (*AddPushMessageRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{90}
}

func (x *AddPushMessageRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddPushMessageRequest) GetInfo() *PushMessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新增推送消息响应
type AddPushMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPushMessageResp) Reset() {
	*x = AddPushMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPushMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPushMessageResp) ProtoMessage() {}

func (x *AddPushMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPushMessageResp.ProtoReflect.Descriptor instead.
func (*AddPushMessageResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{91}
}

// 查询推送消息请求
type ListPushMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListPushMessageRequest) Reset() {
	*x = ListPushMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushMessageRequest) ProtoMessage() {}

func (x *ListPushMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushMessageRequest.ProtoReflect.Descriptor instead.
func (*ListPushMessageRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{92}
}

func (x *ListPushMessageRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListPushMessageRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询推送消息响应
type ListPushMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListPushMessageRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListPushMessageResp) Reset() {
	*x = ListPushMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushMessageResp) ProtoMessage() {}

func (x *ListPushMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushMessageResp.ProtoReflect.Descriptor instead.
func (*ListPushMessageResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{93}
}

func (x *ListPushMessageResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPushMessageResp) GetList() []*ListPushMessageRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询推送消息响应项
type ListPushMessageRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PushMessageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 推送消息信息
}

func (x *ListPushMessageRespItem) Reset() {
	*x = ListPushMessageRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushMessageRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushMessageRespItem) ProtoMessage() {}

func (x *ListPushMessageRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushMessageRespItem.ProtoReflect.Descriptor instead.
func (*ListPushMessageRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{94}
}

func (x *ListPushMessageRespItem) GetInfo() *PushMessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改推送消息请求
type ModPushMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string           `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *PushMessageInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 推送消息信息
}

func (x *ModPushMessageRequest) Reset() {
	*x = ModPushMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModPushMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModPushMessageRequest) ProtoMessage() {}

func (x *ModPushMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModPushMessageRequest.ProtoReflect.Descriptor instead.
func (*ModPushMessageRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{95}
}

func (x *ModPushMessageRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModPushMessageRequest) GetInfo() *PushMessageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改推送消息响应
type ModPushMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModPushMessageResp) Reset() {
	*x = ModPushMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModPushMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModPushMessageResp) ProtoMessage() {}

func (x *ModPushMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModPushMessageResp.ProtoReflect.Descriptor instead.
func (*ModPushMessageResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{96}
}

// 删除推送消息请求
type DelPushMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelPushMessageRequest) Reset() {
	*x = DelPushMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPushMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPushMessageRequest) ProtoMessage() {}

func (x *DelPushMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPushMessageRequest.ProtoReflect.Descriptor instead.
func (*DelPushMessageRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{97}
}

func (x *DelPushMessageRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelPushMessageRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除推送消息响应
type DelPushMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelPushMessageResp) Reset() {
	*x = DelPushMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPushMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPushMessageResp) ProtoMessage() {}

func (x *DelPushMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPushMessageResp.ProtoReflect.Descriptor instead.
func (*DelPushMessageResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{98}
}

// 查询问题请求
type ListIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListIssueRequest) Reset() {
	*x = ListIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssueRequest) ProtoMessage() {}

func (x *ListIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssueRequest.ProtoReflect.Descriptor instead.
func (*ListIssueRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{99}
}

func (x *ListIssueRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListIssueRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询问题响应
type ListIssueResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListIssueRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListIssueResp) Reset() {
	*x = ListIssueResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIssueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssueResp) ProtoMessage() {}

func (x *ListIssueResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssueResp.ProtoReflect.Descriptor instead.
func (*ListIssueResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{100}
}

func (x *ListIssueResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListIssueResp) GetList() []*ListIssueRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询问题响应项
type ListIssueRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *IssueInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 问题信息
}

func (x *ListIssueRespItem) Reset() {
	*x = ListIssueRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIssueRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssueRespItem) ProtoMessage() {}

func (x *ListIssueRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssueRespItem.ProtoReflect.Descriptor instead.
func (*ListIssueRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{101}
}

func (x *ListIssueRespItem) GetInfo() *IssueInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改问题请求
type ModIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string     `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *IssueInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 问题信息
}

func (x *ModIssueRequest) Reset() {
	*x = ModIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModIssueRequest) ProtoMessage() {}

func (x *ModIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModIssueRequest.ProtoReflect.Descriptor instead.
func (*ModIssueRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{102}
}

func (x *ModIssueRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModIssueRequest) GetInfo() *IssueInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改问题响应
type ModIssueResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModIssueResp) Reset() {
	*x = ModIssueResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModIssueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModIssueResp) ProtoMessage() {}

func (x *ModIssueResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModIssueResp.ProtoReflect.Descriptor instead.
func (*ModIssueResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{103}
}

// 删除问题请求
type DelIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelIssueRequest) Reset() {
	*x = DelIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIssueRequest) ProtoMessage() {}

func (x *DelIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIssueRequest.ProtoReflect.Descriptor instead.
func (*DelIssueRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{104}
}

func (x *DelIssueRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelIssueRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除问题响应
type DelIssueResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelIssueResp) Reset() {
	*x = DelIssueResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIssueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIssueResp) ProtoMessage() {}

func (x *DelIssueResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIssueResp.ProtoReflect.Descriptor instead.
func (*DelIssueResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{105}
}

// 查询美妆镜列表请求
type ListMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListMachinesRequest) Reset() {
	*x = ListMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRequest) ProtoMessage() {}

func (x *ListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesRequest.ProtoReflect.Descriptor instead.
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{106}
}

func (x *ListMachinesRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListMachinesRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询美妆镜列表响应
type ListMachinesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListMachinesRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListMachinesResp) Reset() {
	*x = ListMachinesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesResp) ProtoMessage() {}

func (x *ListMachinesResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesResp.ProtoReflect.Descriptor instead.
func (*ListMachinesResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{107}
}

func (x *ListMachinesResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMachinesResp) GetList() []*ListMachinesRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询美妆镜列表响应项
type ListMachinesRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MachinesInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 美妆镜信息
}

func (x *ListMachinesRespItem) Reset() {
	*x = ListMachinesRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRespItem) ProtoMessage() {}

func (x *ListMachinesRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesRespItem.ProtoReflect.Descriptor instead.
func (*ListMachinesRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{108}
}

func (x *ListMachinesRespItem) GetInfo() *MachinesInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 美妆镜管理信息
type MachinesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                          // ID
	DeviceCode      string `protobuf:"bytes,2,opt,name=deviceCode,proto3" json:"deviceCode,omitempty"`           // 设备代码
	DeviceType      string `protobuf:"bytes,3,opt,name=deviceType,proto3" json:"deviceType,omitempty"`           // 设备类型
	LoginStatus     string `protobuf:"bytes,4,opt,name=loginStatus,proto3" json:"loginStatus,omitempty"`         // 登录状态
	SystemVersion   string `protobuf:"bytes,5,opt,name=systemVersion,proto3" json:"systemVersion,omitempty"`     // 系统版本
	SoftwareVersion string `protobuf:"bytes,6,opt,name=softwareVersion,proto3" json:"softwareVersion,omitempty"` // 软件版本
	MacAddress      string `protobuf:"bytes,7,opt,name=macAddress,proto3" json:"macAddress,omitempty"`           // MAC地址
	UserId          int64  `protobuf:"varint,8,opt,name=userId,proto3" json:"userId,omitempty"`                  // 用户ID
	User            string `protobuf:"bytes,9,opt,name=user,proto3" json:"user,omitempty"`                       // 用户
	ActivationTime  string `protobuf:"bytes,10,opt,name=activationTime,proto3" json:"activationTime,omitempty"`  // 激活时间
	LastLoginTime   string `protobuf:"bytes,11,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`    // 最后登录时间
	CreateTime      string `protobuf:"bytes,12,opt,name=createTime,proto3" json:"createTime,omitempty"`          // 创建时间
	UpdateTime      string `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`          // 更新时间
	ShopId          int32  `protobuf:"varint,14,opt,name=shopId,proto3" json:"shopId,omitempty"`                 // 商店ID
	BusinessId      int32  `protobuf:"varint,15,opt,name=businessId,proto3" json:"businessId,omitempty"`         // 业务ID
	BusinessName    string `protobuf:"bytes,16,opt,name=businessName,proto3" json:"businessName,omitempty"`      // 业务名称
	ShopName        string `protobuf:"bytes,17,opt,name=shopName,proto3" json:"shopName,omitempty"`              // 商店名称
}

func (x *MachinesInfo) Reset() {
	*x = MachinesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachinesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachinesInfo) ProtoMessage() {}

func (x *MachinesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachinesInfo.ProtoReflect.Descriptor instead.
func (*MachinesInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{109}
}

func (x *MachinesInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MachinesInfo) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *MachinesInfo) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *MachinesInfo) GetLoginStatus() string {
	if x != nil {
		return x.LoginStatus
	}
	return ""
}

func (x *MachinesInfo) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *MachinesInfo) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *MachinesInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *MachinesInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MachinesInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MachinesInfo) GetActivationTime() string {
	if x != nil {
		return x.ActivationTime
	}
	return ""
}

func (x *MachinesInfo) GetLastLoginTime() string {
	if x != nil {
		return x.LastLoginTime
	}
	return ""
}

func (x *MachinesInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MachinesInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MachinesInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *MachinesInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *MachinesInfo) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *MachinesInfo) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

// 美妆镜新增请求
type AddMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string        `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *MachinesInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 美妆镜信息
}

func (x *AddMachinesRequest) Reset() {
	*x = AddMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachinesRequest) ProtoMessage() {}

func (x *AddMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMachinesRequest.ProtoReflect.Descriptor instead.
func (*AddMachinesRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{110}
}

func (x *AddMachinesRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddMachinesRequest) GetInfo() *MachinesInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 美妆镜新增响应
type AddMachinesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMachinesResp) Reset() {
	*x = AddMachinesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMachinesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachinesResp) ProtoMessage() {}

func (x *AddMachinesResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMachinesResp.ProtoReflect.Descriptor instead.
func (*AddMachinesResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{111}
}

// 美妆镜删除请求
type DelMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelMachinesRequest) Reset() {
	*x = DelMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMachinesRequest) ProtoMessage() {}

func (x *DelMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMachinesRequest.ProtoReflect.Descriptor instead.
func (*DelMachinesRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{112}
}

func (x *DelMachinesRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelMachinesRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 美妆镜删除响应
type DelMachinesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMachinesResp) Reset() {
	*x = DelMachinesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMachinesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMachinesResp) ProtoMessage() {}

func (x *DelMachinesResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMachinesResp.ProtoReflect.Descriptor instead.
func (*DelMachinesResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{113}
}

// 美妆镜编辑请求
type ModMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string        `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *MachinesInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 美妆镜信息
}

func (x *ModMachinesRequest) Reset() {
	*x = ModMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMachinesRequest) ProtoMessage() {}

func (x *ModMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMachinesRequest.ProtoReflect.Descriptor instead.
func (*ModMachinesRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{114}
}

func (x *ModMachinesRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModMachinesRequest) GetInfo() *MachinesInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 美妆镜编辑响应
type ModMachinesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModMachinesResp) Reset() {
	*x = ModMachinesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMachinesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMachinesResp) ProtoMessage() {}

func (x *ModMachinesResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMachinesResp.ProtoReflect.Descriptor instead.
func (*ModMachinesResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{115}
}

// 待机轮播图信息
type MachinesIdleResInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // 名称
	Type       int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`              // 类型
	Desc       string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`               // 描述
	Picture1   string `protobuf:"bytes,5,opt,name=picture1,proto3" json:"picture1,omitempty"`       // 图片1
	Picture2   string `protobuf:"bytes,6,opt,name=picture2,proto3" json:"picture2,omitempty"`       // 图片2
	Picture3   string `protobuf:"bytes,7,opt,name=picture3,proto3" json:"picture3,omitempty"`       // 图片3
	Picture4   string `protobuf:"bytes,8,opt,name=picture4,proto3" json:"picture4,omitempty"`       // 图片4
	VideoUrl   string `protobuf:"bytes,9,opt,name=videoUrl,proto3" json:"videoUrl,omitempty"`       // 视频URL
	CreateTime string `protobuf:"bytes,10,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	UpdateTime string `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  // 更新时间
	BusinessId int32  `protobuf:"varint,12,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,13,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *MachinesIdleResInfo) Reset() {
	*x = MachinesIdleResInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachinesIdleResInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachinesIdleResInfo) ProtoMessage() {}

func (x *MachinesIdleResInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachinesIdleResInfo.ProtoReflect.Descriptor instead.
func (*MachinesIdleResInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{116}
}

func (x *MachinesIdleResInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MachinesIdleResInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachinesIdleResInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MachinesIdleResInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MachinesIdleResInfo) GetPicture1() string {
	if x != nil {
		return x.Picture1
	}
	return ""
}

func (x *MachinesIdleResInfo) GetPicture2() string {
	if x != nil {
		return x.Picture2
	}
	return ""
}

func (x *MachinesIdleResInfo) GetPicture3() string {
	if x != nil {
		return x.Picture3
	}
	return ""
}

func (x *MachinesIdleResInfo) GetPicture4() string {
	if x != nil {
		return x.Picture4
	}
	return ""
}

func (x *MachinesIdleResInfo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *MachinesIdleResInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MachinesIdleResInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MachinesIdleResInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *MachinesIdleResInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 待机轮播图列表项
type ListMachinesIdleResRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MachinesIdleResInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 待机轮播图信息
}

func (x *ListMachinesIdleResRespItem) Reset() {
	*x = ListMachinesIdleResRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesIdleResRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesIdleResRespItem) ProtoMessage() {}

func (x *ListMachinesIdleResRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesIdleResRespItem.ProtoReflect.Descriptor instead.
func (*ListMachinesIdleResRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{117}
}

func (x *ListMachinesIdleResRespItem) GetInfo() *MachinesIdleResInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 待机轮播图管理列表请求
type ListMachinesIdleResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListMachinesIdleResRequest) Reset() {
	*x = ListMachinesIdleResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesIdleResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesIdleResRequest) ProtoMessage() {}

func (x *ListMachinesIdleResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesIdleResRequest.ProtoReflect.Descriptor instead.
func (*ListMachinesIdleResRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{118}
}

func (x *ListMachinesIdleResRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListMachinesIdleResRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 待机轮播图管理列表响应
type ListMachinesIdleResResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListMachinesIdleResRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListMachinesIdleResResp) Reset() {
	*x = ListMachinesIdleResResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesIdleResResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesIdleResResp) ProtoMessage() {}

func (x *ListMachinesIdleResResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesIdleResResp.ProtoReflect.Descriptor instead.
func (*ListMachinesIdleResResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{119}
}

func (x *ListMachinesIdleResResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMachinesIdleResResp) GetList() []*ListMachinesIdleResRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 待机轮播图管理新增请求
type AddMachinesIdleResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string               `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *MachinesIdleResInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 待机轮播图信息
}

func (x *AddMachinesIdleResRequest) Reset() {
	*x = AddMachinesIdleResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMachinesIdleResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachinesIdleResRequest) ProtoMessage() {}

func (x *AddMachinesIdleResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMachinesIdleResRequest.ProtoReflect.Descriptor instead.
func (*AddMachinesIdleResRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{120}
}

func (x *AddMachinesIdleResRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddMachinesIdleResRequest) GetInfo() *MachinesIdleResInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 待机轮播图管理新增响应
type AddMachinesIdleResResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMachinesIdleResResp) Reset() {
	*x = AddMachinesIdleResResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMachinesIdleResResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMachinesIdleResResp) ProtoMessage() {}

func (x *AddMachinesIdleResResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMachinesIdleResResp.ProtoReflect.Descriptor instead.
func (*AddMachinesIdleResResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{121}
}

// 待机轮播图管理删除请求
type DelMachinesIdleResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`              // ID
}

func (x *DelMachinesIdleResRequest) Reset() {
	*x = DelMachinesIdleResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMachinesIdleResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMachinesIdleResRequest) ProtoMessage() {}

func (x *DelMachinesIdleResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMachinesIdleResRequest.ProtoReflect.Descriptor instead.
func (*DelMachinesIdleResRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{122}
}

func (x *DelMachinesIdleResRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelMachinesIdleResRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 待机轮播图管理删除响应
type DelMachinesIdleResResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMachinesIdleResResp) Reset() {
	*x = DelMachinesIdleResResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMachinesIdleResResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMachinesIdleResResp) ProtoMessage() {}

func (x *DelMachinesIdleResResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMachinesIdleResResp.ProtoReflect.Descriptor instead.
func (*DelMachinesIdleResResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{123}
}

// 待机轮播图管理编辑请求
type ModMachinesIdleResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string               `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *MachinesIdleResInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 待机轮播图信息
}

func (x *ModMachinesIdleResRequest) Reset() {
	*x = ModMachinesIdleResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMachinesIdleResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMachinesIdleResRequest) ProtoMessage() {}

func (x *ModMachinesIdleResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMachinesIdleResRequest.ProtoReflect.Descriptor instead.
func (*ModMachinesIdleResRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{124}
}

func (x *ModMachinesIdleResRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModMachinesIdleResRequest) GetInfo() *MachinesIdleResInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 待机轮播图管理编辑响应
type ModMachinesIdleResResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModMachinesIdleResResp) Reset() {
	*x = ModMachinesIdleResResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMachinesIdleResResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMachinesIdleResResp) ProtoMessage() {}

func (x *ModMachinesIdleResResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMachinesIdleResResp.ProtoReflect.Descriptor instead.
func (*ModMachinesIdleResResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{125}
}

// 护肤品管理信息
type SkinCareProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                        // ID
	ProductClass      int32            `protobuf:"varint,2,opt,name=productClass,proto3" json:"productClass,omitempty"`                                                                                    // 产品类别
	ProductCode       string           `protobuf:"bytes,3,opt,name=productCode,proto3" json:"productCode,omitempty"`                                                                                       // 产品代码
	Name              string           `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                                                                     // 名称
	SubName           string           `protobuf:"bytes,5,opt,name=subName,proto3" json:"subName,omitempty"`                                                                                               // 子名称
	BrandId           string           `protobuf:"bytes,6,opt,name=brandId,proto3" json:"brandId,omitempty"`                                                                                               // 品牌ID
	Family            string           `protobuf:"bytes,8,opt,name=family,proto3" json:"family,omitempty"`                                                                                                 // 家族
	StandardsId       uint64           `protobuf:"varint,9,opt,name=standardsId,proto3" json:"standardsId,omitempty"`                                                                                      // 标准ID
	StandardsName     string           `protobuf:"bytes,10,opt,name=standardsName,proto3" json:"standardsName,omitempty"`                                                                                  // 标准名称
	StandardsValue    string           `protobuf:"bytes,11,opt,name=standardsValue,proto3" json:"standardsValue,omitempty"`                                                                                // 标准值
	Types             string           `protobuf:"bytes,12,opt,name=types,proto3" json:"types,omitempty"`                                                                                                  // 类型
	Effects           string           `protobuf:"bytes,13,opt,name=effects,proto3" json:"effects,omitempty"`                                                                                              // 效果
	RecommendedReason string           `protobuf:"bytes,14,opt,name=recommendedReason,proto3" json:"recommendedReason,omitempty"`                                                                          // 推荐原因
	Price             string           `protobuf:"bytes,15,opt,name=price,proto3" json:"price,omitempty"`                                                                                                  // 价格
	Thumb             string           `protobuf:"bytes,16,opt,name=thumb,proto3" json:"thumb,omitempty"`                                                                                                  // 缩略图
	DetailPictures    string           `protobuf:"bytes,17,opt,name=detailPictures,proto3" json:"detailPictures,omitempty"`                                                                                // 详细图片
	Introduction      string           `protobuf:"bytes,18,opt,name=introduction,proto3" json:"introduction,omitempty"`                                                                                    // 简介
	Desc              string           `protobuf:"bytes,19,opt,name=desc,proto3" json:"desc,omitempty"`                                                                                                    // 描述
	Link              string           `protobuf:"bytes,20,opt,name=link,proto3" json:"link,omitempty"`                                                                                                    // 链接
	Status            bool             `protobuf:"varint,21,opt,name=status,proto3" json:"status,omitempty"`                                                                                               // 状态
	CreateTime        string           `protobuf:"bytes,23,opt,name=createTime,proto3" json:"createTime,omitempty"`                                                                                        // 创建时间
	UpdateTime        string           `protobuf:"bytes,24,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                                                                                        // 更新时间
	BusinessId        int32            `protobuf:"varint,25,opt,name=businessId,proto3" json:"businessId,omitempty"`                                                                                       // 业务ID
	ShopId            int32            `protobuf:"varint,26,opt,name=shopId,proto3" json:"shopId,omitempty"`                                                                                               // 商店ID
	BrandName         string           `protobuf:"bytes,27,opt,name=brandName,proto3" json:"brandName,omitempty"`                                                                                          // 品牌名称
	ProductTypeId     string           `protobuf:"bytes,28,opt,name=productTypeId,proto3" json:"productTypeId,omitempty"`                                                                                  // 产品类型ID
	ProductTypeName   string           `protobuf:"bytes,29,opt,name=productTypeName,proto3" json:"productTypeName,omitempty"`                                                                              // 产品类型名称
	EffectMap         map[int32]string `protobuf:"bytes,30,rep,name=effectMap,proto3" json:"effectMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 效果映射
}

func (x *SkinCareProductInfo) Reset() {
	*x = SkinCareProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkinCareProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkinCareProductInfo) ProtoMessage() {}

func (x *SkinCareProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkinCareProductInfo.ProtoReflect.Descriptor instead.
func (*SkinCareProductInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{126}
}

func (x *SkinCareProductInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkinCareProductInfo) GetProductClass() int32 {
	if x != nil {
		return x.ProductClass
	}
	return 0
}

func (x *SkinCareProductInfo) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *SkinCareProductInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SkinCareProductInfo) GetSubName() string {
	if x != nil {
		return x.SubName
	}
	return ""
}

func (x *SkinCareProductInfo) GetBrandId() string {
	if x != nil {
		return x.BrandId
	}
	return ""
}

func (x *SkinCareProductInfo) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *SkinCareProductInfo) GetStandardsId() uint64 {
	if x != nil {
		return x.StandardsId
	}
	return 0
}

func (x *SkinCareProductInfo) GetStandardsName() string {
	if x != nil {
		return x.StandardsName
	}
	return ""
}

func (x *SkinCareProductInfo) GetStandardsValue() string {
	if x != nil {
		return x.StandardsValue
	}
	return ""
}

func (x *SkinCareProductInfo) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

func (x *SkinCareProductInfo) GetEffects() string {
	if x != nil {
		return x.Effects
	}
	return ""
}

func (x *SkinCareProductInfo) GetRecommendedReason() string {
	if x != nil {
		return x.RecommendedReason
	}
	return ""
}

func (x *SkinCareProductInfo) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *SkinCareProductInfo) GetThumb() string {
	if x != nil {
		return x.Thumb
	}
	return ""
}

func (x *SkinCareProductInfo) GetDetailPictures() string {
	if x != nil {
		return x.DetailPictures
	}
	return ""
}

func (x *SkinCareProductInfo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *SkinCareProductInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SkinCareProductInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SkinCareProductInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SkinCareProductInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SkinCareProductInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *SkinCareProductInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *SkinCareProductInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SkinCareProductInfo) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *SkinCareProductInfo) GetProductTypeId() string {
	if x != nil {
		return x.ProductTypeId
	}
	return ""
}

func (x *SkinCareProductInfo) GetProductTypeName() string {
	if x != nil {
		return x.ProductTypeName
	}
	return ""
}

func (x *SkinCareProductInfo) GetEffectMap() map[int32]string {
	if x != nil {
		return x.EffectMap
	}
	return nil
}

// 护肤品列表项
type ListSkinCareProductItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SkinCareProductInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 护肤品信息
}

func (x *ListSkinCareProductItem) Reset() {
	*x = ListSkinCareProductItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinCareProductItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinCareProductItem) ProtoMessage() {}

func (x *ListSkinCareProductItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinCareProductItem.ProtoReflect.Descriptor instead.
func (*ListSkinCareProductItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{127}
}

func (x *ListSkinCareProductItem) GetInfo() *SkinCareProductInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 护肤品管理列表请求
type ListSkinCareProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListSkinCareProductRequest) Reset() {
	*x = ListSkinCareProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinCareProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinCareProductRequest) ProtoMessage() {}

func (x *ListSkinCareProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinCareProductRequest.ProtoReflect.Descriptor instead.
func (*ListSkinCareProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{128}
}

func (x *ListSkinCareProductRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListSkinCareProductRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 护肤品管理列表出参
type ListSkinCareProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListSkinCareProductItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListSkinCareProductResp) Reset() {
	*x = ListSkinCareProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinCareProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinCareProductResp) ProtoMessage() {}

func (x *ListSkinCareProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinCareProductResp.ProtoReflect.Descriptor instead.
func (*ListSkinCareProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{129}
}

func (x *ListSkinCareProductResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSkinCareProductResp) GetList() []*ListSkinCareProductItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 护肤品管理新增入参
type AddSkinCareProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string               `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *SkinCareProductInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 护肤品信息
}

func (x *AddSkinCareProductRequest) Reset() {
	*x = AddSkinCareProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSkinCareProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSkinCareProductRequest) ProtoMessage() {}

func (x *AddSkinCareProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSkinCareProductRequest.ProtoReflect.Descriptor instead.
func (*AddSkinCareProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{130}
}

func (x *AddSkinCareProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddSkinCareProductRequest) GetInfo() *SkinCareProductInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 护肤品管理新增出参
type AddSkinCareProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AddSkinCareProductResp) Reset() {
	*x = AddSkinCareProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSkinCareProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSkinCareProductResp) ProtoMessage() {}

func (x *AddSkinCareProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSkinCareProductResp.ProtoReflect.Descriptor instead.
func (*AddSkinCareProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{131}
}

func (x *AddSkinCareProductResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 护肤品管理删除入参
type DelSkinCareProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Ids        []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`        // ID列表
	BusinessId int32   `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *DelSkinCareProductRequest) Reset() {
	*x = DelSkinCareProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSkinCareProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSkinCareProductRequest) ProtoMessage() {}

func (x *DelSkinCareProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSkinCareProductRequest.ProtoReflect.Descriptor instead.
func (*DelSkinCareProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{132}
}

func (x *DelSkinCareProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelSkinCareProductRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DelSkinCareProductRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 护肤品管理删除出参
type DelSkinCareProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSkinCareProductResp) Reset() {
	*x = DelSkinCareProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSkinCareProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSkinCareProductResp) ProtoMessage() {}

func (x *DelSkinCareProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSkinCareProductResp.ProtoReflect.Descriptor instead.
func (*DelSkinCareProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{133}
}

// 护肤品管理编辑入参
type ModSkinCareProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string               `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Info       *SkinCareProductInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`              // 护肤品信息
	BusinessId int32                `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *ModSkinCareProductRequest) Reset() {
	*x = ModSkinCareProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSkinCareProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSkinCareProductRequest) ProtoMessage() {}

func (x *ModSkinCareProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSkinCareProductRequest.ProtoReflect.Descriptor instead.
func (*ModSkinCareProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{134}
}

func (x *ModSkinCareProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModSkinCareProductRequest) GetInfo() *SkinCareProductInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ModSkinCareProductRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 护肤品管理编辑出参
type ModSkinCareProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModSkinCareProductResp) Reset() {
	*x = ModSkinCareProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSkinCareProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSkinCareProductResp) ProtoMessage() {}

func (x *ModSkinCareProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSkinCareProductResp.ProtoReflect.Descriptor instead.
func (*ModSkinCareProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{135}
}

func (x *ModSkinCareProductResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 上架护肤品入参
type UpSkinCareProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string   `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Ids        []uint64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`        // ID列表
	BusinessId int32    `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *UpSkinCareProductRequest) Reset() {
	*x = UpSkinCareProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpSkinCareProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpSkinCareProductRequest) ProtoMessage() {}

func (x *UpSkinCareProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpSkinCareProductRequest.ProtoReflect.Descriptor instead.
func (*UpSkinCareProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{136}
}

func (x *UpSkinCareProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *UpSkinCareProductRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpSkinCareProductRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 上架护肤品出参
type UpSkinCareProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpSkinCareProductResp) Reset() {
	*x = UpSkinCareProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpSkinCareProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpSkinCareProductResp) ProtoMessage() {}

func (x *UpSkinCareProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpSkinCareProductResp.ProtoReflect.Descriptor instead.
func (*UpSkinCareProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{137}
}

// 下架护肤品入参
type DownSkinCareProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string   `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Ids        []uint64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`        // ID列表
	BusinessId int32    `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *DownSkinCareProductRequest) Reset() {
	*x = DownSkinCareProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownSkinCareProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownSkinCareProductRequest) ProtoMessage() {}

func (x *DownSkinCareProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownSkinCareProductRequest.ProtoReflect.Descriptor instead.
func (*DownSkinCareProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{138}
}

func (x *DownSkinCareProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DownSkinCareProductRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DownSkinCareProductRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 下架护肤品出参
type DownSkinCareProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownSkinCareProductResp) Reset() {
	*x = DownSkinCareProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownSkinCareProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownSkinCareProductResp) ProtoMessage() {}

func (x *DownSkinCareProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownSkinCareProductResp.ProtoReflect.Descriptor instead.
func (*DownSkinCareProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{139}
}

// 批量同步推荐产品请求
type BatchSyncRecommendProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`        // ID列表
	BusinessId int32    `protobuf:"varint,2,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32    `protobuf:"varint,3,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
	Status     int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`         // 状态
}

func (x *BatchSyncRecommendProductReq) Reset() {
	*x = BatchSyncRecommendProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSyncRecommendProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSyncRecommendProductReq) ProtoMessage() {}

func (x *BatchSyncRecommendProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSyncRecommendProductReq.ProtoReflect.Descriptor instead.
func (*BatchSyncRecommendProductReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{140}
}

func (x *BatchSyncRecommendProductReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BatchSyncRecommendProductReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *BatchSyncRecommendProductReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *BatchSyncRecommendProductReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type BatchSyncRecommendProductRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *BatchSyncRecommendProductRsp) Reset() {
	*x = BatchSyncRecommendProductRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSyncRecommendProductRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSyncRecommendProductRsp) ProtoMessage() {}

func (x *BatchSyncRecommendProductRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSyncRecommendProductRsp.ProtoReflect.Descriptor instead.
func (*BatchSyncRecommendProductRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{141}
}

func (x *BatchSyncRecommendProductRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 批量同步推荐项目请求
type BatchSyncRecommendProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`        // ID列表
	BusinessId int32    `protobuf:"varint,2,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32    `protobuf:"varint,3,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
	Status     int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`         // 状态
}

func (x *BatchSyncRecommendProjectReq) Reset() {
	*x = BatchSyncRecommendProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSyncRecommendProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSyncRecommendProjectReq) ProtoMessage() {}

func (x *BatchSyncRecommendProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSyncRecommendProjectReq.ProtoReflect.Descriptor instead.
func (*BatchSyncRecommendProjectReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{142}
}

func (x *BatchSyncRecommendProjectReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BatchSyncRecommendProjectReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *BatchSyncRecommendProjectReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *BatchSyncRecommendProjectReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type BatchSyncRecommendProjectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *BatchSyncRecommendProjectRsp) Reset() {
	*x = BatchSyncRecommendProjectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSyncRecommendProjectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSyncRecommendProjectRsp) ProtoMessage() {}

func (x *BatchSyncRecommendProjectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSyncRecommendProjectRsp.ProtoReflect.Descriptor instead.
func (*BatchSyncRecommendProjectRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{143}
}

func (x *BatchSyncRecommendProjectRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 彩妆列表项
type ListCosmeticsProductItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CosmeticsProductInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 彩妆信息
}

func (x *ListCosmeticsProductItem) Reset() {
	*x = ListCosmeticsProductItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCosmeticsProductItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCosmeticsProductItem) ProtoMessage() {}

func (x *ListCosmeticsProductItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCosmeticsProductItem.ProtoReflect.Descriptor instead.
func (*ListCosmeticsProductItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{144}
}

func (x *ListCosmeticsProductItem) GetInfo() *CosmeticsProductInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 彩妆管理列表入参
type ListCosmeticsProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListCosmeticsProductRequest) Reset() {
	*x = ListCosmeticsProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCosmeticsProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCosmeticsProductRequest) ProtoMessage() {}

func (x *ListCosmeticsProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCosmeticsProductRequest.ProtoReflect.Descriptor instead.
func (*ListCosmeticsProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{145}
}

func (x *ListCosmeticsProductRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListCosmeticsProductRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 彩妆管理列表出参
type ListCosmeticsProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListCosmeticsProductItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListCosmeticsProductResp) Reset() {
	*x = ListCosmeticsProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCosmeticsProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCosmeticsProductResp) ProtoMessage() {}

func (x *ListCosmeticsProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCosmeticsProductResp.ProtoReflect.Descriptor instead.
func (*ListCosmeticsProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{146}
}

func (x *ListCosmeticsProductResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCosmeticsProductResp) GetList() []*ListCosmeticsProductItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 彩妆管理新增入参
type AddCosmeticsProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string                `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *CosmeticsProductInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 彩妆信息
}

func (x *AddCosmeticsProductRequest) Reset() {
	*x = AddCosmeticsProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCosmeticsProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCosmeticsProductRequest) ProtoMessage() {}

func (x *AddCosmeticsProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCosmeticsProductRequest.ProtoReflect.Descriptor instead.
func (*AddCosmeticsProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{147}
}

func (x *AddCosmeticsProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddCosmeticsProductRequest) GetInfo() *CosmeticsProductInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 彩妆管理新增出参
type AddCosmeticsProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCosmeticsProductResp) Reset() {
	*x = AddCosmeticsProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCosmeticsProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCosmeticsProductResp) ProtoMessage() {}

func (x *AddCosmeticsProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCosmeticsProductResp.ProtoReflect.Descriptor instead.
func (*AddCosmeticsProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{148}
}

// 彩妆管理删除入参
type DelCosmeticsProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelCosmeticsProductRequest) Reset() {
	*x = DelCosmeticsProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCosmeticsProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCosmeticsProductRequest) ProtoMessage() {}

func (x *DelCosmeticsProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCosmeticsProductRequest.ProtoReflect.Descriptor instead.
func (*DelCosmeticsProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{149}
}

func (x *DelCosmeticsProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelCosmeticsProductRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 彩妆管理删除出参
type DelCosmeticsProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCosmeticsProductResp) Reset() {
	*x = DelCosmeticsProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCosmeticsProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCosmeticsProductResp) ProtoMessage() {}

func (x *DelCosmeticsProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCosmeticsProductResp.ProtoReflect.Descriptor instead.
func (*DelCosmeticsProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{150}
}

// 彩妆管理编辑入参
type ModCosmeticsProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string                `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *CosmeticsProductInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 彩妆信息
}

func (x *ModCosmeticsProductRequest) Reset() {
	*x = ModCosmeticsProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCosmeticsProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCosmeticsProductRequest) ProtoMessage() {}

func (x *ModCosmeticsProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCosmeticsProductRequest.ProtoReflect.Descriptor instead.
func (*ModCosmeticsProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{151}
}

func (x *ModCosmeticsProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModCosmeticsProductRequest) GetInfo() *CosmeticsProductInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// ModCosmeticsProductResp 彩妆管理编辑出参
type ModCosmeticsProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModCosmeticsProductResp) Reset() {
	*x = ModCosmeticsProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCosmeticsProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCosmeticsProductResp) ProtoMessage() {}

func (x *ModCosmeticsProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCosmeticsProductResp.ProtoReflect.Descriptor instead.
func (*ModCosmeticsProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{152}
}

// 上架彩妆入参
type UpCosmeticsProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId          string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                    // 操作用户ID
	CosmeticsProductId int64  `protobuf:"varint,2,opt,name=cosmeticsProductId,proto3" json:"cosmeticsProductId,omitempty"` // 彩妆产品ID
}

func (x *UpCosmeticsProductRequest) Reset() {
	*x = UpCosmeticsProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCosmeticsProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCosmeticsProductRequest) ProtoMessage() {}

func (x *UpCosmeticsProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCosmeticsProductRequest.ProtoReflect.Descriptor instead.
func (*UpCosmeticsProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{153}
}

func (x *UpCosmeticsProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *UpCosmeticsProductRequest) GetCosmeticsProductId() int64 {
	if x != nil {
		return x.CosmeticsProductId
	}
	return 0
}

// 上架彩妆出参
type UpCosmeticsProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpCosmeticsProductResp) Reset() {
	*x = UpCosmeticsProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCosmeticsProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCosmeticsProductResp) ProtoMessage() {}

func (x *UpCosmeticsProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCosmeticsProductResp.ProtoReflect.Descriptor instead.
func (*UpCosmeticsProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{154}
}

// 下架彩妆入参
type DownCosmeticsProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId          string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                    // 操作用户ID
	CosmeticsProductId int64  `protobuf:"varint,2,opt,name=cosmeticsProductId,proto3" json:"cosmeticsProductId,omitempty"` // 彩妆产品ID
}

func (x *DownCosmeticsProductRequest) Reset() {
	*x = DownCosmeticsProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownCosmeticsProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownCosmeticsProductRequest) ProtoMessage() {}

func (x *DownCosmeticsProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownCosmeticsProductRequest.ProtoReflect.Descriptor instead.
func (*DownCosmeticsProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{155}
}

func (x *DownCosmeticsProductRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DownCosmeticsProductRequest) GetCosmeticsProductId() int64 {
	if x != nil {
		return x.CosmeticsProductId
	}
	return 0
}

// 下架彩妆出参
type DownCosmeticsProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownCosmeticsProductResp) Reset() {
	*x = DownCosmeticsProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownCosmeticsProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownCosmeticsProductResp) ProtoMessage() {}

func (x *DownCosmeticsProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownCosmeticsProductResp.ProtoReflect.Descriptor instead.
func (*DownCosmeticsProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{156}
}

// 化妆教程管理信息表
type MichellPhanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              // 名称
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`              // 描述
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`              // 类型
	Images     string `protobuf:"bytes,5,opt,name=images,proto3" json:"images,omitempty"`          // 图片
	Videos     string `protobuf:"bytes,6,opt,name=videos,proto3" json:"videos,omitempty"`          // 视频
	CreateTime string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	UpdateTime string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  // 更新时间
	BusinessId int32  `protobuf:"varint,9,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,10,opt,name=shopId,proto3" json:"shopId,omitempty"`        // 商店ID
}

func (x *MichellPhanInfo) Reset() {
	*x = MichellPhanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MichellPhanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MichellPhanInfo) ProtoMessage() {}

func (x *MichellPhanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MichellPhanInfo.ProtoReflect.Descriptor instead.
func (*MichellPhanInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{157}
}

func (x *MichellPhanInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MichellPhanInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MichellPhanInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MichellPhanInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MichellPhanInfo) GetImages() string {
	if x != nil {
		return x.Images
	}
	return ""
}

func (x *MichellPhanInfo) GetVideos() string {
	if x != nil {
		return x.Videos
	}
	return ""
}

func (x *MichellPhanInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MichellPhanInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MichellPhanInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *MichellPhanInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 化妆教程列表项
type ListMichellPhanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MichellPhanInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 化妆教程信息
}

func (x *ListMichellPhanItem) Reset() {
	*x = ListMichellPhanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMichellPhanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMichellPhanItem) ProtoMessage() {}

func (x *ListMichellPhanItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMichellPhanItem.ProtoReflect.Descriptor instead.
func (*ListMichellPhanItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{158}
}

func (x *ListMichellPhanItem) GetInfo() *MichellPhanInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 化妆教程管理列表入参
type ListMichellPhanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListMichellPhanRequest) Reset() {
	*x = ListMichellPhanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMichellPhanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMichellPhanRequest) ProtoMessage() {}

func (x *ListMichellPhanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMichellPhanRequest.ProtoReflect.Descriptor instead.
func (*ListMichellPhanRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{159}
}

func (x *ListMichellPhanRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListMichellPhanRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 化妆教程管理列表出参
type ListMichellPhanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListMichellPhanItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListMichellPhanResp) Reset() {
	*x = ListMichellPhanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMichellPhanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMichellPhanResp) ProtoMessage() {}

func (x *ListMichellPhanResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMichellPhanResp.ProtoReflect.Descriptor instead.
func (*ListMichellPhanResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{160}
}

func (x *ListMichellPhanResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMichellPhanResp) GetList() []*ListMichellPhanItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 化妆教程管理新增入参
type AddMichellPhanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string           `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *MichellPhanInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 化妆教程信息
}

func (x *AddMichellPhanRequest) Reset() {
	*x = AddMichellPhanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMichellPhanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMichellPhanRequest) ProtoMessage() {}

func (x *AddMichellPhanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMichellPhanRequest.ProtoReflect.Descriptor instead.
func (*AddMichellPhanRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{161}
}

func (x *AddMichellPhanRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddMichellPhanRequest) GetInfo() *MichellPhanInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 化妆教程管理新增出参
type AddMichellPhanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMichellPhanResp) Reset() {
	*x = AddMichellPhanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMichellPhanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMichellPhanResp) ProtoMessage() {}

func (x *AddMichellPhanResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMichellPhanResp.ProtoReflect.Descriptor instead.
func (*AddMichellPhanResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{162}
}

// 化妆教程管理删除入参
type DelMichellPhanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelMichellPhanRequest) Reset() {
	*x = DelMichellPhanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMichellPhanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMichellPhanRequest) ProtoMessage() {}

func (x *DelMichellPhanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMichellPhanRequest.ProtoReflect.Descriptor instead.
func (*DelMichellPhanRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{163}
}

func (x *DelMichellPhanRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelMichellPhanRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 化妆教程管理删除出参
type DelMichellPhanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMichellPhanResp) Reset() {
	*x = DelMichellPhanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMichellPhanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMichellPhanResp) ProtoMessage() {}

func (x *DelMichellPhanResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMichellPhanResp.ProtoReflect.Descriptor instead.
func (*DelMichellPhanResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{164}
}

// 化妆教程管理编辑入参
type ModMichellPhanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string           `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *MichellPhanInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 化妆教程信息
}

func (x *ModMichellPhanRequest) Reset() {
	*x = ModMichellPhanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMichellPhanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMichellPhanRequest) ProtoMessage() {}

func (x *ModMichellPhanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMichellPhanRequest.ProtoReflect.Descriptor instead.
func (*ModMichellPhanRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{165}
}

func (x *ModMichellPhanRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModMichellPhanRequest) GetInfo() *MichellPhanInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 化妆教程管理编辑出参
type ModMichellPhanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModMichellPhanResp) Reset() {
	*x = ModMichellPhanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModMichellPhanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModMichellPhanResp) ProtoMessage() {}

func (x *ModMichellPhanResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModMichellPhanResp.ProtoReflect.Descriptor instead.
func (*ModMichellPhanResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{166}
}

// 护肤建议管理表
type SkinCareAdviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // ID
	Title              string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                           // 标题
	AnalysisDimension  string `protobuf:"bytes,3,opt,name=analysisDimension,proto3" json:"analysisDimension,omitempty"`   // 分析维度
	Severity           string `protobuf:"bytes,4,opt,name=severity,proto3" json:"severity,omitempty"`                     // 严重程度
	SkinCareAdviceCopy string `protobuf:"bytes,5,opt,name=skinCareAdviceCopy,proto3" json:"skinCareAdviceCopy,omitempty"` // 护肤建议内容
	CreateTime         string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`                 // 创建时间
	DictId             uint64 `protobuf:"varint,7,opt,name=dictId,proto3" json:"dictId,omitempty"`                        // 字典ID
	Status             bool   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                        // 状态
	BusinessId         int32  `protobuf:"varint,9,opt,name=businessId,proto3" json:"businessId,omitempty"`                // 业务ID
	ShopId             int32  `protobuf:"varint,10,opt,name=shopId,proto3" json:"shopId,omitempty"`                       // 商店ID
}

func (x *SkinCareAdviceInfo) Reset() {
	*x = SkinCareAdviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkinCareAdviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkinCareAdviceInfo) ProtoMessage() {}

func (x *SkinCareAdviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkinCareAdviceInfo.ProtoReflect.Descriptor instead.
func (*SkinCareAdviceInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{167}
}

func (x *SkinCareAdviceInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkinCareAdviceInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SkinCareAdviceInfo) GetAnalysisDimension() string {
	if x != nil {
		return x.AnalysisDimension
	}
	return ""
}

func (x *SkinCareAdviceInfo) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *SkinCareAdviceInfo) GetSkinCareAdviceCopy() string {
	if x != nil {
		return x.SkinCareAdviceCopy
	}
	return ""
}

func (x *SkinCareAdviceInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SkinCareAdviceInfo) GetDictId() uint64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *SkinCareAdviceInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SkinCareAdviceInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *SkinCareAdviceInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 护肤建议管理列表项
type ListSkinCareAdviceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SkinCareAdviceInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 护肤建议信息
}

func (x *ListSkinCareAdviceItem) Reset() {
	*x = ListSkinCareAdviceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinCareAdviceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinCareAdviceItem) ProtoMessage() {}

func (x *ListSkinCareAdviceItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinCareAdviceItem.ProtoReflect.Descriptor instead.
func (*ListSkinCareAdviceItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{168}
}

func (x *ListSkinCareAdviceItem) GetInfo() *SkinCareAdviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 护肤建议管理列表入参
type ListSkinCareAdviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListSkinCareAdviceRequest) Reset() {
	*x = ListSkinCareAdviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinCareAdviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinCareAdviceRequest) ProtoMessage() {}

func (x *ListSkinCareAdviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinCareAdviceRequest.ProtoReflect.Descriptor instead.
func (*ListSkinCareAdviceRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{169}
}

func (x *ListSkinCareAdviceRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListSkinCareAdviceRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 护肤建议管理列表出参
type ListSkinCareAdviceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListSkinCareAdviceItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListSkinCareAdviceResp) Reset() {
	*x = ListSkinCareAdviceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinCareAdviceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinCareAdviceResp) ProtoMessage() {}

func (x *ListSkinCareAdviceResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinCareAdviceResp.ProtoReflect.Descriptor instead.
func (*ListSkinCareAdviceResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{170}
}

func (x *ListSkinCareAdviceResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSkinCareAdviceResp) GetList() []*ListSkinCareAdviceItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 护肤建议管理新增入参
type AddSkinCareAdviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string              `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Info       *SkinCareAdviceInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`              // 护肤建议信息
	BusinessId int32               `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32               `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *AddSkinCareAdviceRequest) Reset() {
	*x = AddSkinCareAdviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSkinCareAdviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSkinCareAdviceRequest) ProtoMessage() {}

func (x *AddSkinCareAdviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSkinCareAdviceRequest.ProtoReflect.Descriptor instead.
func (*AddSkinCareAdviceRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{171}
}

func (x *AddSkinCareAdviceRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddSkinCareAdviceRequest) GetInfo() *SkinCareAdviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AddSkinCareAdviceRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *AddSkinCareAdviceRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 护肤建议管理新增出参
type AddSkinCareAdviceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSkinCareAdviceResp) Reset() {
	*x = AddSkinCareAdviceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSkinCareAdviceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSkinCareAdviceResp) ProtoMessage() {}

func (x *AddSkinCareAdviceResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSkinCareAdviceResp.ProtoReflect.Descriptor instead.
func (*AddSkinCareAdviceResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{172}
}

// 护肤建议管理删除入参
type DelSkinCareAdviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelSkinCareAdviceRequest) Reset() {
	*x = DelSkinCareAdviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSkinCareAdviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSkinCareAdviceRequest) ProtoMessage() {}

func (x *DelSkinCareAdviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSkinCareAdviceRequest.ProtoReflect.Descriptor instead.
func (*DelSkinCareAdviceRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{173}
}

func (x *DelSkinCareAdviceRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelSkinCareAdviceRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 护肤建议管理删除出参
type DelSkinCareAdviceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSkinCareAdviceResp) Reset() {
	*x = DelSkinCareAdviceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSkinCareAdviceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSkinCareAdviceResp) ProtoMessage() {}

func (x *DelSkinCareAdviceResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSkinCareAdviceResp.ProtoReflect.Descriptor instead.
func (*DelSkinCareAdviceResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{174}
}

// 护肤建议管理编辑入参
type ModSkinCareAdviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string              `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *SkinCareAdviceInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 护肤建议信息
}

func (x *ModSkinCareAdviceRequest) Reset() {
	*x = ModSkinCareAdviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSkinCareAdviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSkinCareAdviceRequest) ProtoMessage() {}

func (x *ModSkinCareAdviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSkinCareAdviceRequest.ProtoReflect.Descriptor instead.
func (*ModSkinCareAdviceRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{175}
}

func (x *ModSkinCareAdviceRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModSkinCareAdviceRequest) GetInfo() *SkinCareAdviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 护肤建议管理编辑出参
type ModSkinCareAdviceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModSkinCareAdviceResp) Reset() {
	*x = ModSkinCareAdviceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSkinCareAdviceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSkinCareAdviceResp) ProtoMessage() {}

func (x *ModSkinCareAdviceResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSkinCareAdviceResp.ProtoReflect.Descriptor instead.
func (*ModSkinCareAdviceResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{176}
}

// 上架护肤建议入参
type UpSkinCareAdviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`              // ID
}

func (x *UpSkinCareAdviceRequest) Reset() {
	*x = UpSkinCareAdviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpSkinCareAdviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpSkinCareAdviceRequest) ProtoMessage() {}

func (x *UpSkinCareAdviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpSkinCareAdviceRequest.ProtoReflect.Descriptor instead.
func (*UpSkinCareAdviceRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{177}
}

func (x *UpSkinCareAdviceRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *UpSkinCareAdviceRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 上架护肤建议出参
type UpSkinCareAdviceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpSkinCareAdviceResp) Reset() {
	*x = UpSkinCareAdviceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpSkinCareAdviceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpSkinCareAdviceResp) ProtoMessage() {}

func (x *UpSkinCareAdviceResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpSkinCareAdviceResp.ProtoReflect.Descriptor instead.
func (*UpSkinCareAdviceResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{178}
}

// 下架护肤建议入参
type DownSkinCareAdviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`              // ID
}

func (x *DownSkinCareAdviceRequest) Reset() {
	*x = DownSkinCareAdviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownSkinCareAdviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownSkinCareAdviceRequest) ProtoMessage() {}

func (x *DownSkinCareAdviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownSkinCareAdviceRequest.ProtoReflect.Descriptor instead.
func (*DownSkinCareAdviceRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{179}
}

func (x *DownSkinCareAdviceRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DownSkinCareAdviceRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 下架护肤建议出参
type DownSkinCareAdviceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownSkinCareAdviceResp) Reset() {
	*x = DownSkinCareAdviceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownSkinCareAdviceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownSkinCareAdviceResp) ProtoMessage() {}

func (x *DownSkinCareAdviceResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownSkinCareAdviceResp.ProtoReflect.Descriptor instead.
func (*DownSkinCareAdviceResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{180}
}

// 测肤记录表
type MeasureSkinRecordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                      // ID
	UserName      string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`           // 用户名
	MobilePhone   string `protobuf:"bytes,3,opt,name=mobilePhone,proto3" json:"mobilePhone,omitempty"`     // 手机号
	DeviceCode    string `protobuf:"bytes,4,opt,name=deviceCode,proto3" json:"deviceCode,omitempty"`       // 设备编码
	DeviceMac     string `protobuf:"bytes,5,opt,name=deviceMac,proto3" json:"deviceMac,omitempty"`         // 设备MAC地址
	OverallScore  int64  `protobuf:"varint,6,opt,name=overallScore,proto3" json:"overallScore,omitempty"`  // 总体评分
	ReportStatus  string `protobuf:"bytes,7,opt,name=reportStatus,proto3" json:"reportStatus,omitempty"`   // 报告状态
	DetectionType string `protobuf:"bytes,8,opt,name=detectionType,proto3" json:"detectionType,omitempty"` // 检测类型
	DetectionTime string `protobuf:"bytes,9,opt,name=detectionTime,proto3" json:"detectionTime,omitempty"` // 检测时间
	BusinessId    int32  `protobuf:"varint,10,opt,name=businessId,proto3" json:"businessId,omitempty"`     // 业务ID
	ShopId        int32  `protobuf:"varint,11,opt,name=shopId,proto3" json:"shopId,omitempty"`             // 商店ID
	BusinessName  string `protobuf:"bytes,12,opt,name=businessName,proto3" json:"businessName,omitempty"`  // 业务名称
	ShopName      string `protobuf:"bytes,13,opt,name=shopName,proto3" json:"shopName,omitempty"`          // 商店名称
	MacAddress    string `protobuf:"bytes,14,opt,name=macAddress,proto3" json:"macAddress,omitempty"`      // MAC地址
	Gender        string `protobuf:"bytes,15,opt,name=gender,proto3" json:"gender,omitempty"`              // 性别
	IsAuthorize   int32  `protobuf:"varint,16,opt,name=isAuthorize,proto3" json:"isAuthorize,omitempty"`   // 是否授权
	AppVersion    string `protobuf:"bytes,17,opt,name=appVersion,proto3" json:"appVersion,omitempty"`      // APP版本
	PlatformType  uint32 `protobuf:"varint,18,opt,name=platformType,proto3" json:"platformType,omitempty"` // 平台类型
	AppProductId  uint32 `protobuf:"varint,19,opt,name=appProductId,proto3" json:"appProductId,omitempty"` // APP产品ID
	UserType      uint32 `protobuf:"varint,20,opt,name=userType,proto3" json:"userType,omitempty"`         // 用户类型
}

func (x *MeasureSkinRecordInfo) Reset() {
	*x = MeasureSkinRecordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureSkinRecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureSkinRecordInfo) ProtoMessage() {}

func (x *MeasureSkinRecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureSkinRecordInfo.ProtoReflect.Descriptor instead.
func (*MeasureSkinRecordInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{181}
}

func (x *MeasureSkinRecordInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MeasureSkinRecordInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetDeviceMac() string {
	if x != nil {
		return x.DeviceMac
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetOverallScore() int64 {
	if x != nil {
		return x.OverallScore
	}
	return 0
}

func (x *MeasureSkinRecordInfo) GetReportStatus() string {
	if x != nil {
		return x.ReportStatus
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetDetectionType() string {
	if x != nil {
		return x.DetectionType
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetDetectionTime() string {
	if x != nil {
		return x.DetectionTime
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *MeasureSkinRecordInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *MeasureSkinRecordInfo) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetIsAuthorize() int32 {
	if x != nil {
		return x.IsAuthorize
	}
	return 0
}

func (x *MeasureSkinRecordInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *MeasureSkinRecordInfo) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *MeasureSkinRecordInfo) GetAppProductId() uint32 {
	if x != nil {
		return x.AppProductId
	}
	return 0
}

func (x *MeasureSkinRecordInfo) GetUserType() uint32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

// 测肤记录列表项
type ListMeasureSkinRecordItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MeasureSkinRecordInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 测肤记录信息
}

func (x *ListMeasureSkinRecordItem) Reset() {
	*x = ListMeasureSkinRecordItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureSkinRecordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureSkinRecordItem) ProtoMessage() {}

func (x *ListMeasureSkinRecordItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureSkinRecordItem.ProtoReflect.Descriptor instead.
func (*ListMeasureSkinRecordItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{182}
}

func (x *ListMeasureSkinRecordItem) GetInfo() *MeasureSkinRecordInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 测肤记录管理列表入参
type ListMeasureSkinRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListMeasureSkinRecordRequest) Reset() {
	*x = ListMeasureSkinRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureSkinRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureSkinRecordRequest) ProtoMessage() {}

func (x *ListMeasureSkinRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureSkinRecordRequest.ProtoReflect.Descriptor instead.
func (*ListMeasureSkinRecordRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{183}
}

func (x *ListMeasureSkinRecordRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListMeasureSkinRecordRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 测肤记录管理列表出参
type ListMeasureSkinRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListMeasureSkinRecordItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListMeasureSkinRecordResp) Reset() {
	*x = ListMeasureSkinRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureSkinRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureSkinRecordResp) ProtoMessage() {}

func (x *ListMeasureSkinRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureSkinRecordResp.ProtoReflect.Descriptor instead.
func (*ListMeasureSkinRecordResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{184}
}

func (x *ListMeasureSkinRecordResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMeasureSkinRecordResp) GetList() []*ListMeasureSkinRecordItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 测肤记录管理删除入参
type DelMeasureSkinRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelMeasureSkinRecordRequest) Reset() {
	*x = DelMeasureSkinRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMeasureSkinRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMeasureSkinRecordRequest) ProtoMessage() {}

func (x *DelMeasureSkinRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMeasureSkinRecordRequest.ProtoReflect.Descriptor instead.
func (*DelMeasureSkinRecordRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{185}
}

func (x *DelMeasureSkinRecordRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelMeasureSkinRecordRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 测肤记录管理删除出参
type DelMeasureSkinRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMeasureSkinRecordResp) Reset() {
	*x = DelMeasureSkinRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMeasureSkinRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMeasureSkinRecordResp) ProtoMessage() {}

func (x *DelMeasureSkinRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMeasureSkinRecordResp.ProtoReflect.Descriptor instead.
func (*DelMeasureSkinRecordResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{186}
}

// 测肤记录详情入参
type GetMeasureSkinDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`              // ID
}

func (x *GetMeasureSkinDetailRequest) Reset() {
	*x = GetMeasureSkinDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeasureSkinDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasureSkinDetailRequest) ProtoMessage() {}

func (x *GetMeasureSkinDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasureSkinDetailRequest.ProtoReflect.Descriptor instead.
func (*GetMeasureSkinDetailRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{187}
}

func (x *GetMeasureSkinDetailRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *GetMeasureSkinDetailRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 测肤记录信息
type MeasureSkinRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                          // ID
	User            string                   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`                       // 用户
	DeviceCode      string                   `protobuf:"bytes,3,opt,name=deviceCode,proto3" json:"deviceCode,omitempty"`           // 设备编码
	Age             uint32                   `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`                        // 年龄
	SkinAge         uint32                   `protobuf:"varint,5,opt,name=skinAge,proto3" json:"skinAge,omitempty"`                // 皮肤年龄
	Gender          string                   `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender,omitempty"`                   // 性别
	OverallScore    uint32                   `protobuf:"varint,7,opt,name=overallScore,proto3" json:"overallScore,omitempty"`      // 总体评分
	DetectionType   string                   `protobuf:"bytes,8,opt,name=detectionType,proto3" json:"detectionType,omitempty"`     // 检测类型
	DetectionResult *MeasureSkinRecordResult `protobuf:"bytes,9,opt,name=detectionResult,proto3" json:"detectionResult,omitempty"` // 检测结果
	DetectionTime   string                   `protobuf:"bytes,10,opt,name=detectionTime,proto3" json:"detectionTime,omitempty"`    // 检测时间
	Status          bool                     `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`                 // 状态
	CreateTime      string                   `protobuf:"bytes,12,opt,name=createTime,proto3" json:"createTime,omitempty"`          // 创建时间
	UpdateTime      string                   `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`          // 更新时间
	RecordId        int64                    `protobuf:"varint,14,opt,name=recordId,proto3" json:"recordId,omitempty"`             // 记录ID
	UserName        string                   `protobuf:"bytes,15,opt,name=userName,proto3" json:"userName,omitempty"`              // 用户名
	PhoneNumber     string                   `protobuf:"bytes,16,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`        // 手机号
	OpenId          string                   `protobuf:"bytes,17,opt,name=openId,proto3" json:"openId,omitempty"`                  // OpenID
	DeviceMac       string                   `protobuf:"bytes,18,opt,name=deviceMac,proto3" json:"deviceMac,omitempty"`            // 设备MAC地址
	HeadUrl         string                   `protobuf:"bytes,19,opt,name=headUrl,proto3" json:"headUrl,omitempty"`                // 头像URL
	BusinessName    string                   `protobuf:"bytes,20,opt,name=businessName,proto3" json:"businessName,omitempty"`      // 业务名称
	ShopName        string                   `protobuf:"bytes,21,opt,name=shopName,proto3" json:"shopName,omitempty"`              // 商店名称
	BusinessId      int32                    `protobuf:"varint,22,opt,name=businessId,proto3" json:"businessId,omitempty"`         // 业务ID
	ShopId          int32                    `protobuf:"varint,23,opt,name=shopId,proto3" json:"shopId,omitempty"`                 // 商店ID
	MacAddress      string                   `protobuf:"bytes,24,opt,name=macAddress,proto3" json:"macAddress,omitempty"`          // MAC地址
	TargetType      int32                    `protobuf:"varint,25,opt,name=targetType,proto3" json:"targetType,omitempty"`         // 目标类型
	IsAuthorize     int32                    `protobuf:"varint,26,opt,name=isAuthorize,proto3" json:"isAuthorize,omitempty"`       // 是否授权
	PlatformType    uint32                   `protobuf:"varint,27,opt,name=platformType,proto3" json:"platformType,omitempty"`     // 平台类型
	AppProductId    uint32                   `protobuf:"varint,28,opt,name=appProductId,proto3" json:"appProductId,omitempty"`     // APP产品ID
	AppVersion      string                   `protobuf:"bytes,29,opt,name=appVersion,proto3" json:"appVersion,omitempty"`          // APP版本
}

func (x *MeasureSkinRecord) Reset() {
	*x = MeasureSkinRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureSkinRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureSkinRecord) ProtoMessage() {}

func (x *MeasureSkinRecord) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureSkinRecord.ProtoReflect.Descriptor instead.
func (*MeasureSkinRecord) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{188}
}

func (x *MeasureSkinRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MeasureSkinRecord) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MeasureSkinRecord) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *MeasureSkinRecord) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *MeasureSkinRecord) GetSkinAge() uint32 {
	if x != nil {
		return x.SkinAge
	}
	return 0
}

func (x *MeasureSkinRecord) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *MeasureSkinRecord) GetOverallScore() uint32 {
	if x != nil {
		return x.OverallScore
	}
	return 0
}

func (x *MeasureSkinRecord) GetDetectionType() string {
	if x != nil {
		return x.DetectionType
	}
	return ""
}

func (x *MeasureSkinRecord) GetDetectionResult() *MeasureSkinRecordResult {
	if x != nil {
		return x.DetectionResult
	}
	return nil
}

func (x *MeasureSkinRecord) GetDetectionTime() string {
	if x != nil {
		return x.DetectionTime
	}
	return ""
}

func (x *MeasureSkinRecord) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *MeasureSkinRecord) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MeasureSkinRecord) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MeasureSkinRecord) GetRecordId() int64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *MeasureSkinRecord) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MeasureSkinRecord) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *MeasureSkinRecord) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *MeasureSkinRecord) GetDeviceMac() string {
	if x != nil {
		return x.DeviceMac
	}
	return ""
}

func (x *MeasureSkinRecord) GetHeadUrl() string {
	if x != nil {
		return x.HeadUrl
	}
	return ""
}

func (x *MeasureSkinRecord) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *MeasureSkinRecord) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *MeasureSkinRecord) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *MeasureSkinRecord) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *MeasureSkinRecord) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *MeasureSkinRecord) GetTargetType() int32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *MeasureSkinRecord) GetIsAuthorize() int32 {
	if x != nil {
		return x.IsAuthorize
	}
	return 0
}

func (x *MeasureSkinRecord) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *MeasureSkinRecord) GetAppProductId() uint32 {
	if x != nil {
		return x.AppProductId
	}
	return 0
}

func (x *MeasureSkinRecord) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

// 测肤结果
type MeasureSkinRecordResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MeasureSkinRecordResultItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 测肤结果项列表
}

func (x *MeasureSkinRecordResult) Reset() {
	*x = MeasureSkinRecordResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureSkinRecordResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureSkinRecordResult) ProtoMessage() {}

func (x *MeasureSkinRecordResult) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureSkinRecordResult.ProtoReflect.Descriptor instead.
func (*MeasureSkinRecordResult) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{189}
}

func (x *MeasureSkinRecordResult) GetList() []*MeasureSkinRecordResultItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 测肤结果项
type MeasureSkinRecordResultItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                string              `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                // 类型
	FaceDirection       string              `protobuf:"bytes,2,opt,name=faceDirection,proto3" json:"faceDirection,omitempty"`              // 面部方向
	Percentage          float64             `protobuf:"fixed64,3,opt,name=percentage,proto3" json:"percentage,omitempty"`                  // 百分比
	AreaRatio           float64             `protobuf:"fixed64,4,opt,name=areaRatio,proto3" json:"areaRatio,omitempty"`                    // 区域比例
	SeverityRatio       float64             `protobuf:"fixed64,5,opt,name=severityRatio,proto3" json:"severityRatio,omitempty"`            // 严重程度比例
	DeepWrinkleCount    uint64              `protobuf:"varint,6,opt,name=deepWrinkleCount,proto3" json:"deepWrinkleCount,omitempty"`       // 深皱纹数量
	ShallowWrinkleCount uint64              `protobuf:"varint,7,opt,name=shallowWrinkleCount,proto3" json:"shallowWrinkleCount,omitempty"` // 浅皱纹数量
	SymptomCount        uint64              `protobuf:"varint,8,opt,name=symptomCount,proto3" json:"symptomCount,omitempty"`               // 症状数量
	OriginPicture       string              `protobuf:"bytes,9,opt,name=originPicture,proto3" json:"originPicture,omitempty"`              // 原始图片
	SymptomPicture      string              `protobuf:"bytes,10,opt,name=symptomPicture,proto3" json:"symptomPicture,omitempty"`           // 症状图片
	ForecastPicture     string              `protobuf:"bytes,11,opt,name=forecastPicture,proto3" json:"forecastPicture,omitempty"`         // 预测图片
	Score               uint64              `protobuf:"varint,12,opt,name=score,proto3" json:"score,omitempty"`                            // 评分
	Desc                string              `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`                               // 描述
	Solution            string              `protobuf:"bytes,14,opt,name=solution,proto3" json:"solution,omitempty"`                       // 解决方案
	Summary             string              `protobuf:"bytes,15,opt,name=summary,proto3" json:"summary,omitempty"`                         // 摘要
	ExtraInfo           *ExtraInfo          `protobuf:"bytes,16,opt,name=extraInfo,proto3" json:"extraInfo,omitempty"`                     // 额外信息
	SeverityName        string              `protobuf:"bytes,17,opt,name=severityName,proto3" json:"severityName,omitempty"`               // 严重程度名称
	ComparingPeers      int32               `protobuf:"varint,18,opt,name=comparingPeers,proto3" json:"comparingPeers,omitempty"`          // 比较对等体
	PossibleCauses      string              `protobuf:"bytes,19,opt,name=possibleCauses,proto3" json:"possibleCauses,omitempty"`           // 可能形成原因
	SymptomImg          []*SymptomImgSimple `protobuf:"bytes,20,rep,name=symptomImg,proto3" json:"symptomImg,omitempty"`                   // 症状图
}

func (x *MeasureSkinRecordResultItem) Reset() {
	*x = MeasureSkinRecordResultItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureSkinRecordResultItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureSkinRecordResultItem) ProtoMessage() {}

func (x *MeasureSkinRecordResultItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureSkinRecordResultItem.ProtoReflect.Descriptor instead.
func (*MeasureSkinRecordResultItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{190}
}

func (x *MeasureSkinRecordResultItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetFaceDirection() string {
	if x != nil {
		return x.FaceDirection
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *MeasureSkinRecordResultItem) GetAreaRatio() float64 {
	if x != nil {
		return x.AreaRatio
	}
	return 0
}

func (x *MeasureSkinRecordResultItem) GetSeverityRatio() float64 {
	if x != nil {
		return x.SeverityRatio
	}
	return 0
}

func (x *MeasureSkinRecordResultItem) GetDeepWrinkleCount() uint64 {
	if x != nil {
		return x.DeepWrinkleCount
	}
	return 0
}

func (x *MeasureSkinRecordResultItem) GetShallowWrinkleCount() uint64 {
	if x != nil {
		return x.ShallowWrinkleCount
	}
	return 0
}

func (x *MeasureSkinRecordResultItem) GetSymptomCount() uint64 {
	if x != nil {
		return x.SymptomCount
	}
	return 0
}

func (x *MeasureSkinRecordResultItem) GetOriginPicture() string {
	if x != nil {
		return x.OriginPicture
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetSymptomPicture() string {
	if x != nil {
		return x.SymptomPicture
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetForecastPicture() string {
	if x != nil {
		return x.ForecastPicture
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetScore() uint64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *MeasureSkinRecordResultItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetExtraInfo() *ExtraInfo {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

func (x *MeasureSkinRecordResultItem) GetSeverityName() string {
	if x != nil {
		return x.SeverityName
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetComparingPeers() int32 {
	if x != nil {
		return x.ComparingPeers
	}
	return 0
}

func (x *MeasureSkinRecordResultItem) GetPossibleCauses() string {
	if x != nil {
		return x.PossibleCauses
	}
	return ""
}

func (x *MeasureSkinRecordResultItem) GetSymptomImg() []*SymptomImgSimple {
	if x != nil {
		return x.SymptomImg
	}
	return nil
}

// 症状图简要信息
type SymptomImgSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Degree              string `protobuf:"bytes,1,opt,name=degree,proto3" json:"degree,omitempty"`                           // 程度
	SymptomUrl          string `protobuf:"bytes,2,opt,name=symptomUrl,proto3" json:"symptomUrl,omitempty"`                   // 症状图URL
	SeverityDescription string `protobuf:"bytes,3,opt,name=severityDescription,proto3" json:"severityDescription,omitempty"` // 程度描述
}

func (x *SymptomImgSimple) Reset() {
	*x = SymptomImgSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymptomImgSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymptomImgSimple) ProtoMessage() {}

func (x *SymptomImgSimple) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymptomImgSimple.ProtoReflect.Descriptor instead.
func (*SymptomImgSimple) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{191}
}

func (x *SymptomImgSimple) GetDegree() string {
	if x != nil {
		return x.Degree
	}
	return ""
}

func (x *SymptomImgSimple) GetSymptomUrl() string {
	if x != nil {
		return x.SymptomUrl
	}
	return ""
}

func (x *SymptomImgSimple) GetSeverityDescription() string {
	if x != nil {
		return x.SeverityDescription
	}
	return ""
}

// 额外信息
type ExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForeHeadWrinkleArea    float64 `protobuf:"fixed64,1,opt,name=foreHeadWrinkleArea,proto3" json:"foreHeadWrinkleArea,omitempty"`       // 抬头纹面积
	ForeHeadWrinkleScore   float64 `protobuf:"fixed64,2,opt,name=foreHeadWrinkleScore,proto3" json:"foreHeadWrinkleScore,omitempty"`     // 抬头纹评分
	GlabellarWrinkleArea   float64 `protobuf:"fixed64,3,opt,name=glabellarWrinkleArea,proto3" json:"glabellarWrinkleArea,omitempty"`     // 眉间纹面积
	GlabellarWrinkleScore  float64 `protobuf:"fixed64,4,opt,name=glabellarWrinkleScore,proto3" json:"glabellarWrinkleScore,omitempty"`   // 眉间纹评分
	BetweenEyeWrinkleArea  float64 `protobuf:"fixed64,5,opt,name=betweenEyeWrinkleArea,proto3" json:"betweenEyeWrinkleArea,omitempty"`   // 眼间纹面积
	BetweenEyeWrinkleScore float64 `protobuf:"fixed64,6,opt,name=betweenEyeWrinkleScore,proto3" json:"betweenEyeWrinkleScore,omitempty"` // 眼间纹评分
	UnderEyeWrinkleArea    float64 `protobuf:"fixed64,7,opt,name=underEyeWrinkleArea,proto3" json:"underEyeWrinkleArea,omitempty"`       // 眼下纹面积
	UnderEyeWrinkleScore   float64 `protobuf:"fixed64,8,opt,name=underEyeWrinkleScore,proto3" json:"underEyeWrinkleScore,omitempty"`     // 眼下纹评分
	NasofoldsWrinkleArea   float64 `protobuf:"fixed64,9,opt,name=nasofoldsWrinkleArea,proto3" json:"nasofoldsWrinkleArea,omitempty"`     // 法令纹面积
	NasofoldsWrinkleScore  float64 `protobuf:"fixed64,10,opt,name=nasofoldsWrinkleScore,proto3" json:"nasofoldsWrinkleScore,omitempty"`  // 法令纹评分
	CorMouthWrinkleArea    float64 `protobuf:"fixed64,11,opt,name=corMouthWrinkleArea,proto3" json:"corMouthWrinkleArea,omitempty"`      // 嘴角纹面积
	CorMouthWrinkleScore   float64 `protobuf:"fixed64,12,opt,name=corMouthWrinkleScore,proto3" json:"corMouthWrinkleScore,omitempty"`    // 嘴角纹评分
	SideWrinkleArea        float64 `protobuf:"fixed64,13,opt,name=sideWrinkleArea,proto3" json:"sideWrinkleArea,omitempty"`              // 鱼尾纹面积
	SideWrinkleScore       float64 `protobuf:"fixed64,14,opt,name=sideWrinkleScore,proto3" json:"sideWrinkleScore,omitempty"`            // 鱼尾纹评分
	LargePores             float64 `protobuf:"fixed64,15,opt,name=largePores,proto3" json:"largePores,omitempty"`                        // 大毛孔
	MediumPores            float64 `protobuf:"fixed64,16,opt,name=mediumPores,proto3" json:"mediumPores,omitempty"`                      // 中等毛孔
	SmallPores             float64 `protobuf:"fixed64,17,opt,name=smallPores,proto3" json:"smallPores,omitempty"`                        // 小毛孔
}

func (x *ExtraInfo) Reset() {
	*x = ExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraInfo) ProtoMessage() {}

func (x *ExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraInfo.ProtoReflect.Descriptor instead.
func (*ExtraInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{192}
}

func (x *ExtraInfo) GetForeHeadWrinkleArea() float64 {
	if x != nil {
		return x.ForeHeadWrinkleArea
	}
	return 0
}

func (x *ExtraInfo) GetForeHeadWrinkleScore() float64 {
	if x != nil {
		return x.ForeHeadWrinkleScore
	}
	return 0
}

func (x *ExtraInfo) GetGlabellarWrinkleArea() float64 {
	if x != nil {
		return x.GlabellarWrinkleArea
	}
	return 0
}

func (x *ExtraInfo) GetGlabellarWrinkleScore() float64 {
	if x != nil {
		return x.GlabellarWrinkleScore
	}
	return 0
}

func (x *ExtraInfo) GetBetweenEyeWrinkleArea() float64 {
	if x != nil {
		return x.BetweenEyeWrinkleArea
	}
	return 0
}

func (x *ExtraInfo) GetBetweenEyeWrinkleScore() float64 {
	if x != nil {
		return x.BetweenEyeWrinkleScore
	}
	return 0
}

func (x *ExtraInfo) GetUnderEyeWrinkleArea() float64 {
	if x != nil {
		return x.UnderEyeWrinkleArea
	}
	return 0
}

func (x *ExtraInfo) GetUnderEyeWrinkleScore() float64 {
	if x != nil {
		return x.UnderEyeWrinkleScore
	}
	return 0
}

func (x *ExtraInfo) GetNasofoldsWrinkleArea() float64 {
	if x != nil {
		return x.NasofoldsWrinkleArea
	}
	return 0
}

func (x *ExtraInfo) GetNasofoldsWrinkleScore() float64 {
	if x != nil {
		return x.NasofoldsWrinkleScore
	}
	return 0
}

func (x *ExtraInfo) GetCorMouthWrinkleArea() float64 {
	if x != nil {
		return x.CorMouthWrinkleArea
	}
	return 0
}

func (x *ExtraInfo) GetCorMouthWrinkleScore() float64 {
	if x != nil {
		return x.CorMouthWrinkleScore
	}
	return 0
}

func (x *ExtraInfo) GetSideWrinkleArea() float64 {
	if x != nil {
		return x.SideWrinkleArea
	}
	return 0
}

func (x *ExtraInfo) GetSideWrinkleScore() float64 {
	if x != nil {
		return x.SideWrinkleScore
	}
	return 0
}

func (x *ExtraInfo) GetLargePores() float64 {
	if x != nil {
		return x.LargePores
	}
	return 0
}

func (x *ExtraInfo) GetMediumPores() float64 {
	if x != nil {
		return x.MediumPores
	}
	return 0
}

func (x *ExtraInfo) GetSmallPores() float64 {
	if x != nil {
		return x.SmallPores
	}
	return 0
}

// 测肤记录详情出参
type GetMeasureSkinDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    *ErrCode           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`       // 错误码
	Record *MeasureSkinRecord `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"` // 测肤记录
}

func (x *GetMeasureSkinDetailResp) Reset() {
	*x = GetMeasureSkinDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeasureSkinDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasureSkinDetailResp) ProtoMessage() {}

func (x *GetMeasureSkinDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasureSkinDetailResp.ProtoReflect.Descriptor instead.
func (*GetMeasureSkinDetailResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{193}
}

func (x *GetMeasureSkinDetailResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetMeasureSkinDetailResp) GetRecord() *MeasureSkinRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

// 产品推荐权重设置表
type ProductRecommendationWeightSettingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                           // ID
	EffectMainRatio int32  `protobuf:"varint,2,opt,name=effectMainRatio,proto3" json:"effectMainRatio,omitempty"` // 主效比例
	EffectSub1Ratio int32  `protobuf:"varint,3,opt,name=effectSub1Ratio,proto3" json:"effectSub1Ratio,omitempty"` // 辅效1比例
	EffectSub2Ratio int32  `protobuf:"varint,4,opt,name=effectSub2Ratio,proto3" json:"effectSub2Ratio,omitempty"` // 辅效2比例
	SetType         int32  `protobuf:"varint,5,opt,name=setType,proto3" json:"setType,omitempty"`                 // 设置类型
	CreateTime      string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`            // 创建时间
	BusinessId      int32  `protobuf:"varint,7,opt,name=businessId,proto3" json:"businessId,omitempty"`           // 业务ID
	ShopId          int32  `protobuf:"varint,8,opt,name=shopId,proto3" json:"shopId,omitempty"`                   // 商店ID
}

func (x *ProductRecommendationWeightSettingInfo) Reset() {
	*x = ProductRecommendationWeightSettingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductRecommendationWeightSettingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRecommendationWeightSettingInfo) ProtoMessage() {}

func (x *ProductRecommendationWeightSettingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRecommendationWeightSettingInfo.ProtoReflect.Descriptor instead.
func (*ProductRecommendationWeightSettingInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{194}
}

func (x *ProductRecommendationWeightSettingInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductRecommendationWeightSettingInfo) GetEffectMainRatio() int32 {
	if x != nil {
		return x.EffectMainRatio
	}
	return 0
}

func (x *ProductRecommendationWeightSettingInfo) GetEffectSub1Ratio() int32 {
	if x != nil {
		return x.EffectSub1Ratio
	}
	return 0
}

func (x *ProductRecommendationWeightSettingInfo) GetEffectSub2Ratio() int32 {
	if x != nil {
		return x.EffectSub2Ratio
	}
	return 0
}

func (x *ProductRecommendationWeightSettingInfo) GetSetType() int32 {
	if x != nil {
		return x.SetType
	}
	return 0
}

func (x *ProductRecommendationWeightSettingInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProductRecommendationWeightSettingInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ProductRecommendationWeightSettingInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 产品推荐权重设置列表项
type ListProductRecommendationWeightSettingItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ProductRecommendationWeightSettingInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 产品推荐权重设置信息
}

func (x *ListProductRecommendationWeightSettingItem) Reset() {
	*x = ListProductRecommendationWeightSettingItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductRecommendationWeightSettingItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductRecommendationWeightSettingItem) ProtoMessage() {}

func (x *ListProductRecommendationWeightSettingItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductRecommendationWeightSettingItem.ProtoReflect.Descriptor instead.
func (*ListProductRecommendationWeightSettingItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{195}
}

func (x *ListProductRecommendationWeightSettingItem) GetInfo() *ProductRecommendationWeightSettingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 产品推荐权重设置管理列表入参
type ListProductRecommendationWeightSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListProductRecommendationWeightSettingRequest) Reset() {
	*x = ListProductRecommendationWeightSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductRecommendationWeightSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductRecommendationWeightSettingRequest) ProtoMessage() {}

func (x *ListProductRecommendationWeightSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductRecommendationWeightSettingRequest.ProtoReflect.Descriptor instead.
func (*ListProductRecommendationWeightSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{196}
}

func (x *ListProductRecommendationWeightSettingRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListProductRecommendationWeightSettingRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 产品推荐权重设置管理列表出参
type ListProductRecommendationWeightSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListProductRecommendationWeightSettingItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表项
}

func (x *ListProductRecommendationWeightSettingResp) Reset() {
	*x = ListProductRecommendationWeightSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductRecommendationWeightSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductRecommendationWeightSettingResp) ProtoMessage() {}

func (x *ListProductRecommendationWeightSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductRecommendationWeightSettingResp.ProtoReflect.Descriptor instead.
func (*ListProductRecommendationWeightSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{197}
}

func (x *ListProductRecommendationWeightSettingResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProductRecommendationWeightSettingResp) GetList() []*ListProductRecommendationWeightSettingItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 产品推荐权重设置管理新增入参
type AddProductRecommendationWeightSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string                                  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *ProductRecommendationWeightSettingInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 产品推荐权重设置信息
}

func (x *AddProductRecommendationWeightSettingRequest) Reset() {
	*x = AddProductRecommendationWeightSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductRecommendationWeightSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductRecommendationWeightSettingRequest) ProtoMessage() {}

func (x *AddProductRecommendationWeightSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductRecommendationWeightSettingRequest.ProtoReflect.Descriptor instead.
func (*AddProductRecommendationWeightSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{198}
}

func (x *AddProductRecommendationWeightSettingRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddProductRecommendationWeightSettingRequest) GetInfo() *ProductRecommendationWeightSettingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 产品推荐权重设置管理新增出参
type AddProductRecommendationWeightSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddProductRecommendationWeightSettingResp) Reset() {
	*x = AddProductRecommendationWeightSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductRecommendationWeightSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductRecommendationWeightSettingResp) ProtoMessage() {}

func (x *AddProductRecommendationWeightSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductRecommendationWeightSettingResp.ProtoReflect.Descriptor instead.
func (*AddProductRecommendationWeightSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{199}
}

// 产品推荐权重设置管理删除入参
type DelProductRecommendationWeightSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *DelProductRecommendationWeightSettingRequest) Reset() {
	*x = DelProductRecommendationWeightSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelProductRecommendationWeightSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelProductRecommendationWeightSettingRequest) ProtoMessage() {}

func (x *DelProductRecommendationWeightSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelProductRecommendationWeightSettingRequest.ProtoReflect.Descriptor instead.
func (*DelProductRecommendationWeightSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{200}
}

func (x *DelProductRecommendationWeightSettingRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelProductRecommendationWeightSettingRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 产品推荐权重设置管理删除出参
type DelProductRecommendationWeightSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelProductRecommendationWeightSettingResp) Reset() {
	*x = DelProductRecommendationWeightSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelProductRecommendationWeightSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelProductRecommendationWeightSettingResp) ProtoMessage() {}

func (x *DelProductRecommendationWeightSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelProductRecommendationWeightSettingResp.ProtoReflect.Descriptor instead.
func (*DelProductRecommendationWeightSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{201}
}

// 产品推荐权重设置管理编辑入参
type ModProductRecommendationWeightSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string                                  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *ProductRecommendationWeightSettingInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 产品推荐权重设置信息
}

func (x *ModProductRecommendationWeightSettingRequest) Reset() {
	*x = ModProductRecommendationWeightSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModProductRecommendationWeightSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModProductRecommendationWeightSettingRequest) ProtoMessage() {}

func (x *ModProductRecommendationWeightSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModProductRecommendationWeightSettingRequest.ProtoReflect.Descriptor instead.
func (*ModProductRecommendationWeightSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{202}
}

func (x *ModProductRecommendationWeightSettingRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModProductRecommendationWeightSettingRequest) GetInfo() *ProductRecommendationWeightSettingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 产品推荐权重设置管理编辑出参
type ModProductRecommendationWeightSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModProductRecommendationWeightSettingResp) Reset() {
	*x = ModProductRecommendationWeightSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModProductRecommendationWeightSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModProductRecommendationWeightSettingResp) ProtoMessage() {}

func (x *ModProductRecommendationWeightSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModProductRecommendationWeightSettingResp.ProtoReflect.Descriptor instead.
func (*ModProductRecommendationWeightSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{203}
}

// 设备用户信息
type DeviceUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                              // ID
	User             string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`                           // 用户
	Number           string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`                       // 号码
	Name             string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                           // 姓名
	Openid           string `protobuf:"bytes,5,opt,name=openid,proto3" json:"openid,omitempty"`                       // OpenID
	Gender           string `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender,omitempty"`                       // 性别
	Desc             string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`                           // 描述
	Birthday         string `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                   // 生日
	LastLoginTime    string `protobuf:"bytes,9,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`         // 最后登录时间
	Status           bool   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                     // 状态
	CreateTime       string `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`              // 创建时间
	MeasureSkinCount uint32 `protobuf:"varint,12,opt,name=measureSkinCount,proto3" json:"measureSkinCount,omitempty"` // 测肤次数
	LastMeasureTime  string `protobuf:"bytes,13,opt,name=lastMeasureTime,proto3" json:"lastMeasureTime,omitempty"`    // 最后测肤时间
	BusinessId       int32  `protobuf:"varint,14,opt,name=businessId,proto3" json:"businessId,omitempty"`             // 业务ID
	ShopId           int32  `protobuf:"varint,15,opt,name=shopId,proto3" json:"shopId,omitempty"`                     // 商店ID
	BusinessName     string `protobuf:"bytes,16,opt,name=businessName,proto3" json:"businessName,omitempty"`          // 业务名称
	ShopName         string `protobuf:"bytes,17,opt,name=shopName,proto3" json:"shopName,omitempty"`                  // 商店名称
	IsAuthorize      int32  `protobuf:"varint,18,opt,name=isAuthorize,proto3" json:"isAuthorize,omitempty"`           // 是否授权
	RegPlatform      uint32 `protobuf:"varint,19,opt,name=regPlatform,proto3" json:"regPlatform,omitempty"`           // 注册平台
	SourceFrom       string `protobuf:"bytes,20,opt,name=sourceFrom,proto3" json:"sourceFrom,omitempty"`              // 来源
	Address          string `protobuf:"bytes,21,opt,name=address,proto3" json:"address,omitempty"`                    // 地址
}

func (x *DeviceUserInfo) Reset() {
	*x = DeviceUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceUserInfo) ProtoMessage() {}

func (x *DeviceUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceUserInfo.ProtoReflect.Descriptor instead.
func (*DeviceUserInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{204}
}

func (x *DeviceUserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceUserInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DeviceUserInfo) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *DeviceUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceUserInfo) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *DeviceUserInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *DeviceUserInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DeviceUserInfo) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *DeviceUserInfo) GetLastLoginTime() string {
	if x != nil {
		return x.LastLoginTime
	}
	return ""
}

func (x *DeviceUserInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DeviceUserInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DeviceUserInfo) GetMeasureSkinCount() uint32 {
	if x != nil {
		return x.MeasureSkinCount
	}
	return 0
}

func (x *DeviceUserInfo) GetLastMeasureTime() string {
	if x != nil {
		return x.LastMeasureTime
	}
	return ""
}

func (x *DeviceUserInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *DeviceUserInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *DeviceUserInfo) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *DeviceUserInfo) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *DeviceUserInfo) GetIsAuthorize() int32 {
	if x != nil {
		return x.IsAuthorize
	}
	return 0
}

func (x *DeviceUserInfo) GetRegPlatform() uint32 {
	if x != nil {
		return x.RegPlatform
	}
	return 0
}

func (x *DeviceUserInfo) GetSourceFrom() string {
	if x != nil {
		return x.SourceFrom
	}
	return ""
}

func (x *DeviceUserInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// 查询设备用户入参
type ListDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListDeviceUserRequest) Reset() {
	*x = ListDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceUserRequest) ProtoMessage() {}

func (x *ListDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*ListDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{205}
}

func (x *ListDeviceUserRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListDeviceUserRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询设备用户出参
type ListDeviceUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListDeviceUserRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListDeviceUserResp) Reset() {
	*x = ListDeviceUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceUserResp) ProtoMessage() {}

func (x *ListDeviceUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceUserResp.ProtoReflect.Descriptor instead.
func (*ListDeviceUserResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{206}
}

func (x *ListDeviceUserResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDeviceUserResp) GetList() []*ListDeviceUserRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询设备用户出参项
type ListDeviceUserRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceUserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 设备用户信息
}

func (x *ListDeviceUserRespItem) Reset() {
	*x = ListDeviceUserRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceUserRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceUserRespItem) ProtoMessage() {}

func (x *ListDeviceUserRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceUserRespItem.ProtoReflect.Descriptor instead.
func (*ListDeviceUserRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{207}
}

func (x *ListDeviceUserRespItem) GetInfo() *DeviceUserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 冻结设备用户入参
type FrozenDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int32 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *FrozenDeviceUserRequest) Reset() {
	*x = FrozenDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenDeviceUserRequest) ProtoMessage() {}

func (x *FrozenDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*FrozenDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{208}
}

func (x *FrozenDeviceUserRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *FrozenDeviceUserRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 冻结设备用户出参
type FrozenDeviceUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrozenDeviceUserResp) Reset() {
	*x = FrozenDeviceUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenDeviceUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenDeviceUserResp) ProtoMessage() {}

func (x *FrozenDeviceUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenDeviceUserResp.ProtoReflect.Descriptor instead.
func (*FrozenDeviceUserResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{209}
}

// 恢复设备用户入参
type RecoverDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int32 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // ID列表
}

func (x *RecoverDeviceUserRequest) Reset() {
	*x = RecoverDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverDeviceUserRequest) ProtoMessage() {}

func (x *RecoverDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*RecoverDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{210}
}

func (x *RecoverDeviceUserRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *RecoverDeviceUserRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 恢复设备用户出参
type RecoverDeviceUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecoverDeviceUserResp) Reset() {
	*x = RecoverDeviceUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverDeviceUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverDeviceUserResp) ProtoMessage() {}

func (x *RecoverDeviceUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverDeviceUserResp.ProtoReflect.Descriptor instead.
func (*RecoverDeviceUserResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{211}
}

// 教程分类
type CourseClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   // ID
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                // 名称
	CourseCount int32  `protobuf:"varint,3,opt,name=courseCount,proto3" json:"courseCount,omitempty"` // 课程数量
	ClickCount  int32  `protobuf:"varint,4,opt,name=clickCount,proto3" json:"clickCount,omitempty"`   // 点击次数
	SortWeight  int32  `protobuf:"varint,5,opt,name=sortWeight,proto3" json:"sortWeight,omitempty"`   // 排序权重
	Status      bool   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`           // 状态
	CreateTime  string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`    // 创建时间
	UpdateTime  string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`    // 更新时间
	BusinessId  int32  `protobuf:"varint,9,opt,name=businessId,proto3" json:"businessId,omitempty"`   // 业务ID
	ShopId      int32  `protobuf:"varint,10,opt,name=shopId,proto3" json:"shopId,omitempty"`          // 商店ID
}

func (x *CourseClass) Reset() {
	*x = CourseClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseClass) ProtoMessage() {}

func (x *CourseClass) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseClass.ProtoReflect.Descriptor instead.
func (*CourseClass) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{212}
}

func (x *CourseClass) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseClass) GetCourseCount() int32 {
	if x != nil {
		return x.CourseCount
	}
	return 0
}

func (x *CourseClass) GetClickCount() int32 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *CourseClass) GetSortWeight() int32 {
	if x != nil {
		return x.SortWeight
	}
	return 0
}

func (x *CourseClass) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CourseClass) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CourseClass) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CourseClass) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *CourseClass) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 教程分类ID名称
type CourseClassIdName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // ID
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 名称
}

func (x *CourseClassIdName) Reset() {
	*x = CourseClassIdName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseClassIdName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseClassIdName) ProtoMessage() {}

func (x *CourseClassIdName) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseClassIdName.ProtoReflect.Descriptor instead.
func (*CourseClassIdName) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{213}
}

func (x *CourseClassIdName) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseClassIdName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 添加教程分类信息入参
type AddCourseClassInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId   string       `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`     // 操作用户ID
	CourseClass *CourseClass `protobuf:"bytes,2,opt,name=courseClass,proto3" json:"courseClass,omitempty"` // 教程分类信息
}

func (x *AddCourseClassInfoRequest) Reset() {
	*x = AddCourseClassInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCourseClassInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseClassInfoRequest) ProtoMessage() {}

func (x *AddCourseClassInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseClassInfoRequest.ProtoReflect.Descriptor instead.
func (*AddCourseClassInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{214}
}

func (x *AddCourseClassInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddCourseClassInfoRequest) GetCourseClass() *CourseClass {
	if x != nil {
		return x.CourseClass
	}
	return nil
}

// 添加教程分类信息出参
type AddCourseClassInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCourseClassInfoResp) Reset() {
	*x = AddCourseClassInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCourseClassInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseClassInfoResp) ProtoMessage() {}

func (x *AddCourseClassInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseClassInfoResp.ProtoReflect.Descriptor instead.
func (*AddCourseClassInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{215}
}

// 修改教程分类信息入参
type ModCourseClassInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId   string       `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`     // 操作用户ID
	CourseClass *CourseClass `protobuf:"bytes,2,opt,name=courseClass,proto3" json:"courseClass,omitempty"` // 教程分类信息
}

func (x *ModCourseClassInfoRequest) Reset() {
	*x = ModCourseClassInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCourseClassInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCourseClassInfoRequest) ProtoMessage() {}

func (x *ModCourseClassInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCourseClassInfoRequest.ProtoReflect.Descriptor instead.
func (*ModCourseClassInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{216}
}

func (x *ModCourseClassInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModCourseClassInfoRequest) GetCourseClass() *CourseClass {
	if x != nil {
		return x.CourseClass
	}
	return nil
}

// 修改教程分类信息出参
type ModCourseClassInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModCourseClassInfoResp) Reset() {
	*x = ModCourseClassInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCourseClassInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCourseClassInfoResp) ProtoMessage() {}

func (x *ModCourseClassInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCourseClassInfoResp.ProtoReflect.Descriptor instead.
func (*ModCourseClassInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{217}
}

// 删除教程分类入参
type DelCourseClassInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId        string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                       // 操作用户ID
	CourseClassIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseClassIdSet,proto3" json:"courseClassIdSet,omitempty"` // 教程分类ID集合
}

func (x *DelCourseClassInfoRequest) Reset() {
	*x = DelCourseClassInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCourseClassInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCourseClassInfoRequest) ProtoMessage() {}

func (x *DelCourseClassInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCourseClassInfoRequest.ProtoReflect.Descriptor instead.
func (*DelCourseClassInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{218}
}

func (x *DelCourseClassInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelCourseClassInfoRequest) GetCourseClassIdSet() []int64 {
	if x != nil {
		return x.CourseClassIdSet
	}
	return nil
}

// 删除教程分类出参
type DelCourseClassInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelCourseClassInfoResp) Reset() {
	*x = DelCourseClassInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCourseClassInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCourseClassInfoResp) ProtoMessage() {}

func (x *DelCourseClassInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCourseClassInfoResp.ProtoReflect.Descriptor instead.
func (*DelCourseClassInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{219}
}

func (x *DelCourseClassInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 查询上架状态教程分类名称列表入参
type GetCourseClassNameListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`        // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"`  // 查询选项
	BusinessId int32             `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32             `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *GetCourseClassNameListRequest) Reset() {
	*x = GetCourseClassNameListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseClassNameListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseClassNameListRequest) ProtoMessage() {}

func (x *GetCourseClassNameListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseClassNameListRequest.ProtoReflect.Descriptor instead.
func (*GetCourseClassNameListRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{220}
}

func (x *GetCourseClassNameListRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GetCourseClassNameListRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

func (x *GetCourseClassNameListRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *GetCourseClassNameListRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 查询上架状态教程分类名称列表出参
type GetCourseClassNameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ListCourseClassIdNameRespItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 列表项
}

func (x *GetCourseClassNameListResp) Reset() {
	*x = GetCourseClassNameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseClassNameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseClassNameListResp) ProtoMessage() {}

func (x *GetCourseClassNameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseClassNameListResp.ProtoReflect.Descriptor instead.
func (*GetCourseClassNameListResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{221}
}

func (x *GetCourseClassNameListResp) GetList() []*ListCourseClassIdNameRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询教程分类列表入参
type ListCourseClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`        // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"`  // 查询选项
	BusinessId int32             `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32             `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *ListCourseClassRequest) Reset() {
	*x = ListCourseClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseClassRequest) ProtoMessage() {}

func (x *ListCourseClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseClassRequest.ProtoReflect.Descriptor instead.
func (*ListCourseClassRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{222}
}

func (x *ListCourseClassRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListCourseClassRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

func (x *ListCourseClassRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ListCourseClassRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 查询教程分类列表出参
type ListCourseClassResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListCourseClassRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListCourseClassResp) Reset() {
	*x = ListCourseClassResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseClassResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseClassResp) ProtoMessage() {}

func (x *ListCourseClassResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseClassResp.ProtoReflect.Descriptor instead.
func (*ListCourseClassResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{223}
}

func (x *ListCourseClassResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCourseClassResp) GetList() []*ListCourseClassRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询教程分类列表出参项
type ListCourseClassRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CourseClass `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 教程分类信息
}

func (x *ListCourseClassRespItem) Reset() {
	*x = ListCourseClassRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseClassRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseClassRespItem) ProtoMessage() {}

func (x *ListCourseClassRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseClassRespItem.ProtoReflect.Descriptor instead.
func (*ListCourseClassRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{224}
}

func (x *ListCourseClassRespItem) GetInfo() *CourseClass {
	if x != nil {
		return x.Info
	}
	return nil
}

// 查询教程分类列表出参项
type ListCourseClassIdNameRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CourseClassIdName `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 教程分类ID名称信息
}

func (x *ListCourseClassIdNameRespItem) Reset() {
	*x = ListCourseClassIdNameRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseClassIdNameRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseClassIdNameRespItem) ProtoMessage() {}

func (x *ListCourseClassIdNameRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseClassIdNameRespItem.ProtoReflect.Descriptor instead.
func (*ListCourseClassIdNameRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{225}
}

func (x *ListCourseClassIdNameRespItem) GetInfo() *CourseClassIdName {
	if x != nil {
		return x.Info
	}
	return nil
}

// 上架教程分类入参
type UpCourseClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId        string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                       // 操作用户ID
	CourseClassIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseClassIdSet,proto3" json:"courseClassIdSet,omitempty"` // 教程分类ID集合
}

func (x *UpCourseClassRequest) Reset() {
	*x = UpCourseClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCourseClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCourseClassRequest) ProtoMessage() {}

func (x *UpCourseClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCourseClassRequest.ProtoReflect.Descriptor instead.
func (*UpCourseClassRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{226}
}

func (x *UpCourseClassRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *UpCourseClassRequest) GetCourseClassIdSet() []int64 {
	if x != nil {
		return x.CourseClassIdSet
	}
	return nil
}

// 上架教程分类出参
type UpCourseClassResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpCourseClassResp) Reset() {
	*x = UpCourseClassResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCourseClassResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCourseClassResp) ProtoMessage() {}

func (x *UpCourseClassResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCourseClassResp.ProtoReflect.Descriptor instead.
func (*UpCourseClassResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{227}
}

// 下架教程分类入参
type DownCourseClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId        string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                       // 操作用户ID
	CourseClassIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseClassIdSet,proto3" json:"courseClassIdSet,omitempty"` // 教程分类ID集合
}

func (x *DownCourseClassRequest) Reset() {
	*x = DownCourseClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownCourseClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownCourseClassRequest) ProtoMessage() {}

func (x *DownCourseClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownCourseClassRequest.ProtoReflect.Descriptor instead.
func (*DownCourseClassRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{228}
}

func (x *DownCourseClassRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DownCourseClassRequest) GetCourseClassIdSet() []int64 {
	if x != nil {
		return x.CourseClassIdSet
	}
	return nil
}

// 下架教程分类出参
type DownCourseClassResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DownCourseClassResp) Reset() {
	*x = DownCourseClassResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownCourseClassResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownCourseClassResp) ProtoMessage() {}

func (x *DownCourseClassResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownCourseClassResp.ProtoReflect.Descriptor instead.
func (*DownCourseClassResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{229}
}

func (x *DownCourseClassResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 达人信息
type WiseMan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              // 姓名
	HeadIcon   string `protobuf:"bytes,3,opt,name=headIcon,proto3" json:"headIcon,omitempty"`      // 头像
	Desc       string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`              // 描述
	Status     bool   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`         // 状态
	CreateTime string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	UpdateTime string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  // 更新时间
	BusinessId int32  `protobuf:"varint,8,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,9,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *WiseMan) Reset() {
	*x = WiseMan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WiseMan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiseMan) ProtoMessage() {}

func (x *WiseMan) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiseMan.ProtoReflect.Descriptor instead.
func (*WiseMan) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{230}
}

func (x *WiseMan) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WiseMan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WiseMan) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

func (x *WiseMan) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *WiseMan) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *WiseMan) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *WiseMan) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *WiseMan) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *WiseMan) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 达人名称
type WiseManName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // ID
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 姓名
}

func (x *WiseManName) Reset() {
	*x = WiseManName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WiseManName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiseManName) ProtoMessage() {}

func (x *WiseManName) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiseManName.ProtoReflect.Descriptor instead.
func (*WiseManName) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{231}
}

func (x *WiseManName) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WiseManName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 添加达人信息入参
type AddWiseManInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string   `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	WiseMan   *WiseMan `protobuf:"bytes,2,opt,name=wiseMan,proto3" json:"wiseMan,omitempty"`     // 达人信息
}

func (x *AddWiseManInfoRequest) Reset() {
	*x = AddWiseManInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWiseManInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWiseManInfoRequest) ProtoMessage() {}

func (x *AddWiseManInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWiseManInfoRequest.ProtoReflect.Descriptor instead.
func (*AddWiseManInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{232}
}

func (x *AddWiseManInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddWiseManInfoRequest) GetWiseMan() *WiseMan {
	if x != nil {
		return x.WiseMan
	}
	return nil
}

// 添加达人信息出参
type AddWiseManInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddWiseManInfoResp) Reset() {
	*x = AddWiseManInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWiseManInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWiseManInfoResp) ProtoMessage() {}

func (x *AddWiseManInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWiseManInfoResp.ProtoReflect.Descriptor instead.
func (*AddWiseManInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{233}
}

// 修改达人信息入参
type ModWiseManInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string   `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	WiseMan   *WiseMan `protobuf:"bytes,2,opt,name=wiseMan,proto3" json:"wiseMan,omitempty"`     // 达人信息
}

func (x *ModWiseManInfoRequest) Reset() {
	*x = ModWiseManInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModWiseManInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModWiseManInfoRequest) ProtoMessage() {}

func (x *ModWiseManInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModWiseManInfoRequest.ProtoReflect.Descriptor instead.
func (*ModWiseManInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{234}
}

func (x *ModWiseManInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModWiseManInfoRequest) GetWiseMan() *WiseMan {
	if x != nil {
		return x.WiseMan
	}
	return nil
}

// 修改达人信息出参
type ModWiseManInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModWiseManInfoResp) Reset() {
	*x = ModWiseManInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModWiseManInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModWiseManInfoResp) ProtoMessage() {}

func (x *ModWiseManInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModWiseManInfoResp.ProtoReflect.Descriptor instead.
func (*ModWiseManInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{235}
}

// 删除达人信息入参
type DelWiseManInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`  // 操作用户ID
	WiseManId int64  `protobuf:"varint,2,opt,name=wiseManId,proto3" json:"wiseManId,omitempty"` // 达人ID
}

func (x *DelWiseManInfoRequest) Reset() {
	*x = DelWiseManInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelWiseManInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWiseManInfoRequest) ProtoMessage() {}

func (x *DelWiseManInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWiseManInfoRequest.ProtoReflect.Descriptor instead.
func (*DelWiseManInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{236}
}

func (x *DelWiseManInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelWiseManInfoRequest) GetWiseManId() int64 {
	if x != nil {
		return x.WiseManId
	}
	return 0
}

// 删除达人信息出参
type DelWiseManInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelWiseManInfoResp) Reset() {
	*x = DelWiseManInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelWiseManInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWiseManInfoResp) ProtoMessage() {}

func (x *DelWiseManInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWiseManInfoResp.ProtoReflect.Descriptor instead.
func (*DelWiseManInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{237}
}

// 查询达人列表名称入参
type GetWiseManNameListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // 状态
}

func (x *GetWiseManNameListRequest) Reset() {
	*x = GetWiseManNameListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWiseManNameListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWiseManNameListRequest) ProtoMessage() {}

func (x *GetWiseManNameListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWiseManNameListRequest.ProtoReflect.Descriptor instead.
func (*GetWiseManNameListRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{238}
}

func (x *GetWiseManNameListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 查询达人列表名称出参
type GetWiseManNameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetWiseManNameListRespItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 列表
}

func (x *GetWiseManNameListResp) Reset() {
	*x = GetWiseManNameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWiseManNameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWiseManNameListResp) ProtoMessage() {}

func (x *GetWiseManNameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWiseManNameListResp.ProtoReflect.Descriptor instead.
func (*GetWiseManNameListResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{239}
}

func (x *GetWiseManNameListResp) GetList() []*GetWiseManNameListRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询达人列表名称出参项
type GetWiseManNameListRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *WiseManName `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 达人名称信息
}

func (x *GetWiseManNameListRespItem) Reset() {
	*x = GetWiseManNameListRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWiseManNameListRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWiseManNameListRespItem) ProtoMessage() {}

func (x *GetWiseManNameListRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWiseManNameListRespItem.ProtoReflect.Descriptor instead.
func (*GetWiseManNameListRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{240}
}

func (x *GetWiseManNameListRespItem) GetInfo() *WiseManName {
	if x != nil {
		return x.Info
	}
	return nil
}

// 查询达人列表入参
type ListWiseManRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListWiseManRequest) Reset() {
	*x = ListWiseManRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWiseManRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWiseManRequest) ProtoMessage() {}

func (x *ListWiseManRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWiseManRequest.ProtoReflect.Descriptor instead.
func (*ListWiseManRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{241}
}

func (x *ListWiseManRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListWiseManRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询达人列表出参
type ListWiseManResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListWiseManRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListWiseManResp) Reset() {
	*x = ListWiseManResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWiseManResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWiseManResp) ProtoMessage() {}

func (x *ListWiseManResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWiseManResp.ProtoReflect.Descriptor instead.
func (*ListWiseManResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{242}
}

func (x *ListWiseManResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListWiseManResp) GetList() []*ListWiseManRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询达人列表出参项
type ListWiseManRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *WiseMan `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 达人信息
}

func (x *ListWiseManRespItem) Reset() {
	*x = ListWiseManRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWiseManRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWiseManRespItem) ProtoMessage() {}

func (x *ListWiseManRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWiseManRespItem.ProtoReflect.Descriptor instead.
func (*ListWiseManRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{243}
}

func (x *ListWiseManRespItem) GetInfo() *WiseMan {
	if x != nil {
		return x.Info
	}
	return nil
}

// 上架达人入参
type UpWiseManRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`  // 操作用户ID
	WiseManId uint64 `protobuf:"varint,2,opt,name=wiseManId,proto3" json:"wiseManId,omitempty"` // 达人ID
}

func (x *UpWiseManRequest) Reset() {
	*x = UpWiseManRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpWiseManRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpWiseManRequest) ProtoMessage() {}

func (x *UpWiseManRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpWiseManRequest.ProtoReflect.Descriptor instead.
func (*UpWiseManRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{244}
}

func (x *UpWiseManRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *UpWiseManRequest) GetWiseManId() uint64 {
	if x != nil {
		return x.WiseManId
	}
	return 0
}

// 上架达人出参
type UpWiseManResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpWiseManResp) Reset() {
	*x = UpWiseManResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpWiseManResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpWiseManResp) ProtoMessage() {}

func (x *UpWiseManResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpWiseManResp.ProtoReflect.Descriptor instead.
func (*UpWiseManResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{245}
}

// 下架达人入参
type DownWiseManRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`  // 操作用户ID
	WiseManId uint64 `protobuf:"varint,2,opt,name=wiseManId,proto3" json:"wiseManId,omitempty"` // 达人ID
}

func (x *DownWiseManRequest) Reset() {
	*x = DownWiseManRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownWiseManRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownWiseManRequest) ProtoMessage() {}

func (x *DownWiseManRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownWiseManRequest.ProtoReflect.Descriptor instead.
func (*DownWiseManRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{246}
}

func (x *DownWiseManRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DownWiseManRequest) GetWiseManId() uint64 {
	if x != nil {
		return x.WiseManId
	}
	return 0
}

// 下架达人出参
type DownWiseManResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownWiseManResp) Reset() {
	*x = DownWiseManResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownWiseManResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownWiseManResp) ProtoMessage() {}

func (x *DownWiseManResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownWiseManResp.ProtoReflect.Descriptor instead.
func (*DownWiseManResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{247}
}

// 教程步骤信息
type CourseStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	CourseId   int64  `protobuf:"varint,2,opt,name=courseId,proto3" json:"courseId,omitempty"`     // 课程ID
	StepName   string `protobuf:"bytes,3,opt,name=stepName,proto3" json:"stepName,omitempty"`      // 步骤名称
	StepCover  string `protobuf:"bytes,4,opt,name=stepCover,proto3" json:"stepCover,omitempty"`    // 步骤封面
	StartTime  string `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`    // 开始时间
	EndTime    string `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`        // 结束时间
	ClickCount uint32 `protobuf:"varint,7,opt,name=clickCount,proto3" json:"clickCount,omitempty"` // 点击次数
}

func (x *CourseStep) Reset() {
	*x = CourseStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseStep) ProtoMessage() {}

func (x *CourseStep) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseStep.ProtoReflect.Descriptor instead.
func (*CourseStep) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{248}
}

func (x *CourseStep) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseStep) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CourseStep) GetStepName() string {
	if x != nil {
		return x.StepName
	}
	return ""
}

func (x *CourseStep) GetStepCover() string {
	if x != nil {
		return x.StepCover
	}
	return ""
}

func (x *CourseStep) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CourseStep) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CourseStep) GetClickCount() uint32 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

// 添加教程步骤信息入参
type AddCourseStepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseStep *CourseStep `protobuf:"bytes,1,opt,name=courseStep,proto3" json:"courseStep,omitempty"` // 教程步骤信息
}

func (x *AddCourseStepRequest) Reset() {
	*x = AddCourseStepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCourseStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseStepRequest) ProtoMessage() {}

func (x *AddCourseStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseStepRequest.ProtoReflect.Descriptor instead.
func (*AddCourseStepRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{249}
}

func (x *AddCourseStepRequest) GetCourseStep() *CourseStep {
	if x != nil {
		return x.CourseStep
	}
	return nil
}

// 添加教程步骤信息出参
type AddCourseStepResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCourseStepResp) Reset() {
	*x = AddCourseStepResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCourseStepResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseStepResp) ProtoMessage() {}

func (x *AddCourseStepResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseStepResp.ProtoReflect.Descriptor instead.
func (*AddCourseStepResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{250}
}

// 查询教程步骤入参
type ListCourseStepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId int64 `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"` // 课程ID
}

func (x *ListCourseStepRequest) Reset() {
	*x = ListCourseStepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseStepRequest) ProtoMessage() {}

func (x *ListCourseStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseStepRequest.ProtoReflect.Descriptor instead.
func (*ListCourseStepRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{251}
}

func (x *ListCourseStepRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

// 查询教程步骤出参
type ListCourseStepResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseStepList []*ListCourseStepRespItem `protobuf:"bytes,1,rep,name=courseStepList,proto3" json:"courseStepList,omitempty"` // 教程步骤列表
}

func (x *ListCourseStepResp) Reset() {
	*x = ListCourseStepResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseStepResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseStepResp) ProtoMessage() {}

func (x *ListCourseStepResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseStepResp.ProtoReflect.Descriptor instead.
func (*ListCourseStepResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{252}
}

func (x *ListCourseStepResp) GetCourseStepList() []*ListCourseStepRespItem {
	if x != nil {
		return x.CourseStepList
	}
	return nil
}

// 查询教程步骤出参项
type ListCourseStepRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseStep *CourseStep `protobuf:"bytes,1,opt,name=courseStep,proto3" json:"courseStep,omitempty"` // 教程步骤信息
}

func (x *ListCourseStepRespItem) Reset() {
	*x = ListCourseStepRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseStepRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseStepRespItem) ProtoMessage() {}

func (x *ListCourseStepRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseStepRespItem.ProtoReflect.Descriptor instead.
func (*ListCourseStepRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{253}
}

func (x *ListCourseStepRespItem) GetCourseStep() *CourseStep {
	if x != nil {
		return x.CourseStep
	}
	return nil
}

// 教程信息
type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         // ID
	CourseClassId  int64  `protobuf:"varint,2,opt,name=courseClassId,proto3" json:"courseClassId,omitempty"`   // 课程分类ID
	CourseName     string `protobuf:"bytes,3,opt,name=courseName,proto3" json:"courseName,omitempty"`          // 课程名称
	CourseCover    string `protobuf:"bytes,4,opt,name=courseCover,proto3" json:"courseCover,omitempty"`        // 课程封面
	CourseUrl      string `protobuf:"bytes,5,opt,name=courseUrl,proto3" json:"courseUrl,omitempty"`            // 课程链接
	WiseManId      int64  `protobuf:"varint,6,opt,name=wiseManId,proto3" json:"wiseManId,omitempty"`           // 达人ID
	StepCount      int32  `protobuf:"varint,7,opt,name=stepCount,proto3" json:"stepCount,omitempty"`           // 步骤数量
	ProductCount   int32  `protobuf:"varint,8,opt,name=productCount,proto3" json:"productCount,omitempty"`     // 产品数量
	PlayCount      int32  `protobuf:"varint,9,opt,name=playCount,proto3" json:"playCount,omitempty"`           // 播放次数
	CollectCount   int32  `protobuf:"varint,10,opt,name=collectCount,proto3" json:"collectCount,omitempty"`    // 收藏次数
	SortWeight     int32  `protobuf:"varint,11,opt,name=sortWeight,proto3" json:"sortWeight,omitempty"`        // 排序权重
	IsRecommend    bool   `protobuf:"varint,12,opt,name=isRecommend,proto3" json:"isRecommend,omitempty"`      // 是否推荐
	Status         bool   `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`                // 状态
	CreateTime     string `protobuf:"bytes,14,opt,name=createTime,proto3" json:"createTime,omitempty"`         // 创建时间
	UpdateTime     string `protobuf:"bytes,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`         // 更新时间
	BusinessId     int32  `protobuf:"varint,16,opt,name=businessId,proto3" json:"businessId,omitempty"`        // 业务ID
	ShopId         int32  `protobuf:"varint,17,opt,name=shopId,proto3" json:"shopId,omitempty"`                // 商店ID
	CourseDuration string `protobuf:"bytes,18,opt,name=courseDuration,proto3" json:"courseDuration,omitempty"` // 课程时长
	LandscapeCover string `protobuf:"bytes,19,opt,name=landscapeCover,proto3" json:"landscapeCover,omitempty"` // 横向封面
}

func (x *Course) Reset() {
	*x = Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{254}
}

func (x *Course) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Course) GetCourseClassId() int64 {
	if x != nil {
		return x.CourseClassId
	}
	return 0
}

func (x *Course) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *Course) GetCourseCover() string {
	if x != nil {
		return x.CourseCover
	}
	return ""
}

func (x *Course) GetCourseUrl() string {
	if x != nil {
		return x.CourseUrl
	}
	return ""
}

func (x *Course) GetWiseManId() int64 {
	if x != nil {
		return x.WiseManId
	}
	return 0
}

func (x *Course) GetStepCount() int32 {
	if x != nil {
		return x.StepCount
	}
	return 0
}

func (x *Course) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *Course) GetPlayCount() int32 {
	if x != nil {
		return x.PlayCount
	}
	return 0
}

func (x *Course) GetCollectCount() int32 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *Course) GetSortWeight() int32 {
	if x != nil {
		return x.SortWeight
	}
	return 0
}

func (x *Course) GetIsRecommend() bool {
	if x != nil {
		return x.IsRecommend
	}
	return false
}

func (x *Course) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Course) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Course) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Course) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *Course) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Course) GetCourseDuration() string {
	if x != nil {
		return x.CourseDuration
	}
	return ""
}

func (x *Course) GetLandscapeCover() string {
	if x != nil {
		return x.LandscapeCover
	}
	return ""
}

// 教程名称
type CourseName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // ID
	CourseName string `protobuf:"bytes,2,opt,name=courseName,proto3" json:"courseName,omitempty"` // 教程名称
}

func (x *CourseName) Reset() {
	*x = CourseName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseName) ProtoMessage() {}

func (x *CourseName) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseName.ProtoReflect.Descriptor instead.
func (*CourseName) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{255}
}

func (x *CourseName) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseName) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

// 添加教程信息入参
type AddCourseInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId         string               `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                 // 操作用户ID
	Course            *Course              `protobuf:"bytes,2,opt,name=course,proto3" json:"course,omitempty"`                       // 教程信息
	CourseStepList    []*CourseStep        `protobuf:"bytes,3,rep,name=courseStepList,proto3" json:"courseStepList,omitempty"`       // 教程步骤列表
	CourseProductList []*CourseProductInfo `protobuf:"bytes,4,rep,name=courseProductList,proto3" json:"courseProductList,omitempty"` // 视频商品列表
}

func (x *AddCourseInfoRequest) Reset() {
	*x = AddCourseInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCourseInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseInfoRequest) ProtoMessage() {}

func (x *AddCourseInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseInfoRequest.ProtoReflect.Descriptor instead.
func (*AddCourseInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{256}
}

func (x *AddCourseInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddCourseInfoRequest) GetCourse() *Course {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *AddCourseInfoRequest) GetCourseStepList() []*CourseStep {
	if x != nil {
		return x.CourseStepList
	}
	return nil
}

func (x *AddCourseInfoRequest) GetCourseProductList() []*CourseProductInfo {
	if x != nil {
		return x.CourseProductList
	}
	return nil
}

// 添加教程信息出参
type AddCourseInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCourseInfoResp) Reset() {
	*x = AddCourseInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCourseInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseInfoResp) ProtoMessage() {}

func (x *AddCourseInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseInfoResp.ProtoReflect.Descriptor instead.
func (*AddCourseInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{257}
}

// 修改教程信息入参
type ModCourseInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId         string               `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                 // 操作用户ID
	Course            *Course              `protobuf:"bytes,2,opt,name=course,proto3" json:"course,omitempty"`                       // 教程信息
	CourseStepList    []*CourseStep        `protobuf:"bytes,3,rep,name=courseStepList,proto3" json:"courseStepList,omitempty"`       // 教程步骤列表
	CourseProductList []*CourseProductInfo `protobuf:"bytes,4,rep,name=courseProductList,proto3" json:"courseProductList,omitempty"` // 视频商品列表
}

func (x *ModCourseInfoRequest) Reset() {
	*x = ModCourseInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCourseInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCourseInfoRequest) ProtoMessage() {}

func (x *ModCourseInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCourseInfoRequest.ProtoReflect.Descriptor instead.
func (*ModCourseInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{258}
}

func (x *ModCourseInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModCourseInfoRequest) GetCourse() *Course {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *ModCourseInfoRequest) GetCourseStepList() []*CourseStep {
	if x != nil {
		return x.CourseStepList
	}
	return nil
}

func (x *ModCourseInfoRequest) GetCourseProductList() []*CourseProductInfo {
	if x != nil {
		return x.CourseProductList
	}
	return nil
}

// 修改教程信息出参
type ModCourseInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModCourseInfoResp) Reset() {
	*x = ModCourseInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCourseInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCourseInfoResp) ProtoMessage() {}

func (x *ModCourseInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCourseInfoResp.ProtoReflect.Descriptor instead.
func (*ModCourseInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{259}
}

// 删除教程入参
type DelCourseInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId   string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`             // 操作用户ID
	CourseIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseIdSet,proto3" json:"courseIdSet,omitempty"` // 教程ID集合
}

func (x *DelCourseInfoRequest) Reset() {
	*x = DelCourseInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCourseInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCourseInfoRequest) ProtoMessage() {}

func (x *DelCourseInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCourseInfoRequest.ProtoReflect.Descriptor instead.
func (*DelCourseInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{260}
}

func (x *DelCourseInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelCourseInfoRequest) GetCourseIdSet() []int64 {
	if x != nil {
		return x.CourseIdSet
	}
	return nil
}

// 删除教程出参
type DelCourseInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCourseInfoResp) Reset() {
	*x = DelCourseInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCourseInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCourseInfoResp) ProtoMessage() {}

func (x *DelCourseInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCourseInfoResp.ProtoReflect.Descriptor instead.
func (*DelCourseInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{261}
}

// 查询教程列表入参
type ListCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListCourseRequest) Reset() {
	*x = ListCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseRequest) ProtoMessage() {}

func (x *ListCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseRequest.ProtoReflect.Descriptor instead.
func (*ListCourseRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{262}
}

func (x *ListCourseRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListCourseRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询教程列表出参
type ListCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListCourseRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListCourseResp) Reset() {
	*x = ListCourseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseResp) ProtoMessage() {}

func (x *ListCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseResp.ProtoReflect.Descriptor instead.
func (*ListCourseResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{263}
}

func (x *ListCourseResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCourseResp) GetList() []*ListCourseRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询教程列表出参项
type ListCourseRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Course `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 教程信息
}

func (x *ListCourseRespItem) Reset() {
	*x = ListCourseRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseRespItem) ProtoMessage() {}

func (x *ListCourseRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseRespItem.ProtoReflect.Descriptor instead.
func (*ListCourseRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{264}
}

func (x *ListCourseRespItem) GetInfo() *Course {
	if x != nil {
		return x.Info
	}
	return nil
}

// 查询可推荐教程名称列表入参
type ListCanRecommendCourseNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListCanRecommendCourseNameRequest) Reset() {
	*x = ListCanRecommendCourseNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCanRecommendCourseNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCanRecommendCourseNameRequest) ProtoMessage() {}

func (x *ListCanRecommendCourseNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCanRecommendCourseNameRequest.ProtoReflect.Descriptor instead.
func (*ListCanRecommendCourseNameRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{265}
}

func (x *ListCanRecommendCourseNameRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListCanRecommendCourseNameRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询可推荐教程名称列表出参
type ListCanRecommendCourseNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ListCanRecommendCourseNameRespItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    // 列表
	Total int64                                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总数
}

func (x *ListCanRecommendCourseNameResp) Reset() {
	*x = ListCanRecommendCourseNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCanRecommendCourseNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCanRecommendCourseNameResp) ProtoMessage() {}

func (x *ListCanRecommendCourseNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCanRecommendCourseNameResp.ProtoReflect.Descriptor instead.
func (*ListCanRecommendCourseNameResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{266}
}

func (x *ListCanRecommendCourseNameResp) GetList() []*ListCanRecommendCourseNameRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListCanRecommendCourseNameResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 查询可推荐教程名称列表出参项
type ListCanRecommendCourseNameRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CourseName `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 教程名称信息
}

func (x *ListCanRecommendCourseNameRespItem) Reset() {
	*x = ListCanRecommendCourseNameRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCanRecommendCourseNameRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCanRecommendCourseNameRespItem) ProtoMessage() {}

func (x *ListCanRecommendCourseNameRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCanRecommendCourseNameRespItem.ProtoReflect.Descriptor instead.
func (*ListCanRecommendCourseNameRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{267}
}

func (x *ListCanRecommendCourseNameRespItem) GetInfo() *CourseName {
	if x != nil {
		return x.Info
	}
	return nil
}

// 上架教程入参
type UpCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId   string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`             // 操作用户ID
	CourseIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseIdSet,proto3" json:"courseIdSet,omitempty"` // 教程ID集合
}

func (x *UpCourseRequest) Reset() {
	*x = UpCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCourseRequest) ProtoMessage() {}

func (x *UpCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCourseRequest.ProtoReflect.Descriptor instead.
func (*UpCourseRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{268}
}

func (x *UpCourseRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *UpCourseRequest) GetCourseIdSet() []int64 {
	if x != nil {
		return x.CourseIdSet
	}
	return nil
}

// 上架教程出参
type UpCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpCourseResp) Reset() {
	*x = UpCourseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCourseResp) ProtoMessage() {}

func (x *UpCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCourseResp.ProtoReflect.Descriptor instead.
func (*UpCourseResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{269}
}

// 下架教程入参
type DownCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId   string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`             // 操作用户ID
	CourseIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseIdSet,proto3" json:"courseIdSet,omitempty"` // 教程ID集合
}

func (x *DownCourseRequest) Reset() {
	*x = DownCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownCourseRequest) ProtoMessage() {}

func (x *DownCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownCourseRequest.ProtoReflect.Descriptor instead.
func (*DownCourseRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{270}
}

func (x *DownCourseRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DownCourseRequest) GetCourseIdSet() []int64 {
	if x != nil {
		return x.CourseIdSet
	}
	return nil
}

// 下架教程出参
type DownCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownCourseResp) Reset() {
	*x = DownCourseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownCourseResp) ProtoMessage() {}

func (x *DownCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownCourseResp.ProtoReflect.Descriptor instead.
func (*DownCourseResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{271}
}

// 查询教程步骤入参
type ListCourseStepAndProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId int64 `protobuf:"varint,1,opt,name=courseId,proto3" json:"courseId,omitempty"` // 课程ID
}

func (x *ListCourseStepAndProductRequest) Reset() {
	*x = ListCourseStepAndProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseStepAndProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseStepAndProductRequest) ProtoMessage() {}

func (x *ListCourseStepAndProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseStepAndProductRequest.ProtoReflect.Descriptor instead.
func (*ListCourseStepAndProductRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{272}
}

func (x *ListCourseStepAndProductRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

// 查询教程步骤出参
type ListCourseStepAndProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseStepList    []*ListCourseStepRespItem `protobuf:"bytes,1,rep,name=courseStepList,proto3" json:"courseStepList,omitempty"`       // 教程步骤列表
	CourseProductList []*CourseProductInfo      `protobuf:"bytes,2,rep,name=courseProductList,proto3" json:"courseProductList,omitempty"` // 视频商品列表
}

func (x *ListCourseStepAndProductResp) Reset() {
	*x = ListCourseStepAndProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseStepAndProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseStepAndProductResp) ProtoMessage() {}

func (x *ListCourseStepAndProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseStepAndProductResp.ProtoReflect.Descriptor instead.
func (*ListCourseStepAndProductResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{273}
}

func (x *ListCourseStepAndProductResp) GetCourseStepList() []*ListCourseStepRespItem {
	if x != nil {
		return x.CourseStepList
	}
	return nil
}

func (x *ListCourseStepAndProductResp) GetCourseProductList() []*CourseProductInfo {
	if x != nil {
		return x.CourseProductList
	}
	return nil
}

// 推荐教程信息
type CourseRecommend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         // ID
	CourseId       int64  `protobuf:"varint,2,opt,name=courseId,proto3" json:"courseId,omitempty"`             // 课程ID
	CourseName     string `protobuf:"bytes,4,opt,name=courseName,proto3" json:"courseName,omitempty"`          // 课程名称
	CourseCover    string `protobuf:"bytes,5,opt,name=courseCover,proto3" json:"courseCover,omitempty"`        // 课程封面
	PlayCount      uint32 `protobuf:"varint,6,opt,name=playCount,proto3" json:"playCount,omitempty"`           // 播放次数
	SortWeight     uint32 `protobuf:"varint,7,opt,name=sortWeight,proto3" json:"sortWeight,omitempty"`         // 排序权重
	Status         bool   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                 // 状态
	CreateTime     string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`          // 创建时间
	UpdateTime     string `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`         // 更新时间
	BusinessId     int32  `protobuf:"varint,11,opt,name=businessId,proto3" json:"businessId,omitempty"`        // 业务ID
	ShopId         int32  `protobuf:"varint,12,opt,name=shopId,proto3" json:"shopId,omitempty"`                // 商店ID
	AppProductId   string `protobuf:"bytes,13,opt,name=appProductId,proto3" json:"appProductId,omitempty"`     // 应用产品ID
	CourseClassId  string `protobuf:"bytes,14,opt,name=courseClassId,proto3" json:"courseClassId,omitempty"`   // 课程分类ID
	LandscapeCover string `protobuf:"bytes,15,opt,name=landscapeCover,proto3" json:"landscapeCover,omitempty"` // 横向封面
}

func (x *CourseRecommend) Reset() {
	*x = CourseRecommend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseRecommend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseRecommend) ProtoMessage() {}

func (x *CourseRecommend) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseRecommend.ProtoReflect.Descriptor instead.
func (*CourseRecommend) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{274}
}

func (x *CourseRecommend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseRecommend) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CourseRecommend) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *CourseRecommend) GetCourseCover() string {
	if x != nil {
		return x.CourseCover
	}
	return ""
}

func (x *CourseRecommend) GetPlayCount() uint32 {
	if x != nil {
		return x.PlayCount
	}
	return 0
}

func (x *CourseRecommend) GetSortWeight() uint32 {
	if x != nil {
		return x.SortWeight
	}
	return 0
}

func (x *CourseRecommend) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CourseRecommend) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CourseRecommend) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CourseRecommend) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *CourseRecommend) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CourseRecommend) GetAppProductId() string {
	if x != nil {
		return x.AppProductId
	}
	return ""
}

func (x *CourseRecommend) GetCourseClassId() string {
	if x != nil {
		return x.CourseClassId
	}
	return ""
}

func (x *CourseRecommend) GetLandscapeCover() string {
	if x != nil {
		return x.LandscapeCover
	}
	return ""
}

// 添加推荐教程信息入参
type AddCourseRecommendInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId       string           `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`             // 操作用户ID
	CourseRecommend *CourseRecommend `protobuf:"bytes,2,opt,name=courseRecommend,proto3" json:"courseRecommend,omitempty"` // 推荐教程信息
}

func (x *AddCourseRecommendInfoRequest) Reset() {
	*x = AddCourseRecommendInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCourseRecommendInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseRecommendInfoRequest) ProtoMessage() {}

func (x *AddCourseRecommendInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseRecommendInfoRequest.ProtoReflect.Descriptor instead.
func (*AddCourseRecommendInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{275}
}

func (x *AddCourseRecommendInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddCourseRecommendInfoRequest) GetCourseRecommend() *CourseRecommend {
	if x != nil {
		return x.CourseRecommend
	}
	return nil
}

// 添加推荐教程信息出参
type AddCourseRecommendInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCourseRecommendInfoResp) Reset() {
	*x = AddCourseRecommendInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCourseRecommendInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseRecommendInfoResp) ProtoMessage() {}

func (x *AddCourseRecommendInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseRecommendInfoResp.ProtoReflect.Descriptor instead.
func (*AddCourseRecommendInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{276}
}

// 修改推荐教程信息入参
type ModCourseRecommendInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId       string           `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`             // 操作用户ID
	CourseRecommend *CourseRecommend `protobuf:"bytes,2,opt,name=courseRecommend,proto3" json:"courseRecommend,omitempty"` // 推荐教程信息
}

func (x *ModCourseRecommendInfoRequest) Reset() {
	*x = ModCourseRecommendInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCourseRecommendInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCourseRecommendInfoRequest) ProtoMessage() {}

func (x *ModCourseRecommendInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCourseRecommendInfoRequest.ProtoReflect.Descriptor instead.
func (*ModCourseRecommendInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{277}
}

func (x *ModCourseRecommendInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModCourseRecommendInfoRequest) GetCourseRecommend() *CourseRecommend {
	if x != nil {
		return x.CourseRecommend
	}
	return nil
}

// 修改推荐教程信息出参
type ModCourseRecommendInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModCourseRecommendInfoResp) Reset() {
	*x = ModCourseRecommendInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCourseRecommendInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCourseRecommendInfoResp) ProtoMessage() {}

func (x *ModCourseRecommendInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCourseRecommendInfoResp.ProtoReflect.Descriptor instead.
func (*ModCourseRecommendInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{278}
}

// 删除推荐教程入参
type DelCourseRecommendInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId            string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                               // 操作用户ID
	CourseRecommendIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseRecommendIdSet,proto3" json:"courseRecommendIdSet,omitempty"` // 推荐教程ID集合
}

func (x *DelCourseRecommendInfoRequest) Reset() {
	*x = DelCourseRecommendInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCourseRecommendInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCourseRecommendInfoRequest) ProtoMessage() {}

func (x *DelCourseRecommendInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCourseRecommendInfoRequest.ProtoReflect.Descriptor instead.
func (*DelCourseRecommendInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{279}
}

func (x *DelCourseRecommendInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelCourseRecommendInfoRequest) GetCourseRecommendIdSet() []int64 {
	if x != nil {
		return x.CourseRecommendIdSet
	}
	return nil
}

// 删除推荐教程出参
type DelCourseRecommendInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCourseRecommendInfoResp) Reset() {
	*x = DelCourseRecommendInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCourseRecommendInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCourseRecommendInfoResp) ProtoMessage() {}

func (x *DelCourseRecommendInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCourseRecommendInfoResp.ProtoReflect.Descriptor instead.
func (*DelCourseRecommendInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{280}
}

// 查询推荐教程列表入参
type ListCourseRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListCourseRecommendRequest) Reset() {
	*x = ListCourseRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseRecommendRequest) ProtoMessage() {}

func (x *ListCourseRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseRecommendRequest.ProtoReflect.Descriptor instead.
func (*ListCourseRecommendRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{281}
}

func (x *ListCourseRecommendRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListCourseRecommendRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询推荐教程列表出参
type ListCourseRecommendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListCourseRecommendRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListCourseRecommendResp) Reset() {
	*x = ListCourseRecommendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseRecommendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseRecommendResp) ProtoMessage() {}

func (x *ListCourseRecommendResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseRecommendResp.ProtoReflect.Descriptor instead.
func (*ListCourseRecommendResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{282}
}

func (x *ListCourseRecommendResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCourseRecommendResp) GetList() []*ListCourseRecommendRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询推荐教程列表出参项
type ListCourseRecommendRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info           *CourseRecommend         `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`                     // 推荐教程信息
	IdNameInfoList []*CourseClassIdNameInfo `protobuf:"bytes,2,rep,name=idNameInfoList,proto3" json:"idNameInfoList,omitempty"` // 课程分类ID名称信息列表
}

func (x *ListCourseRecommendRespItem) Reset() {
	*x = ListCourseRecommendRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCourseRecommendRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCourseRecommendRespItem) ProtoMessage() {}

func (x *ListCourseRecommendRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCourseRecommendRespItem.ProtoReflect.Descriptor instead.
func (*ListCourseRecommendRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{283}
}

func (x *ListCourseRecommendRespItem) GetInfo() *CourseRecommend {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ListCourseRecommendRespItem) GetIdNameInfoList() []*CourseClassIdNameInfo {
	if x != nil {
		return x.IdNameInfoList
	}
	return nil
}

// 上架推荐教程入参
type UpCourseRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId            string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                               // 操作用户ID
	CourseRecommendIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseRecommendIdSet,proto3" json:"courseRecommendIdSet,omitempty"` // 推荐教程ID集合
}

func (x *UpCourseRecommendRequest) Reset() {
	*x = UpCourseRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCourseRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCourseRecommendRequest) ProtoMessage() {}

func (x *UpCourseRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCourseRecommendRequest.ProtoReflect.Descriptor instead.
func (*UpCourseRecommendRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{284}
}

func (x *UpCourseRecommendRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *UpCourseRecommendRequest) GetCourseRecommendIdSet() []int64 {
	if x != nil {
		return x.CourseRecommendIdSet
	}
	return nil
}

// 上架推荐教程出参
type UpCourseRecommendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpCourseRecommendResp) Reset() {
	*x = UpCourseRecommendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpCourseRecommendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpCourseRecommendResp) ProtoMessage() {}

func (x *UpCourseRecommendResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpCourseRecommendResp.ProtoReflect.Descriptor instead.
func (*UpCourseRecommendResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{285}
}

// 下架推荐教程入参
type DownCourseRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId            string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`                               // 操作用户ID
	CourseRecommendIdSet []int64 `protobuf:"varint,2,rep,packed,name=courseRecommendIdSet,proto3" json:"courseRecommendIdSet,omitempty"` // 推荐教程ID集合
}

func (x *DownCourseRecommendRequest) Reset() {
	*x = DownCourseRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownCourseRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownCourseRecommendRequest) ProtoMessage() {}

func (x *DownCourseRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownCourseRecommendRequest.ProtoReflect.Descriptor instead.
func (*DownCourseRecommendRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{286}
}

func (x *DownCourseRecommendRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DownCourseRecommendRequest) GetCourseRecommendIdSet() []int64 {
	if x != nil {
		return x.CourseRecommendIdSet
	}
	return nil
}

// 下架推荐教程出参
type DownCourseRecommendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownCourseRecommendResp) Reset() {
	*x = DownCourseRecommendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownCourseRecommendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownCourseRecommendResp) ProtoMessage() {}

func (x *DownCourseRecommendResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownCourseRecommendResp.ProtoReflect.Descriptor instead.
func (*DownCourseRecommendResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{287}
}

// 医生
type Doctor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              // 名称
	HeadIcon   string `protobuf:"bytes,3,opt,name=headIcon,proto3" json:"headIcon,omitempty"`      // 头像
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`            // 标题
	Desc       string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`              // 描述
	Status     bool   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`         // 状态
	CreateTime string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	BusinessId int32  `protobuf:"varint,8,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,9,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
}

func (x *Doctor) Reset() {
	*x = Doctor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Doctor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Doctor) ProtoMessage() {}

func (x *Doctor) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Doctor.ProtoReflect.Descriptor instead.
func (*Doctor) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{288}
}

func (x *Doctor) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Doctor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Doctor) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

func (x *Doctor) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Doctor) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Doctor) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Doctor) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Doctor) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *Doctor) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 添加医生信息入参
type AddDoctorInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Doctor    *Doctor `protobuf:"bytes,2,opt,name=doctor,proto3" json:"doctor,omitempty"`       // 医生信息
}

func (x *AddDoctorInfoRequest) Reset() {
	*x = AddDoctorInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDoctorInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDoctorInfoRequest) ProtoMessage() {}

func (x *AddDoctorInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDoctorInfoRequest.ProtoReflect.Descriptor instead.
func (*AddDoctorInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{289}
}

func (x *AddDoctorInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddDoctorInfoRequest) GetDoctor() *Doctor {
	if x != nil {
		return x.Doctor
	}
	return nil
}

// 添加医生信息出参
type AddDoctorInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddDoctorInfoResp) Reset() {
	*x = AddDoctorInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDoctorInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDoctorInfoResp) ProtoMessage() {}

func (x *AddDoctorInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDoctorInfoResp.ProtoReflect.Descriptor instead.
func (*AddDoctorInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{290}
}

// 修改医生信息入参
type ModDoctorInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Doctor    *Doctor `protobuf:"bytes,2,opt,name=doctor,proto3" json:"doctor,omitempty"`       // 医生信息
}

func (x *ModDoctorInfoRequest) Reset() {
	*x = ModDoctorInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModDoctorInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModDoctorInfoRequest) ProtoMessage() {}

func (x *ModDoctorInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModDoctorInfoRequest.ProtoReflect.Descriptor instead.
func (*ModDoctorInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{291}
}

func (x *ModDoctorInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModDoctorInfoRequest) GetDoctor() *Doctor {
	if x != nil {
		return x.Doctor
	}
	return nil
}

// 修改医生信息出参
type ModDoctorInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModDoctorInfoResp) Reset() {
	*x = ModDoctorInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModDoctorInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModDoctorInfoResp) ProtoMessage() {}

func (x *ModDoctorInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModDoctorInfoResp.ProtoReflect.Descriptor instead.
func (*ModDoctorInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{292}
}

// 删除医生入参
type DelDoctorInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	DoctorId  int64  `protobuf:"varint,2,opt,name=doctorId,proto3" json:"doctorId,omitempty"`  // 医生ID
}

func (x *DelDoctorInfoRequest) Reset() {
	*x = DelDoctorInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDoctorInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDoctorInfoRequest) ProtoMessage() {}

func (x *DelDoctorInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDoctorInfoRequest.ProtoReflect.Descriptor instead.
func (*DelDoctorInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{293}
}

func (x *DelDoctorInfoRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelDoctorInfoRequest) GetDoctorId() int64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

// 删除医生出参
type DelDoctorInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelDoctorInfoResp) Reset() {
	*x = DelDoctorInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDoctorInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDoctorInfoResp) ProtoMessage() {}

func (x *DelDoctorInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDoctorInfoResp.ProtoReflect.Descriptor instead.
func (*DelDoctorInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{294}
}

// 查询医生列表入参
type ListDoctorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListDoctorRequest) Reset() {
	*x = ListDoctorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDoctorRequest) ProtoMessage() {}

func (x *ListDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDoctorRequest.ProtoReflect.Descriptor instead.
func (*ListDoctorRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{295}
}

func (x *ListDoctorRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListDoctorRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询医生列表出参
type ListDoctorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListDoctorRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListDoctorResp) Reset() {
	*x = ListDoctorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDoctorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDoctorResp) ProtoMessage() {}

func (x *ListDoctorResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDoctorResp.ProtoReflect.Descriptor instead.
func (*ListDoctorResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{296}
}

func (x *ListDoctorResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDoctorResp) GetList() []*ListDoctorRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询医生列表出参项
type ListDoctorRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Doctor `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 医生信息
}

func (x *ListDoctorRespItem) Reset() {
	*x = ListDoctorRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDoctorRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDoctorRespItem) ProtoMessage() {}

func (x *ListDoctorRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDoctorRespItem.ProtoReflect.Descriptor instead.
func (*ListDoctorRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{297}
}

func (x *ListDoctorRespItem) GetInfo() *Doctor {
	if x != nil {
		return x.Info
	}
	return nil
}

// 上架医生入参
type UpDoctorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	DoctorId  uint64 `protobuf:"varint,2,opt,name=doctorId,proto3" json:"doctorId,omitempty"`  // 医生ID
}

func (x *UpDoctorRequest) Reset() {
	*x = UpDoctorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpDoctorRequest) ProtoMessage() {}

func (x *UpDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpDoctorRequest.ProtoReflect.Descriptor instead.
func (*UpDoctorRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{298}
}

func (x *UpDoctorRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *UpDoctorRequest) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

// 上架医生出参
type UpDoctorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpDoctorResp) Reset() {
	*x = UpDoctorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpDoctorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpDoctorResp) ProtoMessage() {}

func (x *UpDoctorResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpDoctorResp.ProtoReflect.Descriptor instead.
func (*UpDoctorResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{299}
}

// 下架医生入参
type DownDoctorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	DoctorId  uint64 `protobuf:"varint,2,opt,name=doctorId,proto3" json:"doctorId,omitempty"`  // 医生ID
}

func (x *DownDoctorRequest) Reset() {
	*x = DownDoctorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownDoctorRequest) ProtoMessage() {}

func (x *DownDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownDoctorRequest.ProtoReflect.Descriptor instead.
func (*DownDoctorRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{300}
}

func (x *DownDoctorRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DownDoctorRequest) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

// 下架医生出参
type DownDoctorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownDoctorResp) Reset() {
	*x = DownDoctorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownDoctorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownDoctorResp) ProtoMessage() {}

func (x *DownDoctorResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownDoctorResp.ProtoReflect.Descriptor instead.
func (*DownDoctorResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{301}
}

// 新增操作记录入参
type AddOperationLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OperationLogInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 操作记录信息
}

func (x *AddOperationLogRequest) Reset() {
	*x = AddOperationLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOperationLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOperationLogRequest) ProtoMessage() {}

func (x *AddOperationLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOperationLogRequest.ProtoReflect.Descriptor instead.
func (*AddOperationLogRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{302}
}

func (x *AddOperationLogRequest) GetInfo() *OperationLogInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新增操作记录出参
type AddOperationLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddOperationLogResp) Reset() {
	*x = AddOperationLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOperationLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOperationLogResp) ProtoMessage() {}

func (x *AddOperationLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOperationLogResp.ProtoReflect.Descriptor instead.
func (*AddOperationLogResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{303}
}

// 查询操作记录列表入参
type ListOperationLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListOperationLogRequest) Reset() {
	*x = ListOperationLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOperationLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperationLogRequest) ProtoMessage() {}

func (x *ListOperationLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperationLogRequest.ProtoReflect.Descriptor instead.
func (*ListOperationLogRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{304}
}

func (x *ListOperationLogRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListOperationLogRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询操作记录列表出参
type ListOperationLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListOperationLogRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListOperationLogResp) Reset() {
	*x = ListOperationLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOperationLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperationLogResp) ProtoMessage() {}

func (x *ListOperationLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperationLogResp.ProtoReflect.Descriptor instead.
func (*ListOperationLogResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{305}
}

func (x *ListOperationLogResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListOperationLogResp) GetList() []*ListOperationLogRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询操作记录列表出参项
type ListOperationLogRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *OperationLogInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 操作记录信息
}

func (x *ListOperationLogRespItem) Reset() {
	*x = ListOperationLogRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOperationLogRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperationLogRespItem) ProtoMessage() {}

func (x *ListOperationLogRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperationLogRespItem.ProtoReflect.Descriptor instead.
func (*ListOperationLogRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{306}
}

func (x *ListOperationLogRespItem) GetInfo() *OperationLogInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 查询导入任务列表入参
type ListImportTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListImportTaskRequest) Reset() {
	*x = ListImportTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImportTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImportTaskRequest) ProtoMessage() {}

func (x *ListImportTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImportTaskRequest.ProtoReflect.Descriptor instead.
func (*ListImportTaskRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{307}
}

func (x *ListImportTaskRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListImportTaskRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询导入任务列表出参
type ListImportTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListImportTaskRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListImportTaskResp) Reset() {
	*x = ListImportTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImportTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImportTaskResp) ProtoMessage() {}

func (x *ListImportTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImportTaskResp.ProtoReflect.Descriptor instead.
func (*ListImportTaskResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{308}
}

func (x *ListImportTaskResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListImportTaskResp) GetList() []*ListImportTaskRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询导入任务列表出参项
type ListImportTaskRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ImportTask `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 导入任务信息
}

func (x *ListImportTaskRespItem) Reset() {
	*x = ListImportTaskRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImportTaskRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImportTaskRespItem) ProtoMessage() {}

func (x *ListImportTaskRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImportTaskRespItem.ProtoReflect.Descriptor instead.
func (*ListImportTaskRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{309}
}

func (x *ListImportTaskRespItem) GetInfo() *ImportTask {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新增导入任务入参
type AddImportTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Url        string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                // URL
	TaskType   int32  `protobuf:"varint,3,opt,name=taskType,proto3" json:"taskType,omitempty"`     // 任务类型
	BusinessId int32  `protobuf:"varint,4,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
	ShopId     int32  `protobuf:"varint,5,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 商店ID
	Params     string `protobuf:"bytes,6,opt,name=params,proto3" json:"params,omitempty"`          // 参数
	TaskName   string `protobuf:"bytes,7,opt,name=taskName,proto3" json:"taskName,omitempty"`      // 任务名称
}

func (x *AddImportTaskRequest) Reset() {
	*x = AddImportTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddImportTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddImportTaskRequest) ProtoMessage() {}

func (x *AddImportTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddImportTaskRequest.ProtoReflect.Descriptor instead.
func (*AddImportTaskRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{310}
}

func (x *AddImportTaskRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddImportTaskRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddImportTaskRequest) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *AddImportTaskRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *AddImportTaskRequest) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *AddImportTaskRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AddImportTaskRequest) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

// 新增导入任务出参
type AddImportTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddImportTaskResp) Reset() {
	*x = AddImportTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddImportTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddImportTaskResp) ProtoMessage() {}

func (x *AddImportTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddImportTaskResp.ProtoReflect.Descriptor instead.
func (*AddImportTaskResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{311}
}

// 数据埋点
type DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                      // ID
	Page          string `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`                   // 页面
	EventId       uint32 `protobuf:"varint,3,opt,name=eventId,proto3" json:"eventId,omitempty"`            // 事件ID
	Content       string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`             // 内容
	DeviceCode    string `protobuf:"bytes,5,opt,name=deviceCode,proto3" json:"deviceCode,omitempty"`       // 设备码
	User          string `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`                   // 用户
	Address       string `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`             // 地址
	EventType     uint32 `protobuf:"varint,8,opt,name=eventType,proto3" json:"eventType,omitempty"`        // 事件类型
	SystemVersion string `protobuf:"bytes,9,opt,name=systemVersion,proto3" json:"systemVersion,omitempty"` // 系统版本
	SoftVersion   string `protobuf:"bytes,10,opt,name=softVersion,proto3" json:"softVersion,omitempty"`    // 软件版本
	CreateTime    string `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`      // 创建时间
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{312}
}

func (x *DataPoint) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DataPoint) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *DataPoint) GetEventId() uint32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *DataPoint) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DataPoint) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *DataPoint) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DataPoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DataPoint) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *DataPoint) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *DataPoint) GetSoftVersion() string {
	if x != nil {
		return x.SoftVersion
	}
	return ""
}

func (x *DataPoint) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 查询数据埋点列表入参
type ListDataPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListDataPointRequest) Reset() {
	*x = ListDataPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPointRequest) ProtoMessage() {}

func (x *ListDataPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPointRequest.ProtoReflect.Descriptor instead.
func (*ListDataPointRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{313}
}

func (x *ListDataPointRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListDataPointRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询数据埋点列表出参
type ListDataPointResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListDataPointRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListDataPointResp) Reset() {
	*x = ListDataPointResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataPointResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPointResp) ProtoMessage() {}

func (x *ListDataPointResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPointResp.ProtoReflect.Descriptor instead.
func (*ListDataPointResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{314}
}

func (x *ListDataPointResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDataPointResp) GetList() []*ListDataPointRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询数据埋点列表出参项
type ListDataPointRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DataPoint `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 数据埋点信息
}

func (x *ListDataPointRespItem) Reset() {
	*x = ListDataPointRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataPointRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPointRespItem) ProtoMessage() {}

func (x *ListDataPointRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPointRespItem.ProtoReflect.Descriptor instead.
func (*ListDataPointRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{315}
}

func (x *ListDataPointRespItem) GetInfo() *DataPoint {
	if x != nil {
		return x.Info
	}
	return nil
}

// 版本管理列表项
type ListDeviceVersionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceVersionInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 设备版本信息
}

func (x *ListDeviceVersionItem) Reset() {
	*x = ListDeviceVersionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceVersionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceVersionItem) ProtoMessage() {}

func (x *ListDeviceVersionItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceVersionItem.ProtoReflect.Descriptor instead.
func (*ListDeviceVersionItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{316}
}

func (x *ListDeviceVersionItem) GetInfo() *DeviceVersionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 版本管理列表入参
type ListDeviceVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查询选项
}

func (x *ListDeviceVersionRequest) Reset() {
	*x = ListDeviceVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceVersionRequest) ProtoMessage() {}

func (x *ListDeviceVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceVersionRequest.ProtoReflect.Descriptor instead.
func (*ListDeviceVersionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{317}
}

func (x *ListDeviceVersionRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListDeviceVersionRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 版本管理列表出参
type ListDeviceVersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListDeviceVersionItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 列表
}

func (x *ListDeviceVersionResp) Reset() {
	*x = ListDeviceVersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceVersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceVersionResp) ProtoMessage() {}

func (x *ListDeviceVersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceVersionResp.ProtoReflect.Descriptor instead.
func (*ListDeviceVersionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{318}
}

func (x *ListDeviceVersionResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDeviceVersionResp) GetList() []*ListDeviceVersionItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 版本管理新增入参
type AddDeviceVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string             `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *DeviceVersionInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 设备版本信息
}

func (x *AddDeviceVersionRequest) Reset() {
	*x = AddDeviceVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeviceVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceVersionRequest) ProtoMessage() {}

func (x *AddDeviceVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceVersionRequest.ProtoReflect.Descriptor instead.
func (*AddDeviceVersionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{319}
}

func (x *AddDeviceVersionRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddDeviceVersionRequest) GetInfo() *DeviceVersionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// AddDeviceVersionResp 版本管理新增出参
type AddDeviceVersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddDeviceVersionResp) Reset() {
	*x = AddDeviceVersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeviceVersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceVersionResp) ProtoMessage() {}

func (x *AddDeviceVersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceVersionResp.ProtoReflect.Descriptor instead.
func (*AddDeviceVersionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{320}
}

// ModDeviceVersionRequest 修改版本管理入参
type ModDeviceVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string             `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *DeviceVersionInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 版本管理信息
}

func (x *ModDeviceVersionRequest) Reset() {
	*x = ModDeviceVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModDeviceVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModDeviceVersionRequest) ProtoMessage() {}

func (x *ModDeviceVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModDeviceVersionRequest.ProtoReflect.Descriptor instead.
func (*ModDeviceVersionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{321}
}

func (x *ModDeviceVersionRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModDeviceVersionRequest) GetInfo() *DeviceVersionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// ModDeviceVersionResp 修改版本管理出参
type ModDeviceVersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModDeviceVersionResp) Reset() {
	*x = ModDeviceVersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModDeviceVersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModDeviceVersionResp) ProtoMessage() {}

func (x *ModDeviceVersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModDeviceVersionResp.ProtoReflect.Descriptor instead.
func (*ModDeviceVersionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{322}
}

// DelDeviceVersionRequest 版本管理删除入参
type DelDeviceVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`     // 待删除的版本ID列表
}

func (x *DelDeviceVersionRequest) Reset() {
	*x = DelDeviceVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDeviceVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDeviceVersionRequest) ProtoMessage() {}

func (x *DelDeviceVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDeviceVersionRequest.ProtoReflect.Descriptor instead.
func (*DelDeviceVersionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{323}
}

func (x *DelDeviceVersionRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelDeviceVersionRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// DelDeviceVersionResp 版本管理删除出参
type DelDeviceVersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelDeviceVersionResp) Reset() {
	*x = DelDeviceVersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDeviceVersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDeviceVersionResp) ProtoMessage() {}

func (x *DelDeviceVersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDeviceVersionResp.ProtoReflect.Descriptor instead.
func (*DelDeviceVersionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{324}
}

// =========有赞商品对接开始=========
// GetYouZanOnSaleListRequest 获取有赞在售商品列表入参
type GetYouZanOnSaleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchContent string `protobuf:"bytes,1,opt,name=searchContent,proto3" json:"searchContent,omitempty"` // 搜索内容
	PageIndex     uint64 `protobuf:"varint,2,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`        // 页码
	PageCount     uint64 `protobuf:"varint,3,opt,name=pageCount,proto3" json:"pageCount,omitempty"`        // 每页数量
}

func (x *GetYouZanOnSaleListRequest) Reset() {
	*x = GetYouZanOnSaleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYouZanOnSaleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYouZanOnSaleListRequest) ProtoMessage() {}

func (x *GetYouZanOnSaleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYouZanOnSaleListRequest.ProtoReflect.Descriptor instead.
func (*GetYouZanOnSaleListRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{325}
}

func (x *GetYouZanOnSaleListRequest) GetSearchContent() string {
	if x != nil {
		return x.SearchContent
	}
	return ""
}

func (x *GetYouZanOnSaleListRequest) GetPageIndex() uint64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetYouZanOnSaleListRequest) GetPageCount() uint64 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

type YouZanOnSaleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`       // 商品ID
	Alias string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`  // 商品别名
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`  // 商品标题
	Price uint64 `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"` // 商品价格
	Thumb string `protobuf:"bytes,5,opt,name=thumb,proto3" json:"thumb,omitempty"`  // 商品缩略图
}

func (x *YouZanOnSaleItem) Reset() {
	*x = YouZanOnSaleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YouZanOnSaleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouZanOnSaleItem) ProtoMessage() {}

func (x *YouZanOnSaleItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouZanOnSaleItem.ProtoReflect.Descriptor instead.
func (*YouZanOnSaleItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{326}
}

func (x *YouZanOnSaleItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *YouZanOnSaleItem) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *YouZanOnSaleItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *YouZanOnSaleItem) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *YouZanOnSaleItem) GetThumb() string {
	if x != nil {
		return x.Thumb
	}
	return ""
}

// GetYouZanOnSaleListResp 获取有赞在售商品列表出参
type GetYouZanOnSaleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*YouZanOnSaleItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 商品列表
}

func (x *GetYouZanOnSaleListResp) Reset() {
	*x = GetYouZanOnSaleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYouZanOnSaleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYouZanOnSaleListResp) ProtoMessage() {}

func (x *GetYouZanOnSaleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYouZanOnSaleListResp.ProtoReflect.Descriptor instead.
func (*GetYouZanOnSaleListResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{327}
}

func (x *GetYouZanOnSaleListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetYouZanOnSaleListResp) GetList() []*YouZanOnSaleItem {
	if x != nil {
		return x.List
	}
	return nil
}

// GetYouZanItemDetailRequest 获取有赞商品详情入参
type GetYouZanItemDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"` // 商品别名
}

func (x *GetYouZanItemDetailRequest) Reset() {
	*x = GetYouZanItemDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYouZanItemDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYouZanItemDetailRequest) ProtoMessage() {}

func (x *GetYouZanItemDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYouZanItemDetailRequest.ProtoReflect.Descriptor instead.
func (*GetYouZanItemDetailRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{328}
}

func (x *GetYouZanItemDetailRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type SkuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId         uint64 `protobuf:"varint,1,opt,name=skuId,proto3" json:"skuId,omitempty"`                // SKU ID
	PropValueName string `protobuf:"bytes,2,opt,name=propValueName,proto3" json:"propValueName,omitempty"` // 属性值名称
	Price         uint64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`                // 价格
	PropValueId   uint64 `protobuf:"varint,4,opt,name=propValueId,proto3" json:"propValueId,omitempty"`    // 属性值ID
}

func (x *SkuItem) Reset() {
	*x = SkuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuItem) ProtoMessage() {}

func (x *SkuItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuItem.ProtoReflect.Descriptor instead.
func (*SkuItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{329}
}

func (x *SkuItem) GetSkuId() uint64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SkuItem) GetPropValueName() string {
	if x != nil {
		return x.PropValueName
	}
	return ""
}

func (x *SkuItem) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuItem) GetPropValueId() uint64 {
	if x != nil {
		return x.PropValueId
	}
	return 0
}

// GetYouZanItemDetailResp 获取有赞商品详情出参
type GetYouZanItemDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias    string     `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`       // 商品别名
	Title    string     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`       // 商品标题
	Category string     `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"` // 商品类别
	Thumb    string     `protobuf:"bytes,4,opt,name=thumb,proto3" json:"thumb,omitempty"`       // 商品缩略图
	SkuList  []*SkuItem `protobuf:"bytes,5,rep,name=skuList,proto3" json:"skuList,omitempty"`   // SKU 列表
}

func (x *GetYouZanItemDetailResp) Reset() {
	*x = GetYouZanItemDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYouZanItemDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYouZanItemDetailResp) ProtoMessage() {}

func (x *GetYouZanItemDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYouZanItemDetailResp.ProtoReflect.Descriptor instead.
func (*GetYouZanItemDetailResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{330}
}

func (x *GetYouZanItemDetailResp) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *GetYouZanItemDetailResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetYouZanItemDetailResp) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetYouZanItemDetailResp) GetThumb() string {
	if x != nil {
		return x.Thumb
	}
	return ""
}

func (x *GetYouZanItemDetailResp) GetSkuList() []*SkuItem {
	if x != nil {
		return x.SkuList
	}
	return nil
}

type CheckPasswordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`      // 密码
	Remark     string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`          // 备注
	CreateTime string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	UpdateTime string `protobuf:"bytes,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  // 更新时间
	CheckType  string `protobuf:"bytes,6,opt,name=checkType,proto3" json:"checkType,omitempty"`    // 检查类型
	CycleTimes int32  `protobuf:"varint,7,opt,name=cycleTimes,proto3" json:"cycleTimes,omitempty"` // 周期次数
	EventName  string `protobuf:"bytes,8,opt,name=eventName,proto3" json:"eventName,omitempty"`    // 事件名称
}

func (x *CheckPasswordInfo) Reset() {
	*x = CheckPasswordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPasswordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPasswordInfo) ProtoMessage() {}

func (x *CheckPasswordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPasswordInfo.ProtoReflect.Descriptor instead.
func (*CheckPasswordInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{331}
}

func (x *CheckPasswordInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CheckPasswordInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CheckPasswordInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CheckPasswordInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CheckPasswordInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CheckPasswordInfo) GetCheckType() string {
	if x != nil {
		return x.CheckType
	}
	return ""
}

func (x *CheckPasswordInfo) GetCycleTimes() int32 {
	if x != nil {
		return x.CycleTimes
	}
	return 0
}

func (x *CheckPasswordInfo) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

// GetCheckPasswordListRequest 获取检查密码列表入参
type GetCheckPasswordListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCheckPasswordListRequest) Reset() {
	*x = GetCheckPasswordListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[332]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckPasswordListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckPasswordListRequest) ProtoMessage() {}

func (x *GetCheckPasswordListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[332]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckPasswordListRequest.ProtoReflect.Descriptor instead.
func (*GetCheckPasswordListRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{332}
}

// GetCheckPasswordListResp 获取检查密码列表出参
type GetCheckPasswordListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CheckPasswordInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 检查密码信息列表
}

func (x *GetCheckPasswordListResp) Reset() {
	*x = GetCheckPasswordListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[333]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckPasswordListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckPasswordListResp) ProtoMessage() {}

func (x *GetCheckPasswordListResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[333]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckPasswordListResp.ProtoReflect.Descriptor instead.
func (*GetCheckPasswordListResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{333}
}

func (x *GetCheckPasswordListResp) GetList() []*CheckPasswordInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// SetCheckPasswordTimerRequest 设置检查密码定时器入参
type SetCheckPasswordTimerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetType   int32  `protobuf:"varint,1,opt,name=setType,proto3" json:"setType,omitempty"`    // 设置类型，1：每天 2：每周，3：每月
	Id        int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`              // ID
	EventName string `protobuf:"bytes,3,opt,name=eventName,proto3" json:"eventName,omitempty"` // 事件名称
}

func (x *SetCheckPasswordTimerRequest) Reset() {
	*x = SetCheckPasswordTimerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCheckPasswordTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCheckPasswordTimerRequest) ProtoMessage() {}

func (x *SetCheckPasswordTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCheckPasswordTimerRequest.ProtoReflect.Descriptor instead.
func (*SetCheckPasswordTimerRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{334}
}

func (x *SetCheckPasswordTimerRequest) GetSetType() int32 {
	if x != nil {
		return x.SetType
	}
	return 0
}

func (x *SetCheckPasswordTimerRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetCheckPasswordTimerRequest) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

// SetCheckPasswordTimerResp 设置检查密码定时器出参
type SetCheckPasswordTimerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCheckPasswordTimerResp) Reset() {
	*x = SetCheckPasswordTimerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[335]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCheckPasswordTimerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCheckPasswordTimerResp) ProtoMessage() {}

func (x *SetCheckPasswordTimerResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[335]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCheckPasswordTimerResp.ProtoReflect.Descriptor instead.
func (*SetCheckPasswordTimerResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{335}
}

// ListWhiteInfo 白名单信息
type ListWhiteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime  string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *ListWhiteInfo) Reset() {
	*x = ListWhiteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[336]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWhiteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWhiteInfo) ProtoMessage() {}

func (x *ListWhiteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[336]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWhiteInfo.ProtoReflect.Descriptor instead.
func (*ListWhiteInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{336}
}

func (x *ListWhiteInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListWhiteInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ListWhiteInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListWhiteInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListWhiteInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// GetListWhiteListRequest 获取白名单列表入参
type GetListWhiteListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项
}

func (x *GetListWhiteListRequest) Reset() {
	*x = GetListWhiteListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListWhiteListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListWhiteListRequest) ProtoMessage() {}

func (x *GetListWhiteListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListWhiteListRequest.ProtoReflect.Descriptor instead.
func (*GetListWhiteListRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{337}
}

func (x *GetListWhiteListRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GetListWhiteListRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// GetListWhiteListResp 获取白名单列表出参
type GetListWhiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListWhiteInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 白名单信息列表
}

func (x *GetListWhiteListResp) Reset() {
	*x = GetListWhiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListWhiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListWhiteListResp) ProtoMessage() {}

func (x *GetListWhiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListWhiteListResp.ProtoReflect.Descriptor instead.
func (*GetListWhiteListResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{338}
}

func (x *GetListWhiteListResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetListWhiteListResp) GetList() []*ListWhiteInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// DelListWhiteListRequest 删除白名单入参
type DelListWhiteListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId   string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`     // 操作用户ID
	Id          int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                  // 白名单ID
	PhoneNumber string `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"` // 手机号码
}

func (x *DelListWhiteListRequest) Reset() {
	*x = DelListWhiteListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelListWhiteListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelListWhiteListRequest) ProtoMessage() {}

func (x *DelListWhiteListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelListWhiteListRequest.ProtoReflect.Descriptor instead.
func (*DelListWhiteListRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{339}
}

func (x *DelListWhiteListRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelListWhiteListRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelListWhiteListRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

// DelListWhiteListResp 删除白名单出参
type DelListWhiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelListWhiteListResp) Reset() {
	*x = DelListWhiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelListWhiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelListWhiteListResp) ProtoMessage() {}

func (x *DelListWhiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelListWhiteListResp.ProtoReflect.Descriptor instead.
func (*DelListWhiteListResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{340}
}

// AddListWhiteListRequest 新增白名单入参
type AddListWhiteListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string         `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *ListWhiteInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 白名单信息
}

func (x *AddListWhiteListRequest) Reset() {
	*x = AddListWhiteListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddListWhiteListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddListWhiteListRequest) ProtoMessage() {}

func (x *AddListWhiteListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddListWhiteListRequest.ProtoReflect.Descriptor instead.
func (*AddListWhiteListRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{341}
}

func (x *AddListWhiteListRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddListWhiteListRequest) GetInfo() *ListWhiteInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// AddListWhiteListResp 新增白名单出参
type AddListWhiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddListWhiteListResp) Reset() {
	*x = AddListWhiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddListWhiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddListWhiteListResp) ProtoMessage() {}

func (x *AddListWhiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddListWhiteListResp.ProtoReflect.Descriptor instead.
func (*AddListWhiteListResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{342}
}

// SyncWhiteListRequest 同步白名单入参
type SyncWhiteListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
}

func (x *SyncWhiteListRequest) Reset() {
	*x = SyncWhiteListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWhiteListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWhiteListRequest) ProtoMessage() {}

func (x *SyncWhiteListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWhiteListRequest.ProtoReflect.Descriptor instead.
func (*SyncWhiteListRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{343}
}

func (x *SyncWhiteListRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

// SyncWhiteListResp 同步白名单出参
type SyncWhiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncWhiteListResp) Reset() {
	*x = SyncWhiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWhiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWhiteListResp) ProtoMessage() {}

func (x *SyncWhiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWhiteListResp.ProtoReflect.Descriptor instead.
func (*SyncWhiteListResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{344}
}

// 应用配置信息
type AppConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 配置唯一标识符
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 应用键
	AppKey string `protobuf:"bytes,2,opt,name=appKey,proto3" json:"appKey,omitempty"`
	// 应用值
	AppValue string `protobuf:"bytes,3,opt,name=appValue,proto3" json:"appValue,omitempty"`
	// 应用类型
	AppType string `protobuf:"bytes,4,opt,name=appType,proto3" json:"appType,omitempty"`
	// 应用类型备注
	AppTypeRemark string `protobuf:"bytes,5,opt,name=appTypeRemark,proto3" json:"appTypeRemark,omitempty"`
	// 应用版本
	Version string `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	// 创建时间
	CreateTime string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 更新时间
	UpdateTime string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AppConfigInfo) Reset() {
	*x = AppConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConfigInfo) ProtoMessage() {}

func (x *AppConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConfigInfo.ProtoReflect.Descriptor instead.
func (*AppConfigInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{345}
}

func (x *AppConfigInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppConfigInfo) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *AppConfigInfo) GetAppValue() string {
	if x != nil {
		return x.AppValue
	}
	return ""
}

func (x *AppConfigInfo) GetAppType() string {
	if x != nil {
		return x.AppType
	}
	return ""
}

func (x *AppConfigInfo) GetAppTypeRemark() string {
	if x != nil {
		return x.AppTypeRemark
	}
	return ""
}

func (x *AppConfigInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppConfigInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AppConfigInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 请求列出应用配置
type ListAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 运行时过滤器列表
	Filters []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	// 通用查找选项
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"`
}

func (x *ListAppConfigRequest) Reset() {
	*x = ListAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppConfigRequest) ProtoMessage() {}

func (x *ListAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppConfigRequest.ProtoReflect.Descriptor instead.
func (*ListAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{346}
}

func (x *ListAppConfigRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListAppConfigRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 请求添加应用配置
type AddAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作用户ID
	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`
	// 要添加的应用配置信息
	Info *AppConfigInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *AddAppConfigRequest) Reset() {
	*x = AddAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppConfigRequest) ProtoMessage() {}

func (x *AddAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppConfigRequest.ProtoReflect.Descriptor instead.
func (*AddAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{347}
}

func (x *AddAppConfigRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddAppConfigRequest) GetInfo() *AppConfigInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DelAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Id        int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`              // 应用配置ID
	AppKey    string `protobuf:"bytes,3,opt,name=appKey,proto3" json:"appKey,omitempty"`       // 应用Key
	AppType   string `protobuf:"bytes,4,opt,name=appType,proto3" json:"appType,omitempty"`     // 应用类型
	Version   string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`     // 版本号
}

func (x *DelAppConfigRequest) Reset() {
	*x = DelAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAppConfigRequest) ProtoMessage() {}

func (x *DelAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAppConfigRequest.ProtoReflect.Descriptor instead.
func (*DelAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{348}
}

func (x *DelAppConfigRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelAppConfigRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelAppConfigRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *DelAppConfigRequest) GetAppType() string {
	if x != nil {
		return x.AppType
	}
	return ""
}

func (x *DelAppConfigRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ModAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string         `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *AppConfigInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 应用配置信息
}

func (x *ModAppConfigRequest) Reset() {
	*x = ModAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModAppConfigRequest) ProtoMessage() {}

func (x *ModAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModAppConfigRequest.ProtoReflect.Descriptor instead.
func (*ModAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{349}
}

func (x *ModAppConfigRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModAppConfigRequest) GetInfo() *AppConfigInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type AddAppConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddAppConfigResp) Reset() {
	*x = AddAppConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppConfigResp) ProtoMessage() {}

func (x *AddAppConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppConfigResp.ProtoReflect.Descriptor instead.
func (*AddAppConfigResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{350}
}

type DelAppConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelAppConfigResp) Reset() {
	*x = DelAppConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAppConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAppConfigResp) ProtoMessage() {}

func (x *DelAppConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAppConfigResp.ProtoReflect.Descriptor instead.
func (*DelAppConfigResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{351}
}

type ModAppConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModAppConfigResp) Reset() {
	*x = ModAppConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModAppConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModAppConfigResp) ProtoMessage() {}

func (x *ModAppConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModAppConfigResp.ProtoReflect.Descriptor instead.
func (*ModAppConfigResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{352}
}

type ListAppConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*AppConfigInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 应用配置列表
}

func (x *ListAppConfigResp) Reset() {
	*x = ListAppConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppConfigResp) ProtoMessage() {}

func (x *ListAppConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppConfigResp.ProtoReflect.Descriptor instead.
func (*ListAppConfigResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{353}
}

func (x *ListAppConfigResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAppConfigResp) GetList() []*AppConfigInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type SyncAppConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
}

func (x *SyncAppConfigRequest) Reset() {
	*x = SyncAppConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAppConfigRequest) ProtoMessage() {}

func (x *SyncAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAppConfigRequest.ProtoReflect.Descriptor instead.
func (*SyncAppConfigRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{354}
}

func (x *SyncAppConfigRequest) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

type SyncAppConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncAppConfigResp) Reset() {
	*x = SyncAppConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAppConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAppConfigResp) ProtoMessage() {}

func (x *SyncAppConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAppConfigResp.ProtoReflect.Descriptor instead.
func (*SyncAppConfigResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{355}
}

type BusinessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             // 商业信息ID
	BusinessCode     string        `protobuf:"bytes,2,opt,name=businessCode,proto3" json:"businessCode,omitempty"`                          // 商业代码
	BusinessName     string        `protobuf:"bytes,3,opt,name=businessName,proto3" json:"businessName,omitempty"`                          // 商业名称
	MainBusiness     string        `protobuf:"bytes,4,opt,name=mainBusiness,proto3" json:"mainBusiness,omitempty"`                          // 主要业务
	Logo             string        `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`                                          // 商标
	EnterpriseName   string        `protobuf:"bytes,6,opt,name=enterpriseName,proto3" json:"enterpriseName,omitempty"`                      // 企业名称
	Area             string        `protobuf:"bytes,7,opt,name=area,proto3" json:"area,omitempty"`                                          // 区域
	Address          string        `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`                                    // 地址
	AboutUs          string        `protobuf:"bytes,9,opt,name=aboutUs,proto3" json:"aboutUs,omitempty"`                                    // 关于我们
	Contacts         string        `protobuf:"bytes,10,opt,name=contacts,proto3" json:"contacts,omitempty"`                                 // 联系人
	Telephone        string        `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                               // 电话
	Status           int32         `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                    // 状态
	Head             string        `protobuf:"bytes,13,opt,name=head,proto3" json:"head,omitempty"`                                         // 负责人
	SystemName       string        `protobuf:"bytes,14,opt,name=systemName,proto3" json:"systemName,omitempty"`                             // 系统名称
	SystemAccount    string        `protobuf:"bytes,15,opt,name=systemAccount,proto3" json:"systemAccount,omitempty"`                       // 系统账号
	SystemPwd        string        `protobuf:"bytes,16,opt,name=systemPwd,proto3" json:"systemPwd,omitempty"`                               // 系统密码
	CreateTime       string        `protobuf:"bytes,17,opt,name=createTime,proto3" json:"createTime,omitempty"`                             // 创建时间
	UpdateTime       string        `protobuf:"bytes,18,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                             // 更新时间
	AreaCode         string        `protobuf:"bytes,19,opt,name=areaCode,proto3" json:"areaCode,omitempty"`                                 // 区域代码
	Remark           string        `protobuf:"bytes,20,opt,name=remark,proto3" json:"remark,omitempty"`                                     // 备注
	MainBusinessName string        `protobuf:"bytes,21,opt,name=mainBusinessName,proto3" json:"mainBusinessName,omitempty"`                 // 主要业务名称
	HeadName         string        `protobuf:"bytes,22,opt,name=headName,proto3" json:"headName,omitempty"`                                 // 负责人姓名
	PackageId        int64         `protobuf:"varint,23,opt,name=packageId,proto3" json:"packageId,omitempty"`                              // 包ID
	SkinRecordPrice  int32         `protobuf:"varint,24,opt,name=skinRecordPrice,proto3" json:"skinRecordPrice,omitempty"`                  // 皮肤记录价格
	Versions         []VersionType `protobuf:"varint,25,rep,packed,name=versions,proto3,enum=manage.VersionType" json:"versions,omitempty"` // 版本类型列表
}

func (x *BusinessInfo) Reset() {
	*x = BusinessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[356]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessInfo) ProtoMessage() {}

func (x *BusinessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[356]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessInfo.ProtoReflect.Descriptor instead.
func (*BusinessInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{356}
}

func (x *BusinessInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BusinessInfo) GetBusinessCode() string {
	if x != nil {
		return x.BusinessCode
	}
	return ""
}

func (x *BusinessInfo) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *BusinessInfo) GetMainBusiness() string {
	if x != nil {
		return x.MainBusiness
	}
	return ""
}

func (x *BusinessInfo) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *BusinessInfo) GetEnterpriseName() string {
	if x != nil {
		return x.EnterpriseName
	}
	return ""
}

func (x *BusinessInfo) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *BusinessInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BusinessInfo) GetAboutUs() string {
	if x != nil {
		return x.AboutUs
	}
	return ""
}

func (x *BusinessInfo) GetContacts() string {
	if x != nil {
		return x.Contacts
	}
	return ""
}

func (x *BusinessInfo) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *BusinessInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BusinessInfo) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

func (x *BusinessInfo) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *BusinessInfo) GetSystemAccount() string {
	if x != nil {
		return x.SystemAccount
	}
	return ""
}

func (x *BusinessInfo) GetSystemPwd() string {
	if x != nil {
		return x.SystemPwd
	}
	return ""
}

func (x *BusinessInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *BusinessInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *BusinessInfo) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *BusinessInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *BusinessInfo) GetMainBusinessName() string {
	if x != nil {
		return x.MainBusinessName
	}
	return ""
}

func (x *BusinessInfo) GetHeadName() string {
	if x != nil {
		return x.HeadName
	}
	return ""
}

func (x *BusinessInfo) GetPackageId() int64 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *BusinessInfo) GetSkinRecordPrice() int32 {
	if x != nil {
		return x.SkinRecordPrice
	}
	return 0
}

func (x *BusinessInfo) GetVersions() []VersionType {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ShopInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                           // 商店ID
	ShopName        string `protobuf:"bytes,2,opt,name=shopName,proto3" json:"shopName,omitempty"`                // 商店名称
	BusinessId      int32  `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"`           // 商业ID
	BusinessName    string `protobuf:"bytes,4,opt,name=businessName,proto3" json:"businessName,omitempty"`        // 商业名称
	Enable          int32  `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`                   // 启用
	CreateTime      string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`            // 创建时间
	UpdateTime      string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`            // 更新时间
	ShopType        int32  `protobuf:"varint,8,opt,name=shopType,proto3" json:"shopType,omitempty"`               // 商店类型
	Address         string `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`                  // 地址
	DetailedAddress string `protobuf:"bytes,10,opt,name=detailedAddress,proto3" json:"detailedAddress,omitempty"` // 详细地址
	Contacts        string `protobuf:"bytes,11,opt,name=contacts,proto3" json:"contacts,omitempty"`               // 联系人
	Telephone       string `protobuf:"bytes,12,opt,name=telephone,proto3" json:"telephone,omitempty"`             // 电话
	AreaCode        string `protobuf:"bytes,13,opt,name=areaCode,proto3" json:"areaCode,omitempty"`               // 区域代码
	ShopCode        string `protobuf:"bytes,14,opt,name=shopCode,proto3" json:"shopCode,omitempty"`               // 商店代码
}

func (x *ShopInfo) Reset() {
	*x = ShopInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopInfo) ProtoMessage() {}

func (x *ShopInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopInfo.ProtoReflect.Descriptor instead.
func (*ShopInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{357}
}

func (x *ShopInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShopInfo) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *ShopInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ShopInfo) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *ShopInfo) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *ShopInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ShopInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ShopInfo) GetShopType() int32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ShopInfo) GetDetailedAddress() string {
	if x != nil {
		return x.DetailedAddress
	}
	return ""
}

func (x *ShopInfo) GetContacts() string {
	if x != nil {
		return x.Contacts
	}
	return ""
}

func (x *ShopInfo) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *ShopInfo) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *ShopInfo) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

type PermissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                        // 权限ID
	PermissionName string `protobuf:"bytes,2,opt,name=permissionName,proto3" json:"permissionName,omitempty"` // 权限名称
	Description    string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`       // 描述
	Url            string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                       // URL
	PId            int32  `protobuf:"varint,5,opt,name=pId,proto3" json:"pId,omitempty"`                      // 父ID
}

func (x *PermissionInfo) Reset() {
	*x = PermissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo) ProtoMessage() {}

func (x *PermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo.ProtoReflect.Descriptor instead.
func (*PermissionInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{358}
}

func (x *PermissionInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionInfo) GetPermissionName() string {
	if x != nil {
		return x.PermissionName
	}
	return ""
}

func (x *PermissionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PermissionInfo) GetPId() int32 {
	if x != nil {
		return x.PId
	}
	return 0
}

// 列表
type ListBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项通用信息
}

func (x *ListBusinessRequest) Reset() {
	*x = ListBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBusinessRequest) ProtoMessage() {}

func (x *ListBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBusinessRequest.ProtoReflect.Descriptor instead.
func (*ListBusinessRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{359}
}

func (x *ListBusinessRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListBusinessRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ListBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*BusinessInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 商业信息列表
}

func (x *ListBusinessResp) Reset() {
	*x = ListBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBusinessResp) ProtoMessage() {}

func (x *ListBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBusinessResp.ProtoReflect.Descriptor instead.
func (*ListBusinessResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{360}
}

func (x *ListBusinessResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListBusinessResp) GetList() []*BusinessInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 新增
type AddBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *BusinessInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 商业信息
}

func (x *AddBusinessRequest) Reset() {
	*x = AddBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessRequest) ProtoMessage() {}

func (x *AddBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessRequest.ProtoReflect.Descriptor instead.
func (*AddBusinessRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{361}
}

func (x *AddBusinessRequest) GetInfo() *BusinessInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *BusinessInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 商业信息
	Code string        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"` // 代码
}

func (x *CreateBusinessRequest) Reset() {
	*x = CreateBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessRequest) ProtoMessage() {}

func (x *CreateBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessRequest.ProtoReflect.Descriptor instead.
func (*CreateBusinessRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{362}
}

func (x *CreateBusinessRequest) GetInfo() *BusinessInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *CreateBusinessRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CreateBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *CreateBusinessResp) Reset() {
	*x = CreateBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessResp) ProtoMessage() {}

func (x *CreateBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessResp.ProtoReflect.Descriptor instead.
func (*CreateBusinessResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{363}
}

func (x *CreateBusinessResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type AddBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AddBusinessResp) Reset() {
	*x = AddBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBusinessResp) ProtoMessage() {}

func (x *AddBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBusinessResp.ProtoReflect.Descriptor instead.
func (*AddBusinessResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{364}
}

func (x *AddBusinessResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 修改
type ModBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *BusinessInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 商业信息
}

func (x *ModBusinessRequest) Reset() {
	*x = ModBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[365]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModBusinessRequest) ProtoMessage() {}

func (x *ModBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[365]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModBusinessRequest.ProtoReflect.Descriptor instead.
func (*ModBusinessRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{365}
}

func (x *ModBusinessRequest) GetInfo() *BusinessInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ModBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModBusinessResp) Reset() {
	*x = ModBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[366]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModBusinessResp) ProtoMessage() {}

func (x *ModBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[366]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModBusinessResp.ProtoReflect.Descriptor instead.
func (*ModBusinessResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{366}
}

// 删除
type DelBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *DelBusinessRequest) Reset() {
	*x = DelBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[367]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBusinessRequest) ProtoMessage() {}

func (x *DelBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[367]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBusinessRequest.ProtoReflect.Descriptor instead.
func (*DelBusinessRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{367}
}

func (x *DelBusinessRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelBusinessResp) Reset() {
	*x = DelBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[368]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBusinessResp) ProtoMessage() {}

func (x *DelBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[368]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBusinessResp.ProtoReflect.Descriptor instead.
func (*DelBusinessResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{368}
}

// 列表
type ListShopInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项通用信息
}

func (x *ListShopInfoRequest) Reset() {
	*x = ListShopInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[369]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShopInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShopInfoRequest) ProtoMessage() {}

func (x *ListShopInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[369]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShopInfoRequest.ProtoReflect.Descriptor instead.
func (*ListShopInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{369}
}

func (x *ListShopInfoRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListShopInfoRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ListShopInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ShopInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 商店信息列表
}

func (x *ListShopInfoResp) Reset() {
	*x = ListShopInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[370]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShopInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShopInfoResp) ProtoMessage() {}

func (x *ListShopInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[370]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShopInfoResp.ProtoReflect.Descriptor instead.
func (*ListShopInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{370}
}

func (x *ListShopInfoResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListShopInfoResp) GetList() []*ShopInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 新增
type AddShopInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ShopInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 商店信息
}

func (x *AddShopInfoRequest) Reset() {
	*x = AddShopInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[371]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShopInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShopInfoRequest) ProtoMessage() {}

func (x *AddShopInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[371]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShopInfoRequest.ProtoReflect.Descriptor instead.
func (*AddShopInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{371}
}

func (x *AddShopInfoRequest) GetInfo() *ShopInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type AddShopInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddShopInfoResp) Reset() {
	*x = AddShopInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[372]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShopInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShopInfoResp) ProtoMessage() {}

func (x *AddShopInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[372]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShopInfoResp.ProtoReflect.Descriptor instead.
func (*AddShopInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{372}
}

// 修改
type ModShopInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ShopInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 商店信息
}

func (x *ModShopInfoRequest) Reset() {
	*x = ModShopInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[373]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModShopInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModShopInfoRequest) ProtoMessage() {}

func (x *ModShopInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[373]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModShopInfoRequest.ProtoReflect.Descriptor instead.
func (*ModShopInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{373}
}

func (x *ModShopInfoRequest) GetInfo() *ShopInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ModShopInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModShopInfoResp) Reset() {
	*x = ModShopInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[374]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModShopInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModShopInfoResp) ProtoMessage() {}

func (x *ModShopInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[374]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModShopInfoResp.ProtoReflect.Descriptor instead.
func (*ModShopInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{374}
}

func (x *ModShopInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 删除
type DelShopInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` // ID列表
}

func (x *DelShopInfoRequest) Reset() {
	*x = DelShopInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[375]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelShopInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelShopInfoRequest) ProtoMessage() {}

func (x *DelShopInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[375]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelShopInfoRequest.ProtoReflect.Descriptor instead.
func (*DelShopInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{375}
}

func (x *DelShopInfoRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DelShopInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelShopInfoResp) Reset() {
	*x = DelShopInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[376]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelShopInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelShopInfoResp) ProtoMessage() {}

func (x *DelShopInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[376]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelShopInfoResp.ProtoReflect.Descriptor instead.
func (*DelShopInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{376}
}

func (x *DelShopInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 列表权限请求
type ListPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项公共信息
}

func (x *ListPermissionRequest) Reset() {
	*x = ListPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[377]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionRequest) ProtoMessage() {}

func (x *ListPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[377]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{377}
}

func (x *ListPermissionRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListPermissionRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 列表权限响应
type ListPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*PermissionInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 权限信息列表
}

func (x *ListPermissionResp) Reset() {
	*x = ListPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[378]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionResp) ProtoMessage() {}

func (x *ListPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[378]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionResp.ProtoReflect.Descriptor instead.
func (*ListPermissionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{378}
}

func (x *ListPermissionResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPermissionResp) GetList() []*PermissionInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 新增权限请求
type AddPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PermissionInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 权限信息
}

func (x *AddPermissionRequest) Reset() {
	*x = AddPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[379]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPermissionRequest) ProtoMessage() {}

func (x *AddPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[379]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPermissionRequest.ProtoReflect.Descriptor instead.
func (*AddPermissionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{379}
}

func (x *AddPermissionRequest) GetInfo() *PermissionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新增权限响应
type AddPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPermissionResp) Reset() {
	*x = AddPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[380]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPermissionResp) ProtoMessage() {}

func (x *AddPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[380]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPermissionResp.ProtoReflect.Descriptor instead.
func (*AddPermissionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{380}
}

// 修改权限请求
type ModPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *PermissionInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 权限信息
}

func (x *ModPermissionRequest) Reset() {
	*x = ModPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[381]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModPermissionRequest) ProtoMessage() {}

func (x *ModPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[381]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModPermissionRequest.ProtoReflect.Descriptor instead.
func (*ModPermissionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{381}
}

func (x *ModPermissionRequest) GetInfo() *PermissionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改权限响应
type ModPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModPermissionResp) Reset() {
	*x = ModPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[382]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModPermissionResp) ProtoMessage() {}

func (x *ModPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[382]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModPermissionResp.ProtoReflect.Descriptor instead.
func (*ModPermissionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{382}
}

// 删除权限请求
type DelPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *DelPermissionRequest) Reset() {
	*x = DelPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[383]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPermissionRequest) ProtoMessage() {}

func (x *DelPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[383]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPermissionRequest.ProtoReflect.Descriptor instead.
func (*DelPermissionRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{383}
}

func (x *DelPermissionRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除权限响应
type DelPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelPermissionResp) Reset() {
	*x = DelPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[384]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPermissionResp) ProtoMessage() {}

func (x *DelPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[384]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPermissionResp.ProtoReflect.Descriptor instead.
func (*DelPermissionResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{384}
}

// 根据角色ID列表权限请求
type ListPermissionByRoleIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int32 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"` // 角色ID
}

func (x *ListPermissionByRoleIdRequest) Reset() {
	*x = ListPermissionByRoleIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[385]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionByRoleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionByRoleIdRequest) ProtoMessage() {}

func (x *ListPermissionByRoleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[385]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionByRoleIdRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionByRoleIdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{385}
}

func (x *ListPermissionByRoleIdRequest) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// 根据角色ID列表权限响应
type ListPermissionByRoleIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*PermissionInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 权限信息列表
}

func (x *ListPermissionByRoleIdResp) Reset() {
	*x = ListPermissionByRoleIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[386]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionByRoleIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionByRoleIdResp) ProtoMessage() {}

func (x *ListPermissionByRoleIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[386]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionByRoleIdResp.ProtoReflect.Descriptor instead.
func (*ListPermissionByRoleIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{386}
}

func (x *ListPermissionByRoleIdResp) GetList() []*PermissionInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 根据管理者ID列表权限请求
type ListPermissionByManageIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManageId    int32 `protobuf:"varint,1,opt,name=manageId,proto3" json:"manageId,omitempty"`       // 管理者ID
	AccountType int32 `protobuf:"varint,2,opt,name=accountType,proto3" json:"accountType,omitempty"` // 账户类型
}

func (x *ListPermissionByManageIdRequest) Reset() {
	*x = ListPermissionByManageIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[387]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionByManageIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionByManageIdRequest) ProtoMessage() {}

func (x *ListPermissionByManageIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[387]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionByManageIdRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionByManageIdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{387}
}

func (x *ListPermissionByManageIdRequest) GetManageId() int32 {
	if x != nil {
		return x.ManageId
	}
	return 0
}

func (x *ListPermissionByManageIdRequest) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

// 根据管理者ID列表权限响应
type ListPermissionByManageIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*PermissionInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 权限信息列表
}

func (x *ListPermissionByManageIdResp) Reset() {
	*x = ListPermissionByManageIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[388]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionByManageIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionByManageIdResp) ProtoMessage() {}

func (x *ListPermissionByManageIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[388]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionByManageIdResp.ProtoReflect.Descriptor instead.
func (*ListPermissionByManageIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{388}
}

func (x *ListPermissionByManageIdResp) GetList() []*PermissionInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 管理者角色关系信息
type ManagerRoleRelationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	RoleId     int32 `protobuf:"varint,2,opt,name=roleId,proto3" json:"roleId,omitempty"`         // 角色ID
	ManagerId  int32 `protobuf:"varint,3,opt,name=managerId,proto3" json:"managerId,omitempty"`   // 管理者ID
	BusinessId int32 `protobuf:"varint,4,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *ManagerRoleRelationInfo) Reset() {
	*x = ManagerRoleRelationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[389]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerRoleRelationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerRoleRelationInfo) ProtoMessage() {}

func (x *ManagerRoleRelationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[389]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerRoleRelationInfo.ProtoReflect.Descriptor instead.
func (*ManagerRoleRelationInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{389}
}

func (x *ManagerRoleRelationInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ManagerRoleRelationInfo) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *ManagerRoleRelationInfo) GetManagerId() int32 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *ManagerRoleRelationInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 列表管理者角色关系请求
type ListManagerRoleRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项公共信息
}

func (x *ListManagerRoleRelationRequest) Reset() {
	*x = ListManagerRoleRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[390]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListManagerRoleRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagerRoleRelationRequest) ProtoMessage() {}

func (x *ListManagerRoleRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[390]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagerRoleRelationRequest.ProtoReflect.Descriptor instead.
func (*ListManagerRoleRelationRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{390}
}

func (x *ListManagerRoleRelationRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListManagerRoleRelationRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 列表管理者角色关系响应
type ListManagerRoleRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ManagerRoleRelationInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 管理者角色关系信息列表
}

func (x *ListManagerRoleRelationResp) Reset() {
	*x = ListManagerRoleRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[391]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListManagerRoleRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagerRoleRelationResp) ProtoMessage() {}

func (x *ListManagerRoleRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[391]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagerRoleRelationResp.ProtoReflect.Descriptor instead.
func (*ListManagerRoleRelationResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{391}
}

func (x *ListManagerRoleRelationResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListManagerRoleRelationResp) GetList() []*ManagerRoleRelationInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 新增管理者角色关系请求
type AddManagerRoleRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ManagerRoleRelationInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 管理者角色关系信息
}

func (x *AddManagerRoleRelationRequest) Reset() {
	*x = AddManagerRoleRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[392]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddManagerRoleRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddManagerRoleRelationRequest) ProtoMessage() {}

func (x *AddManagerRoleRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[392]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddManagerRoleRelationRequest.ProtoReflect.Descriptor instead.
func (*AddManagerRoleRelationRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{392}
}

func (x *AddManagerRoleRelationRequest) GetInfo() *ManagerRoleRelationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新增管理者角色关系响应
type AddManagerRoleRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddManagerRoleRelationResp) Reset() {
	*x = AddManagerRoleRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[393]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddManagerRoleRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddManagerRoleRelationResp) ProtoMessage() {}

func (x *AddManagerRoleRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[393]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddManagerRoleRelationResp.ProtoReflect.Descriptor instead.
func (*AddManagerRoleRelationResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{393}
}

// 修改管理者角色关系请求
type ModManagerRoleRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ManagerRoleRelationInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 管理者角色关系信息
}

func (x *ModManagerRoleRelationRequest) Reset() {
	*x = ModManagerRoleRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[394]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModManagerRoleRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModManagerRoleRelationRequest) ProtoMessage() {}

func (x *ModManagerRoleRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[394]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModManagerRoleRelationRequest.ProtoReflect.Descriptor instead.
func (*ModManagerRoleRelationRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{394}
}

func (x *ModManagerRoleRelationRequest) GetInfo() *ManagerRoleRelationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改管理者角色关系响应
type ModManagerRoleRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModManagerRoleRelationResp) Reset() {
	*x = ModManagerRoleRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[395]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModManagerRoleRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModManagerRoleRelationResp) ProtoMessage() {}

func (x *ModManagerRoleRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[395]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModManagerRoleRelationResp.ProtoReflect.Descriptor instead.
func (*ModManagerRoleRelationResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{395}
}

// 删除管理者角色关系请求
type DelManagerRoleRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *DelManagerRoleRelationRequest) Reset() {
	*x = DelManagerRoleRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[396]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelManagerRoleRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelManagerRoleRelationRequest) ProtoMessage() {}

func (x *DelManagerRoleRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[396]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelManagerRoleRelationRequest.ProtoReflect.Descriptor instead.
func (*DelManagerRoleRelationRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{396}
}

func (x *DelManagerRoleRelationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除管理者角色关系响应
type DelManagerRoleRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelManagerRoleRelationResp) Reset() {
	*x = DelManagerRoleRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[397]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelManagerRoleRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelManagerRoleRelationResp) ProtoMessage() {}

func (x *DelManagerRoleRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[397]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelManagerRoleRelationResp.ProtoReflect.Descriptor instead.
func (*DelManagerRoleRelationResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{397}
}

// 根据管理者ID列表管理者角色关系请求
type ListManagerRoleRelationByManageIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 管理者ID
}

func (x *ListManagerRoleRelationByManageIdRequest) Reset() {
	*x = ListManagerRoleRelationByManageIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[398]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListManagerRoleRelationByManageIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagerRoleRelationByManageIdRequest) ProtoMessage() {}

func (x *ListManagerRoleRelationByManageIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[398]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagerRoleRelationByManageIdRequest.ProtoReflect.Descriptor instead.
func (*ListManagerRoleRelationByManageIdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{398}
}

func (x *ListManagerRoleRelationByManageIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 根据管理者ID列表管理者角色关系响应
type ListManagerRoleRelationByManageIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ManagerRoleRelationInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 管理者角色关系信息列表
}

func (x *ListManagerRoleRelationByManageIdResp) Reset() {
	*x = ListManagerRoleRelationByManageIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[399]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListManagerRoleRelationByManageIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagerRoleRelationByManageIdResp) ProtoMessage() {}

func (x *ListManagerRoleRelationByManageIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[399]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagerRoleRelationByManageIdResp.ProtoReflect.Descriptor instead.
func (*ListManagerRoleRelationByManageIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{399}
}

func (x *ListManagerRoleRelationByManageIdResp) GetList() []*ManagerRoleRelationInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 根据管理者ID删除管理者角色关系请求
type DelManagerRoleRelationByManageIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagerId int32 `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"` // 管理者ID
}

func (x *DelManagerRoleRelationByManageIdRequest) Reset() {
	*x = DelManagerRoleRelationByManageIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[400]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelManagerRoleRelationByManageIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelManagerRoleRelationByManageIdRequest) ProtoMessage() {}

func (x *DelManagerRoleRelationByManageIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[400]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelManagerRoleRelationByManageIdRequest.ProtoReflect.Descriptor instead.
func (*DelManagerRoleRelationByManageIdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{400}
}

func (x *DelManagerRoleRelationByManageIdRequest) GetManagerId() int32 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

// 根据管理者ID删除管理者角色关系响应
type DelManagerRoleRelationByManageIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelManagerRoleRelationByManageIdResp) Reset() {
	*x = DelManagerRoleRelationByManageIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[401]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelManagerRoleRelationByManageIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelManagerRoleRelationByManageIdResp) ProtoMessage() {}

func (x *DelManagerRoleRelationByManageIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[401]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelManagerRoleRelationByManageIdResp.ProtoReflect.Descriptor instead.
func (*DelManagerRoleRelationByManageIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{401}
}

// 根据管理者ID新增管理者角色关系请求
type AddManagerRoleRelationByManageIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagerId  int32   `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`   // 管理者ID
	RoleId     []int32 `protobuf:"varint,2,rep,packed,name=roleId,proto3" json:"roleId,omitempty"`  // 角色ID列表
	BusinessId int32   `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *AddManagerRoleRelationByManageIdRequest) Reset() {
	*x = AddManagerRoleRelationByManageIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[402]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddManagerRoleRelationByManageIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddManagerRoleRelationByManageIdRequest) ProtoMessage() {}

func (x *AddManagerRoleRelationByManageIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[402]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddManagerRoleRelationByManageIdRequest.ProtoReflect.Descriptor instead.
func (*AddManagerRoleRelationByManageIdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{402}
}

func (x *AddManagerRoleRelationByManageIdRequest) GetManagerId() int32 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *AddManagerRoleRelationByManageIdRequest) GetRoleId() []int32 {
	if x != nil {
		return x.RoleId
	}
	return nil
}

func (x *AddManagerRoleRelationByManageIdRequest) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 根据管理者ID新增管理者角色关系响应
type AddManagerRoleRelationByManageIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddManagerRoleRelationByManageIdResp) Reset() {
	*x = AddManagerRoleRelationByManageIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[403]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddManagerRoleRelationByManageIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddManagerRoleRelationByManageIdResp) ProtoMessage() {}

func (x *AddManagerRoleRelationByManageIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[403]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddManagerRoleRelationByManageIdResp.ProtoReflect.Descriptor instead.
func (*AddManagerRoleRelationByManageIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{403}
}

// 角色权限关系信息
type RolePermissionRelationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     // ID
	RoleId       int32 `protobuf:"varint,2,opt,name=roleId,proto3" json:"roleId,omitempty"`             // 角色ID
	PermissionId int32 `protobuf:"varint,3,opt,name=permissionId,proto3" json:"permissionId,omitempty"` // 权限ID
	BusinessId   int32 `protobuf:"varint,4,opt,name=businessId,proto3" json:"businessId,omitempty"`     // 业务ID
}

func (x *RolePermissionRelationInfo) Reset() {
	*x = RolePermissionRelationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[404]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermissionRelationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionRelationInfo) ProtoMessage() {}

func (x *RolePermissionRelationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[404]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionRelationInfo.ProtoReflect.Descriptor instead.
func (*RolePermissionRelationInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{404}
}

func (x *RolePermissionRelationInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RolePermissionRelationInfo) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RolePermissionRelationInfo) GetPermissionId() int32 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

func (x *RolePermissionRelationInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 列表角色权限关系请求
type ListRolePermissionRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项公共信息
}

func (x *ListRolePermissionRelationRequest) Reset() {
	*x = ListRolePermissionRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[405]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRolePermissionRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolePermissionRelationRequest) ProtoMessage() {}

func (x *ListRolePermissionRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[405]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolePermissionRelationRequest.ProtoReflect.Descriptor instead.
func (*ListRolePermissionRelationRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{405}
}

func (x *ListRolePermissionRelationRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListRolePermissionRelationRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 列表角色权限关系响应
type ListRolePermissionRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*RolePermissionRelationInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 角色权限关系信息列表
}

func (x *ListRolePermissionRelationResp) Reset() {
	*x = ListRolePermissionRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[406]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRolePermissionRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolePermissionRelationResp) ProtoMessage() {}

func (x *ListRolePermissionRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[406]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolePermissionRelationResp.ProtoReflect.Descriptor instead.
func (*ListRolePermissionRelationResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{406}
}

func (x *ListRolePermissionRelationResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRolePermissionRelationResp) GetList() []*RolePermissionRelationInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 新增角色权限关系请求
type AddRolePermissionRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RolePermissionRelationInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 角色权限关系信息
}

func (x *AddRolePermissionRelationRequest) Reset() {
	*x = AddRolePermissionRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[407]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRolePermissionRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRolePermissionRelationRequest) ProtoMessage() {}

func (x *AddRolePermissionRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[407]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRolePermissionRelationRequest.ProtoReflect.Descriptor instead.
func (*AddRolePermissionRelationRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{407}
}

func (x *AddRolePermissionRelationRequest) GetInfo() *RolePermissionRelationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新增角色权限关系响应
type AddRolePermissionRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRolePermissionRelationResp) Reset() {
	*x = AddRolePermissionRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[408]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRolePermissionRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRolePermissionRelationResp) ProtoMessage() {}

func (x *AddRolePermissionRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[408]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRolePermissionRelationResp.ProtoReflect.Descriptor instead.
func (*AddRolePermissionRelationResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{408}
}

// 修改角色权限关系请求
type ModRolePermissionRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RolePermissionRelationInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 角色权限关系信息
}

func (x *ModRolePermissionRelationRequest) Reset() {
	*x = ModRolePermissionRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[409]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModRolePermissionRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModRolePermissionRelationRequest) ProtoMessage() {}

func (x *ModRolePermissionRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[409]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModRolePermissionRelationRequest.ProtoReflect.Descriptor instead.
func (*ModRolePermissionRelationRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{409}
}

func (x *ModRolePermissionRelationRequest) GetInfo() *RolePermissionRelationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改角色权限关系响应
type ModRolePermissionRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModRolePermissionRelationResp) Reset() {
	*x = ModRolePermissionRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[410]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModRolePermissionRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModRolePermissionRelationResp) ProtoMessage() {}

func (x *ModRolePermissionRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[410]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModRolePermissionRelationResp.ProtoReflect.Descriptor instead.
func (*ModRolePermissionRelationResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{410}
}

// 删除角色权限关系请求
type DelRolePermissionRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *DelRolePermissionRelationRequest) Reset() {
	*x = DelRolePermissionRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[411]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRolePermissionRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRolePermissionRelationRequest) ProtoMessage() {}

func (x *DelRolePermissionRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[411]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRolePermissionRelationRequest.ProtoReflect.Descriptor instead.
func (*DelRolePermissionRelationRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{411}
}

func (x *DelRolePermissionRelationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除角色权限关系响应
type DelRolePermissionRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelRolePermissionRelationResp) Reset() {
	*x = DelRolePermissionRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[412]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRolePermissionRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRolePermissionRelationResp) ProtoMessage() {}

func (x *DelRolePermissionRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[412]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRolePermissionRelationResp.ProtoReflect.Descriptor instead.
func (*DelRolePermissionRelationResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{412}
}

// 验证码登录入参
type LoginWithSmsCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"` // 手机号码
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`               // 验证码
	SourceFrom  string `protobuf:"bytes,3,opt,name=sourceFrom,proto3" json:"sourceFrom,omitempty"`   // 来源
	AppletCode  string `protobuf:"bytes,4,opt,name=appletCode,proto3" json:"appletCode,omitempty"`   // 小程序码
}

func (x *LoginWithSmsCodeRequest) Reset() {
	*x = LoginWithSmsCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[413]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginWithSmsCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithSmsCodeRequest) ProtoMessage() {}

func (x *LoginWithSmsCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[413]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithSmsCodeRequest.ProtoReflect.Descriptor instead.
func (*LoginWithSmsCodeRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{413}
}

func (x *LoginWithSmsCodeRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *LoginWithSmsCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LoginWithSmsCodeRequest) GetSourceFrom() string {
	if x != nil {
		return x.SourceFrom
	}
	return ""
}

func (x *LoginWithSmsCodeRequest) GetAppletCode() string {
	if x != nil {
		return x.AppletCode
	}
	return ""
}

// 验证码登录出参
type LoginWithSmsCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           *ManagerInfo      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`                     // 用户信息
	PermissionList []*PermissionInfo `protobuf:"bytes,2,rep,name=permissionList,proto3" json:"permissionList,omitempty"` // 权限列表
	ErrorCode      *ErrCode          `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`           // 错误码
}

func (x *LoginWithSmsCodeResp) Reset() {
	*x = LoginWithSmsCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[414]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginWithSmsCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithSmsCodeResp) ProtoMessage() {}

func (x *LoginWithSmsCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[414]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithSmsCodeResp.ProtoReflect.Descriptor instead.
func (*LoginWithSmsCodeResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{414}
}

func (x *LoginWithSmsCodeResp) GetUser() *ManagerInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginWithSmsCodeResp) GetPermissionList() []*PermissionInfo {
	if x != nil {
		return x.PermissionList
	}
	return nil
}

func (x *LoginWithSmsCodeResp) GetErrorCode() *ErrCode {
	if x != nil {
		return x.ErrorCode
	}
	return nil
}

// 获取短信验证码入参
type GetSmsCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"` // 手机号码
}

func (x *GetSmsCodeRequest) Reset() {
	*x = GetSmsCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[415]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmsCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmsCodeRequest) ProtoMessage() {}

func (x *GetSmsCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[415]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmsCodeRequest.ProtoReflect.Descriptor instead.
func (*GetSmsCodeRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{415}
}

func (x *GetSmsCodeRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetSmsCodeByCreateBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"` // 手机号码
}

func (x *GetSmsCodeByCreateBusinessRequest) Reset() {
	*x = GetSmsCodeByCreateBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[416]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmsCodeByCreateBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmsCodeByCreateBusinessRequest) ProtoMessage() {}

func (x *GetSmsCodeByCreateBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[416]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmsCodeByCreateBusinessRequest.ProtoReflect.Descriptor instead.
func (*GetSmsCodeByCreateBusinessRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{416}
}

func (x *GetSmsCodeByCreateBusinessRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetSmsCodeByCreateBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *GetSmsCodeByCreateBusinessResp) Reset() {
	*x = GetSmsCodeByCreateBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[417]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmsCodeByCreateBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmsCodeByCreateBusinessResp) ProtoMessage() {}

func (x *GetSmsCodeByCreateBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[417]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmsCodeByCreateBusinessResp.ProtoReflect.Descriptor instead.
func (*GetSmsCodeByCreateBusinessResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{417}
}

func (x *GetSmsCodeByCreateBusinessResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 错误码
type ErrCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // 错误码
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`   // 错误信息
}

func (x *ErrCode) Reset() {
	*x = ErrCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[418]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrCode) ProtoMessage() {}

func (x *ErrCode) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[418]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrCode.ProtoReflect.Descriptor instead.
func (*ErrCode) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{418}
}

func (x *ErrCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrCode) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 获取短信验证码出参
type GetSmsCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *GetSmsCodeResp) Reset() {
	*x = GetSmsCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[419]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmsCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmsCodeResp) ProtoMessage() {}

func (x *GetSmsCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[419]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmsCodeResp.ProtoReflect.Descriptor instead.
func (*GetSmsCodeResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{419}
}

func (x *GetSmsCodeResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type GetBusinessByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *GetBusinessByIdRequest) Reset() {
	*x = GetBusinessByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[420]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessByIdRequest) ProtoMessage() {}

func (x *GetBusinessByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[420]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessByIdRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessByIdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{420}
}

func (x *GetBusinessByIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetBusinessByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *BusinessInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 业务信息
}

func (x *GetBusinessByIdResp) Reset() {
	*x = GetBusinessByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[421]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessByIdResp) ProtoMessage() {}

func (x *GetBusinessByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[421]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessByIdResp.ProtoReflect.Descriptor instead.
func (*GetBusinessByIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{421}
}

func (x *GetBusinessByIdResp) GetInfo() *BusinessInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetPreAuthCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPreAuthCodeReq) Reset() {
	*x = GetPreAuthCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[422]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreAuthCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreAuthCodeReq) ProtoMessage() {}

func (x *GetPreAuthCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[422]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPreAuthCodeReq.ProtoReflect.Descriptor instead.
func (*GetPreAuthCodeReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{422}
}

// 获取预授权码响应
type GetPreAuthCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err         *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`                 // 错误码
	PreAuthCode string   `protobuf:"bytes,2,opt,name=preAuthCode,proto3" json:"preAuthCode,omitempty"` // 预授权码
}

func (x *GetPreAuthCodeResp) Reset() {
	*x = GetPreAuthCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[423]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreAuthCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreAuthCodeResp) ProtoMessage() {}

func (x *GetPreAuthCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[423]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPreAuthCodeResp.ProtoReflect.Descriptor instead.
func (*GetPreAuthCodeResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{423}
}

func (x *GetPreAuthCodeResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetPreAuthCodeResp) GetPreAuthCode() string {
	if x != nil {
		return x.PreAuthCode
	}
	return ""
}

// 授权事件接收配置请求
type AuthorizationEventReceptionConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentVerifyTicket string `protobuf:"bytes,1,opt,name=componentVerifyTicket,proto3" json:"componentVerifyTicket,omitempty"` // 第三方平台验证票据
	Signature             string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`                         // 签名
	Timestamp             string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                         // 时间戳
	Nonce                 string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`                                 // 随机数
	MsgSignature          string `protobuf:"bytes,5,opt,name=msgSignature,proto3" json:"msgSignature,omitempty"`                   // 消息签名
}

func (x *AuthorizationEventReceptionConfigReq) Reset() {
	*x = AuthorizationEventReceptionConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[424]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationEventReceptionConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationEventReceptionConfigReq) ProtoMessage() {}

func (x *AuthorizationEventReceptionConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[424]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationEventReceptionConfigReq.ProtoReflect.Descriptor instead.
func (*AuthorizationEventReceptionConfigReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{424}
}

func (x *AuthorizationEventReceptionConfigReq) GetComponentVerifyTicket() string {
	if x != nil {
		return x.ComponentVerifyTicket
	}
	return ""
}

func (x *AuthorizationEventReceptionConfigReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AuthorizationEventReceptionConfigReq) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *AuthorizationEventReceptionConfigReq) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *AuthorizationEventReceptionConfigReq) GetMsgSignature() string {
	if x != nil {
		return x.MsgSignature
	}
	return ""
}

// 授权事件接收配置响应
type AuthorizationEventReceptionConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AuthorizationEventReceptionConfigResp) Reset() {
	*x = AuthorizationEventReceptionConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[425]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationEventReceptionConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationEventReceptionConfigResp) ProtoMessage() {}

func (x *AuthorizationEventReceptionConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[425]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationEventReceptionConfigResp.ProtoReflect.Descriptor instead.
func (*AuthorizationEventReceptionConfigResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{425}
}

func (x *AuthorizationEventReceptionConfigResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 获取授权方接口调用凭据请求
type GetAuthorizerAccessTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizerAppId   string `protobuf:"bytes,1,opt,name=authorizerAppId,proto3" json:"authorizerAppId,omitempty"`     // 授权方AppId
	AuthorizationCode string `protobuf:"bytes,2,opt,name=authorizationCode,proto3" json:"authorizationCode,omitempty"` // 授权码
	Retry             int32  `protobuf:"varint,3,opt,name=retry,proto3" json:"retry,omitempty"`                        // 重试次数
}

func (x *GetAuthorizerAccessTokenReq) Reset() {
	*x = GetAuthorizerAccessTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[426]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizerAccessTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizerAccessTokenReq) ProtoMessage() {}

func (x *GetAuthorizerAccessTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[426]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizerAccessTokenReq.ProtoReflect.Descriptor instead.
func (*GetAuthorizerAccessTokenReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{426}
}

func (x *GetAuthorizerAccessTokenReq) GetAuthorizerAppId() string {
	if x != nil {
		return x.AuthorizerAppId
	}
	return ""
}

func (x *GetAuthorizerAccessTokenReq) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

func (x *GetAuthorizerAccessTokenReq) GetRetry() int32 {
	if x != nil {
		return x.Retry
	}
	return 0
}

// 获取授权方接口调用凭据响应
type GetAuthorizerAccessTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err                   *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`                                     // 错误码
	AuthorizerAccessToken string   `protobuf:"bytes,2,opt,name=authorizerAccessToken,proto3" json:"authorizerAccessToken,omitempty"` // 授权方访问令牌
}

func (x *GetAuthorizerAccessTokenResp) Reset() {
	*x = GetAuthorizerAccessTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[427]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizerAccessTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizerAccessTokenResp) ProtoMessage() {}

func (x *GetAuthorizerAccessTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[427]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizerAccessTokenResp.ProtoReflect.Descriptor instead.
func (*GetAuthorizerAccessTokenResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{427}
}

func (x *GetAuthorizerAccessTokenResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetAuthorizerAccessTokenResp) GetAuthorizerAccessToken() string {
	if x != nil {
		return x.AuthorizerAccessToken
	}
	return ""
}

// 获取授权方信息请求
type GetAuthorizerInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizerAppId   string `protobuf:"bytes,1,opt,name=authorizerAppId,proto3" json:"authorizerAppId,omitempty"`     // 授权方AppId
	AuthorizationCode string `protobuf:"bytes,2,opt,name=authorizationCode,proto3" json:"authorizationCode,omitempty"` // 授权码
	BusinessId        int32  `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"`              // 业务ID
}

func (x *GetAuthorizerInfoReq) Reset() {
	*x = GetAuthorizerInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[428]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizerInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizerInfoReq) ProtoMessage() {}

func (x *GetAuthorizerInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[428]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizerInfoReq.ProtoReflect.Descriptor instead.
func (*GetAuthorizerInfoReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{428}
}

func (x *GetAuthorizerInfoReq) GetAuthorizerAppId() string {
	if x != nil {
		return x.AuthorizerAppId
	}
	return ""
}

func (x *GetAuthorizerInfoReq) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

func (x *GetAuthorizerInfoReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 获取授权方信息响应
type GetAuthorizerInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err      *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`           // 错误码
	InfoJson string   `protobuf:"bytes,2,opt,name=infoJson,proto3" json:"infoJson,omitempty"` // 信息JSON
}

func (x *GetAuthorizerInfoResp) Reset() {
	*x = GetAuthorizerInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[429]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizerInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizerInfoResp) ProtoMessage() {}

func (x *GetAuthorizerInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[429]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizerInfoResp.ProtoReflect.Descriptor instead.
func (*GetAuthorizerInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{429}
}

func (x *GetAuthorizerInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetAuthorizerInfoResp) GetInfoJson() string {
	if x != nil {
		return x.InfoJson
	}
	return ""
}

// API查询授权信息请求
type ApiQueryAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizationCode string `protobuf:"bytes,1,opt,name=authorizationCode,proto3" json:"authorizationCode,omitempty"` // 授权码
}

func (x *ApiQueryAuthReq) Reset() {
	*x = ApiQueryAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[430]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiQueryAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiQueryAuthReq) ProtoMessage() {}

func (x *ApiQueryAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[430]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiQueryAuthReq.ProtoReflect.Descriptor instead.
func (*ApiQueryAuthReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{430}
}

func (x *ApiQueryAuthReq) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

// API查询授权信息响应
type ApiQueryAuthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err      *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`           // 错误码
	InfoJson string   `protobuf:"bytes,2,opt,name=infoJson,proto3" json:"infoJson,omitempty"` // 信息JSON
}

func (x *ApiQueryAuthResp) Reset() {
	*x = ApiQueryAuthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[431]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiQueryAuthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiQueryAuthResp) ProtoMessage() {}

func (x *ApiQueryAuthResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[431]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiQueryAuthResp.ProtoReflect.Descriptor instead.
func (*ApiQueryAuthResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{431}
}

func (x *ApiQueryAuthResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ApiQueryAuthResp) GetInfoJson() string {
	if x != nil {
		return x.InfoJson
	}
	return ""
}

// 获取微信公众号平台请求
type GetWechatOfficialAccountPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId int32 `protobuf:"varint,1,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *GetWechatOfficialAccountPlatformReq) Reset() {
	*x = GetWechatOfficialAccountPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[432]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWechatOfficialAccountPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWechatOfficialAccountPlatformReq) ProtoMessage() {}

func (x *GetWechatOfficialAccountPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[432]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWechatOfficialAccountPlatformReq.ProtoReflect.Descriptor instead.
func (*GetWechatOfficialAccountPlatformReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{432}
}

func (x *GetWechatOfficialAccountPlatformReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

// 微信公众号平台信息
type WechatOfficialAccountPlatform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NickName          string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	HeadImg           string `protobuf:"bytes,3,opt,name=headImg,proto3" json:"headImg,omitempty"`
	UserName          string `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	QrcodeUrl         string `protobuf:"bytes,5,opt,name=qrcodeUrl,proto3" json:"qrcodeUrl,omitempty"`
	AccountStatus     int32  `protobuf:"varint,6,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	PrincipalName     string `protobuf:"bytes,7,opt,name=principalName,proto3" json:"principalName,omitempty"`
	ResultJson        string `protobuf:"bytes,8,opt,name=resultJson,proto3" json:"resultJson,omitempty"`
	AuthorizerAppid   string `protobuf:"bytes,9,opt,name=authorizerAppid,proto3" json:"authorizerAppid,omitempty"`
	BusinessId        int32  `protobuf:"varint,10,opt,name=businessId,proto3" json:"businessId,omitempty"`
	CreateTime        string `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	TemplateId        string `protobuf:"bytes,12,opt,name=templateId,proto3" json:"templateId,omitempty"`
	Status            int32  `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	UpdateTime        string `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	ReportTemplateId  string `protobuf:"bytes,15,opt,name=reportTemplateId,proto3" json:"reportTemplateId,omitempty"`
	AuthorizationType int32  `protobuf:"varint,16,opt,name=authorizationType,proto3" json:"authorizationType,omitempty"`
	Secret            string `protobuf:"bytes,17,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *WechatOfficialAccountPlatform) Reset() {
	*x = WechatOfficialAccountPlatform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[433]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOfficialAccountPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOfficialAccountPlatform) ProtoMessage() {}

func (x *WechatOfficialAccountPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[433]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOfficialAccountPlatform.ProtoReflect.Descriptor instead.
func (*WechatOfficialAccountPlatform) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{433}
}

func (x *WechatOfficialAccountPlatform) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WechatOfficialAccountPlatform) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetHeadImg() string {
	if x != nil {
		return x.HeadImg
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetAccountStatus() int32 {
	if x != nil {
		return x.AccountStatus
	}
	return 0
}

func (x *WechatOfficialAccountPlatform) GetPrincipalName() string {
	if x != nil {
		return x.PrincipalName
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetResultJson() string {
	if x != nil {
		return x.ResultJson
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetAuthorizerAppid() string {
	if x != nil {
		return x.AuthorizerAppid
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *WechatOfficialAccountPlatform) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WechatOfficialAccountPlatform) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetReportTemplateId() string {
	if x != nil {
		return x.ReportTemplateId
	}
	return ""
}

func (x *WechatOfficialAccountPlatform) GetAuthorizationType() int32 {
	if x != nil {
		return x.AuthorizationType
	}
	return 0
}

func (x *WechatOfficialAccountPlatform) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// 获取微信公众号平台响应
type GetWechatOfficialAccountPlatformResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  *ErrCode                       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`   // 错误码
	Info *WechatOfficialAccountPlatform `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` // 微信公众号平台信息
}

func (x *GetWechatOfficialAccountPlatformResp) Reset() {
	*x = GetWechatOfficialAccountPlatformResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[434]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWechatOfficialAccountPlatformResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWechatOfficialAccountPlatformResp) ProtoMessage() {}

func (x *GetWechatOfficialAccountPlatformResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[434]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWechatOfficialAccountPlatformResp.ProtoReflect.Descriptor instead.
func (*GetWechatOfficialAccountPlatformResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{434}
}

func (x *GetWechatOfficialAccountPlatformResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetWechatOfficialAccountPlatformResp) GetInfo() *WechatOfficialAccountPlatform {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改微信公众号平台信息请求
type ModWechatOfficialAccountPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *WechatOfficialAccountPlatform `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 微信公众号平台信息
}

func (x *ModWechatOfficialAccountPlatformReq) Reset() {
	*x = ModWechatOfficialAccountPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[435]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModWechatOfficialAccountPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModWechatOfficialAccountPlatformReq) ProtoMessage() {}

func (x *ModWechatOfficialAccountPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[435]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModWechatOfficialAccountPlatformReq.ProtoReflect.Descriptor instead.
func (*ModWechatOfficialAccountPlatformReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{435}
}

func (x *ModWechatOfficialAccountPlatformReq) GetInfo() *WechatOfficialAccountPlatform {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改微信公众号平台信息响应
type ModWechatOfficialAccountPlatformResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModWechatOfficialAccountPlatformResp) Reset() {
	*x = ModWechatOfficialAccountPlatformResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[436]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModWechatOfficialAccountPlatformResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModWechatOfficialAccountPlatformResp) ProtoMessage() {}

func (x *ModWechatOfficialAccountPlatformResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[436]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModWechatOfficialAccountPlatformResp.ProtoReflect.Descriptor instead.
func (*ModWechatOfficialAccountPlatformResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{436}
}

func (x *ModWechatOfficialAccountPlatformResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 简化修改用户信息请求
type SimpleModUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *ManagerInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 用户信息
}

func (x *SimpleModUserInfoReq) Reset() {
	*x = SimpleModUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[437]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleModUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleModUserInfoReq) ProtoMessage() {}

func (x *SimpleModUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[437]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleModUserInfoReq.ProtoReflect.Descriptor instead.
func (*SimpleModUserInfoReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{437}
}

func (x *SimpleModUserInfoReq) GetUser() *ManagerInfo {
	if x != nil {
		return x.User
	}
	return nil
}

// 简化修改用户信息响应
type SimpleModUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *SimpleModUserInfoResp) Reset() {
	*x = SimpleModUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[438]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleModUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleModUserInfoResp) ProtoMessage() {}

func (x *SimpleModUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[438]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleModUserInfoResp.ProtoReflect.Descriptor instead.
func (*SimpleModUserInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{438}
}

func (x *SimpleModUserInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 根据店铺ID获取角色信息请求
type GetRoleInfoByShopIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId int32 `protobuf:"varint,1,opt,name=shopId,proto3" json:"shopId,omitempty"` // 店铺ID
}

func (x *GetRoleInfoByShopIdReq) Reset() {
	*x = GetRoleInfoByShopIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[439]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleInfoByShopIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleInfoByShopIdReq) ProtoMessage() {}

func (x *GetRoleInfoByShopIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[439]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleInfoByShopIdReq.ProtoReflect.Descriptor instead.
func (*GetRoleInfoByShopIdReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{439}
}

func (x *GetRoleInfoByShopIdReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// 根据店铺ID获取角色信息响应
type GetRoleInfoByShopIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RoleInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 角色信息列表
	Err  *ErrCode    `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`   // 错误码
}

func (x *GetRoleInfoByShopIdResp) Reset() {
	*x = GetRoleInfoByShopIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[440]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleInfoByShopIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleInfoByShopIdResp) ProtoMessage() {}

func (x *GetRoleInfoByShopIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[440]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleInfoByShopIdResp.ProtoReflect.Descriptor instead.
func (*GetRoleInfoByShopIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{440}
}

func (x *GetRoleInfoByShopIdResp) GetList() []*RoleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetRoleInfoByShopIdResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 评分设置信息
type ScoreSettingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                      // ID
	DimensionType string     `protobuf:"bytes,2,opt,name=dimensionType,proto3" json:"dimensionType,omitempty"` // 维度类型
	DimensionName string     `protobuf:"bytes,3,opt,name=dimensionName,proto3" json:"dimensionName,omitempty"` // 维度名称
	AgeInfoList   []*AgeInfo `protobuf:"bytes,4,rep,name=ageInfoList,proto3" json:"ageInfoList,omitempty"`     // 年龄信息列表
}

func (x *ScoreSettingInfo) Reset() {
	*x = ScoreSettingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[441]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreSettingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreSettingInfo) ProtoMessage() {}

func (x *ScoreSettingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[441]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreSettingInfo.ProtoReflect.Descriptor instead.
func (*ScoreSettingInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{441}
}

func (x *ScoreSettingInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScoreSettingInfo) GetDimensionType() string {
	if x != nil {
		return x.DimensionType
	}
	return ""
}

func (x *ScoreSettingInfo) GetDimensionName() string {
	if x != nil {
		return x.DimensionName
	}
	return ""
}

func (x *ScoreSettingInfo) GetAgeInfoList() []*AgeInfo {
	if x != nil {
		return x.AgeInfoList
	}
	return nil
}

// 年龄信息
type AgeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeMin int32 `protobuf:"varint,4,opt,name=ageMin,proto3" json:"ageMin,omitempty"` // 最小年龄
	AgeMax int32 `protobuf:"varint,5,opt,name=ageMax,proto3" json:"ageMax,omitempty"` // 最大年龄
	Score  int32 `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`   // 评分
}

func (x *AgeInfo) Reset() {
	*x = AgeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[442]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgeInfo) ProtoMessage() {}

func (x *AgeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[442]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgeInfo.ProtoReflect.Descriptor instead.
func (*AgeInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{442}
}

func (x *AgeInfo) GetAgeMin() int32 {
	if x != nil {
		return x.AgeMin
	}
	return 0
}

func (x *AgeInfo) GetAgeMax() int32 {
	if x != nil {
		return x.AgeMax
	}
	return 0
}

func (x *AgeInfo) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 列表评分设置请求
type ListScoreSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器列表
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项公共信息
}

func (x *ListScoreSettingRequest) Reset() {
	*x = ListScoreSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[443]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScoreSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoreSettingRequest) ProtoMessage() {}

func (x *ListScoreSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[443]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoreSettingRequest.ProtoReflect.Descriptor instead.
func (*ListScoreSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{443}
}

func (x *ListScoreSettingRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListScoreSettingRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 评分设置信息（版本2）
type ScoreSettingInfoV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                      // ID
	DimensionType string `protobuf:"bytes,2,opt,name=dimensionType,proto3" json:"dimensionType,omitempty"` // 维度类型
	DimensionName string `protobuf:"bytes,3,opt,name=dimensionName,proto3" json:"dimensionName,omitempty"` // 维度名称
	AgeMin        int32  `protobuf:"varint,4,opt,name=ageMin,proto3" json:"ageMin,omitempty"`              // 最小年龄
	AgeMax        int32  `protobuf:"varint,5,opt,name=ageMax,proto3" json:"ageMax,omitempty"`              // 最大年龄
	Score         int32  `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`                // 评分
}

func (x *ScoreSettingInfoV2) Reset() {
	*x = ScoreSettingInfoV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[444]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreSettingInfoV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreSettingInfoV2) ProtoMessage() {}

func (x *ScoreSettingInfoV2) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[444]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreSettingInfoV2.ProtoReflect.Descriptor instead.
func (*ScoreSettingInfoV2) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{444}
}

func (x *ScoreSettingInfoV2) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScoreSettingInfoV2) GetDimensionType() string {
	if x != nil {
		return x.DimensionType
	}
	return ""
}

func (x *ScoreSettingInfoV2) GetDimensionName() string {
	if x != nil {
		return x.DimensionName
	}
	return ""
}

func (x *ScoreSettingInfoV2) GetAgeMin() int32 {
	if x != nil {
		return x.AgeMin
	}
	return 0
}

func (x *ScoreSettingInfoV2) GetAgeMax() int32 {
	if x != nil {
		return x.AgeMax
	}
	return 0
}

func (x *ScoreSettingInfoV2) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 评分设置列表信息
type ScoreSettingListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                      // ID
	DimensionType string `protobuf:"bytes,2,opt,name=dimensionType,proto3" json:"dimensionType,omitempty"` // 维度类型
	DimensionName string `protobuf:"bytes,3,opt,name=dimensionName,proto3" json:"dimensionName,omitempty"` // 维度名称
	CreateTime    string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`       // 创建时间
}

func (x *ScoreSettingListInfo) Reset() {
	*x = ScoreSettingListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[445]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreSettingListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreSettingListInfo) ProtoMessage() {}

func (x *ScoreSettingListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[445]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreSettingListInfo.ProtoReflect.Descriptor instead.
func (*ScoreSettingListInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{445}
}

func (x *ScoreSettingListInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScoreSettingListInfo) GetDimensionType() string {
	if x != nil {
		return x.DimensionType
	}
	return ""
}

func (x *ScoreSettingListInfo) GetDimensionName() string {
	if x != nil {
		return x.DimensionName
	}
	return ""
}

func (x *ScoreSettingListInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 列表评分设置响应
type ListScoreSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ScoreSettingListInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 评分设置列表信息
}

func (x *ListScoreSettingResp) Reset() {
	*x = ListScoreSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[446]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScoreSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoreSettingResp) ProtoMessage() {}

func (x *ListScoreSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[446]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoreSettingResp.ProtoReflect.Descriptor instead.
func (*ListScoreSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{446}
}

func (x *ListScoreSettingResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListScoreSettingResp) GetList() []*ScoreSettingListInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 新增评分设置请求
type AddScoreSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ScoreSettingInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 评分设置信息
}

func (x *AddScoreSettingRequest) Reset() {
	*x = AddScoreSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[447]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScoreSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScoreSettingRequest) ProtoMessage() {}

func (x *AddScoreSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[447]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScoreSettingRequest.ProtoReflect.Descriptor instead.
func (*AddScoreSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{447}
}

func (x *AddScoreSettingRequest) GetInfo() *ScoreSettingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新增评分设置响应
type AddScoreSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddScoreSettingResp) Reset() {
	*x = AddScoreSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[448]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScoreSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScoreSettingResp) ProtoMessage() {}

func (x *AddScoreSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[448]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScoreSettingResp.ProtoReflect.Descriptor instead.
func (*AddScoreSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{448}
}

// 修改评分设置请求
type ModScoreSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ScoreSettingInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 评分设置信息
}

func (x *ModScoreSettingRequest) Reset() {
	*x = ModScoreSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[449]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModScoreSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModScoreSettingRequest) ProtoMessage() {}

func (x *ModScoreSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[449]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModScoreSettingRequest.ProtoReflect.Descriptor instead.
func (*ModScoreSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{449}
}

func (x *ModScoreSettingRequest) GetInfo() *ScoreSettingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改评分设置响应
type ModScoreSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModScoreSettingResp) Reset() {
	*x = ModScoreSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[450]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModScoreSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModScoreSettingResp) ProtoMessage() {}

func (x *ModScoreSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[450]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModScoreSettingResp.ProtoReflect.Descriptor instead.
func (*ModScoreSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{450}
}

// 删除评分设置请求
type DelScoreSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int32 id = 1; // ID
	DimensionType string `protobuf:"bytes,1,opt,name=dimensionType,proto3" json:"dimensionType,omitempty"` // 维度类型
	DimensionName string `protobuf:"bytes,2,opt,name=dimensionName,proto3" json:"dimensionName,omitempty"` // 维度
}

func (x *DelScoreSettingRequest) Reset() {
	*x = DelScoreSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[451]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelScoreSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelScoreSettingRequest) ProtoMessage() {}

func (x *DelScoreSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[451]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelScoreSettingRequest.ProtoReflect.Descriptor instead.
func (*DelScoreSettingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{451}
}

func (x *DelScoreSettingRequest) GetDimensionType() string {
	if x != nil {
		return x.DimensionType
	}
	return ""
}

func (x *DelScoreSettingRequest) GetDimensionName() string {
	if x != nil {
		return x.DimensionName
	}
	return ""
}

type DelScoreSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelScoreSettingResp) Reset() {
	*x = DelScoreSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[452]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelScoreSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelScoreSettingResp) ProtoMessage() {}

func (x *DelScoreSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[452]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelScoreSettingResp.ProtoReflect.Descriptor instead.
func (*DelScoreSettingResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{452}
}

type GetScoreSettingByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DimensionType string `protobuf:"bytes,1,opt,name=dimension_type,json=dimensionType,proto3" json:"dimension_type,omitempty"` // 维度类型
}

func (x *GetScoreSettingByTypeRequest) Reset() {
	*x = GetScoreSettingByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[453]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoreSettingByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoreSettingByTypeRequest) ProtoMessage() {}

func (x *GetScoreSettingByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[453]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoreSettingByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetScoreSettingByTypeRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{453}
}

func (x *GetScoreSettingByTypeRequest) GetDimensionType() string {
	if x != nil {
		return x.DimensionType
	}
	return ""
}

type GetScoreSettingByTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ScoreSettingInfoV2 `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 评分设置信息列表
}

func (x *GetScoreSettingByTypeResp) Reset() {
	*x = GetScoreSettingByTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[454]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoreSettingByTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoreSettingByTypeResp) ProtoMessage() {}

func (x *GetScoreSettingByTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[454]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoreSettingByTypeResp.ProtoReflect.Descriptor instead.
func (*GetScoreSettingByTypeResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{454}
}

func (x *GetScoreSettingByTypeResp) GetList() []*ScoreSettingInfoV2 {
	if x != nil {
		return x.List
	}
	return nil
}

type SkinCareProjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // 项目ID
	ProjectCode string `protobuf:"bytes,2,opt,name=projectCode,proto3" json:"projectCode,omitempty"` // 项目代码
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`               // 项目名称
	// repeated MeasureSkinDimensionType types = 4; // 测量皮肤维度类型
	Types             string           `protobuf:"bytes,4,opt,name=types,proto3" json:"types,omitempty"`                                                                                                  // 测量皮肤维度类型
	EffectIds         string           `protobuf:"bytes,5,opt,name=effectIds,proto3" json:"effectIds,omitempty"`                                                                                          // 效果IDs
	EffectMap         map[int32]string `protobuf:"bytes,6,rep,name=effectMap,proto3" json:"effectMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 效果映射
	Price             uint32           `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty"`                                                                                                 // 价格
	Thumb             string           `protobuf:"bytes,8,opt,name=thumb,proto3" json:"thumb,omitempty"`                                                                                                  // 缩略图
	DetailPictures    string           `protobuf:"bytes,9,opt,name=detailPictures,proto3" json:"detailPictures,omitempty"`                                                                                // 详细图片
	Introduction      string           `protobuf:"bytes,10,opt,name=introduction,proto3" json:"introduction,omitempty"`                                                                                   // 介绍
	Desc              string           `protobuf:"bytes,11,opt,name=desc,proto3" json:"desc,omitempty"`                                                                                                   // 描述
	Link              string           `protobuf:"bytes,12,opt,name=link,proto3" json:"link,omitempty"`                                                                                                   // 链接
	Status            bool             `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`                                                                                              // 状态
	BusinessId        int32            `protobuf:"varint,14,opt,name=businessId,proto3" json:"businessId,omitempty"`                                                                                      // 业务ID
	ShopId            int32            `protobuf:"varint,15,opt,name=shopId,proto3" json:"shopId,omitempty"`                                                                                              // 店铺ID
	CreateTime        string           `protobuf:"bytes,16,opt,name=createTime,proto3" json:"createTime,omitempty"`                                                                                       // 创建时间
	UpdateTime        string           `protobuf:"bytes,17,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                                                                                       // 更新时间
	RecommendedReason string           `protobuf:"bytes,18,opt,name=recommendedReason,proto3" json:"recommendedReason,omitempty"`                                                                         // 推荐理由
}

func (x *SkinCareProjectInfo) Reset() {
	*x = SkinCareProjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[455]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkinCareProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkinCareProjectInfo) ProtoMessage() {}

func (x *SkinCareProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[455]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkinCareProjectInfo.ProtoReflect.Descriptor instead.
func (*SkinCareProjectInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{455}
}

func (x *SkinCareProjectInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkinCareProjectInfo) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *SkinCareProjectInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SkinCareProjectInfo) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

func (x *SkinCareProjectInfo) GetEffectIds() string {
	if x != nil {
		return x.EffectIds
	}
	return ""
}

func (x *SkinCareProjectInfo) GetEffectMap() map[int32]string {
	if x != nil {
		return x.EffectMap
	}
	return nil
}

func (x *SkinCareProjectInfo) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkinCareProjectInfo) GetThumb() string {
	if x != nil {
		return x.Thumb
	}
	return ""
}

func (x *SkinCareProjectInfo) GetDetailPictures() string {
	if x != nil {
		return x.DetailPictures
	}
	return ""
}

func (x *SkinCareProjectInfo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *SkinCareProjectInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SkinCareProjectInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SkinCareProjectInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SkinCareProjectInfo) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *SkinCareProjectInfo) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SkinCareProjectInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SkinCareProjectInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *SkinCareProjectInfo) GetRecommendedReason() string {
	if x != nil {
		return x.RecommendedReason
	}
	return ""
}

type AddSkinCareProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId string               `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"` // 操作用户ID
	Info      *SkinCareProjectInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`           // 皮肤护理项目信息
}

func (x *AddSkinCareProjectReq) Reset() {
	*x = AddSkinCareProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[456]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSkinCareProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSkinCareProjectReq) ProtoMessage() {}

func (x *AddSkinCareProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[456]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSkinCareProjectReq.ProtoReflect.Descriptor instead.
func (*AddSkinCareProjectReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{456}
}

func (x *AddSkinCareProjectReq) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *AddSkinCareProjectReq) GetInfo() *SkinCareProjectInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type AddSkinCareProjectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AddSkinCareProjectRsp) Reset() {
	*x = AddSkinCareProjectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[457]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSkinCareProjectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSkinCareProjectRsp) ProtoMessage() {}

func (x *AddSkinCareProjectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[457]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSkinCareProjectRsp.ProtoReflect.Descriptor instead.
func (*AddSkinCareProjectRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{457}
}

func (x *AddSkinCareProjectRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type DelSkinCareProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string  `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Ids        []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`        // 项目ID列表
	BusinessId int32   `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *DelSkinCareProjectReq) Reset() {
	*x = DelSkinCareProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[458]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSkinCareProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSkinCareProjectReq) ProtoMessage() {}

func (x *DelSkinCareProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[458]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSkinCareProjectReq.ProtoReflect.Descriptor instead.
func (*DelSkinCareProjectReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{458}
}

func (x *DelSkinCareProjectReq) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *DelSkinCareProjectReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DelSkinCareProjectReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

type DelSkinCareProjectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelSkinCareProjectRsp) Reset() {
	*x = DelSkinCareProjectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[459]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSkinCareProjectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSkinCareProjectRsp) ProtoMessage() {}

func (x *DelSkinCareProjectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[459]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSkinCareProjectRsp.ProtoReflect.Descriptor instead.
func (*DelSkinCareProjectRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{459}
}

type ModSkinCareProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OprUserId  string               `protobuf:"bytes,1,opt,name=oprUserId,proto3" json:"oprUserId,omitempty"`    // 操作用户ID
	Info       *SkinCareProjectInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`              // 皮肤护理项目信息
	BusinessId int32                `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *ModSkinCareProjectReq) Reset() {
	*x = ModSkinCareProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[460]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSkinCareProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSkinCareProjectReq) ProtoMessage() {}

func (x *ModSkinCareProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[460]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSkinCareProjectReq.ProtoReflect.Descriptor instead.
func (*ModSkinCareProjectReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{460}
}

func (x *ModSkinCareProjectReq) GetOprUserId() string {
	if x != nil {
		return x.OprUserId
	}
	return ""
}

func (x *ModSkinCareProjectReq) GetInfo() *SkinCareProjectInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ModSkinCareProjectReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

type ModSkinCareProjectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModSkinCareProjectRsp) Reset() {
	*x = ModSkinCareProjectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[461]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSkinCareProjectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSkinCareProjectRsp) ProtoMessage() {}

func (x *ModSkinCareProjectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[461]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSkinCareProjectRsp.ProtoReflect.Descriptor instead.
func (*ModSkinCareProjectRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{461}
}

func (x *ModSkinCareProjectRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type ListSkinCareProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`        // 运行时过滤器
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"`  // 查找选项
	BusinessId int32             `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *ListSkinCareProjectReq) Reset() {
	*x = ListSkinCareProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[462]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinCareProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinCareProjectReq) ProtoMessage() {}

func (x *ListSkinCareProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[462]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinCareProjectReq.ProtoReflect.Descriptor instead.
func (*ListSkinCareProjectReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{462}
}

func (x *ListSkinCareProjectReq) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListSkinCareProjectReq) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

func (x *ListSkinCareProjectReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

type ListSkinCareProjectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*SkinCareProjectInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 项目信息列表
}

func (x *ListSkinCareProjectRsp) Reset() {
	*x = ListSkinCareProjectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[463]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinCareProjectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinCareProjectRsp) ProtoMessage() {}

func (x *ListSkinCareProjectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[463]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinCareProjectRsp.ProtoReflect.Descriptor instead.
func (*ListSkinCareProjectRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{463}
}

func (x *ListSkinCareProjectRsp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSkinCareProjectRsp) GetList() []*SkinCareProjectInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type OnOffSkinCareProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // 项目ID
	Status     bool  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`         // 状态
	BusinessId int32 `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"` // 业务ID
}

func (x *OnOffSkinCareProjectReq) Reset() {
	*x = OnOffSkinCareProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[464]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnOffSkinCareProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnOffSkinCareProjectReq) ProtoMessage() {}

func (x *OnOffSkinCareProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[464]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnOffSkinCareProjectReq.ProtoReflect.Descriptor instead.
func (*OnOffSkinCareProjectReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{464}
}

func (x *OnOffSkinCareProjectReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OnOffSkinCareProjectReq) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *OnOffSkinCareProjectReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

type OnOffSkinCareProjectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OnOffSkinCareProjectRsp) Reset() {
	*x = OnOffSkinCareProjectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[465]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnOffSkinCareProjectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnOffSkinCareProjectRsp) ProtoMessage() {}

func (x *OnOffSkinCareProjectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[465]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnOffSkinCareProjectRsp.ProtoReflect.Descriptor instead.
func (*OnOffSkinCareProjectRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{465}
}

type PackageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId   int64              `protobuf:"varint,1,opt,name=packageId,proto3" json:"packageId,omitempty"`                             // 套餐ID
	PackageName string             `protobuf:"bytes,2,opt,name=packageName,proto3" json:"packageName,omitempty"`                          // 套餐名称
	Types       []SkinAnalysisType `protobuf:"varint,3,rep,packed,name=types,proto3,enum=manage.SkinAnalysisType" json:"types,omitempty"` // 皮肤分析类型列表
	CreateTime  string             `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`                            // 创建时间
}

func (x *PackageItem) Reset() {
	*x = PackageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[466]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageItem) ProtoMessage() {}

func (x *PackageItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[466]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageItem.ProtoReflect.Descriptor instead.
func (*PackageItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{466}
}

func (x *PackageItem) GetPackageId() int64 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *PackageItem) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *PackageItem) GetTypes() []SkinAnalysisType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *PackageItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type AddPackagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName string             `protobuf:"bytes,1,opt,name=packageName,proto3" json:"packageName,omitempty"`                          // 套餐名称
	Types       []SkinAnalysisType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=manage.SkinAnalysisType" json:"types,omitempty"` // 皮肤分析类型列表
}

func (x *AddPackagesReq) Reset() {
	*x = AddPackagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[467]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPackagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPackagesReq) ProtoMessage() {}

func (x *AddPackagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[467]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPackagesReq.ProtoReflect.Descriptor instead.
func (*AddPackagesReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{467}
}

func (x *AddPackagesReq) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *AddPackagesReq) GetTypes() []SkinAnalysisType {
	if x != nil {
		return x.Types
	}
	return nil
}

type AddPackagesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AddPackagesRsp) Reset() {
	*x = AddPackagesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[468]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPackagesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPackagesRsp) ProtoMessage() {}

func (x *AddPackagesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[468]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPackagesRsp.ProtoReflect.Descriptor instead.
func (*AddPackagesRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{468}
}

func (x *AddPackagesRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type ListPackagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项
}

func (x *ListPackagesReq) Reset() {
	*x = ListPackagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[469]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPackagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackagesReq) ProtoMessage() {}

func (x *ListPackagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[469]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackagesReq.ProtoReflect.Descriptor instead.
func (*ListPackagesReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{469}
}

func (x *ListPackagesReq) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListPackagesReq) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ListPackagesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   *ErrCode       `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`      // 错误码
	Total uint32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*PackageItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`    // 套餐信息列表
}

func (x *ListPackagesRsp) Reset() {
	*x = ListPackagesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[470]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPackagesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackagesRsp) ProtoMessage() {}

func (x *ListPackagesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[470]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackagesRsp.ProtoReflect.Descriptor instead.
func (*ListPackagesRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{470}
}

func (x *ListPackagesRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ListPackagesRsp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPackagesRsp) GetList() []*PackageItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ModPackagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId   int64              `protobuf:"varint,1,opt,name=packageId,proto3" json:"packageId,omitempty"`                             // 套餐ID
	PackageName string             `protobuf:"bytes,2,opt,name=packageName,proto3" json:"packageName,omitempty"`                          // 套餐名称
	Types       []SkinAnalysisType `protobuf:"varint,3,rep,packed,name=types,proto3,enum=manage.SkinAnalysisType" json:"types,omitempty"` // 皮肤分析类型列表
}

func (x *ModPackagesReq) Reset() {
	*x = ModPackagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[471]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModPackagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModPackagesReq) ProtoMessage() {}

func (x *ModPackagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[471]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModPackagesReq.ProtoReflect.Descriptor instead.
func (*ModPackagesReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{471}
}

func (x *ModPackagesReq) GetPackageId() int64 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *ModPackagesReq) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *ModPackagesReq) GetTypes() []SkinAnalysisType {
	if x != nil {
		return x.Types
	}
	return nil
}

type ModPackagesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModPackagesRsp) Reset() {
	*x = ModPackagesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[472]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModPackagesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModPackagesRsp) ProtoMessage() {}

func (x *ModPackagesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[472]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModPackagesRsp.ProtoReflect.Descriptor instead.
func (*ModPackagesRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{472}
}

func (x *ModPackagesRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type DelPackagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageIds []uint64 `protobuf:"varint,1,rep,packed,name=packageIds,proto3" json:"packageIds,omitempty"` // 套餐ID列表
}

func (x *DelPackagesReq) Reset() {
	*x = DelPackagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[473]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPackagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPackagesReq) ProtoMessage() {}

func (x *DelPackagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[473]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPackagesReq.ProtoReflect.Descriptor instead.
func (*DelPackagesReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{473}
}

func (x *DelPackagesReq) GetPackageIds() []uint64 {
	if x != nil {
		return x.PackageIds
	}
	return nil
}

type DelPackagesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelPackagesRsp) Reset() {
	*x = DelPackagesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[474]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPackagesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPackagesRsp) ProtoMessage() {}

func (x *DelPackagesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[474]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPackagesRsp.ProtoReflect.Descriptor instead.
func (*DelPackagesRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{474}
}

func (x *DelPackagesRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type OrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderSn         string `protobuf:"bytes,1,opt,name=orderSn,proto3" json:"orderSn,omitempty"`                  // 订单号
	OrderStatus     string `protobuf:"bytes,2,opt,name=orderStatus,proto3" json:"orderStatus,omitempty"`          // 订单状态
	TransactionId   string `protobuf:"bytes,3,opt,name=transactionId,proto3" json:"transactionId,omitempty"`      // 交易ID
	Price           int32  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`                     // 价格
	TotalPay        int32  `protobuf:"varint,5,opt,name=totalPay,proto3" json:"totalPay,omitempty"`               // 总支付额
	BusinessName    string `protobuf:"bytes,6,opt,name=businessName,proto3" json:"businessName,omitempty"`        // 商家名称
	ShopName        string `protobuf:"bytes,7,opt,name=shopName,proto3" json:"shopName,omitempty"`                // 店铺名称
	UserName        string `protobuf:"bytes,8,opt,name=userName,proto3" json:"userName,omitempty"`                // 用户名称
	UserPhone       string `protobuf:"bytes,9,opt,name=userPhone,proto3" json:"userPhone,omitempty"`              // 用户手机号
	ProductName     string `protobuf:"bytes,10,opt,name=productName,proto3" json:"productName,omitempty"`         // 产品名称
	RecordId        uint64 `protobuf:"varint,11,opt,name=recordId,proto3" json:"recordId,omitempty"`              // 记录ID
	PayerOpenid     string `protobuf:"bytes,12,opt,name=payerOpenid,proto3" json:"payerOpenid,omitempty"`         // 付款人OpenID
	PayTime         int64  `protobuf:"varint,13,opt,name=payTime,proto3" json:"payTime,omitempty"`                // 支付时间
	CreateTime      string `protobuf:"bytes,14,opt,name=createTime,proto3" json:"createTime,omitempty"`           // 创建时间
	UpdateTime      string `protobuf:"bytes,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`           // 更新时间
	OrderStatusDesc string `protobuf:"bytes,16,opt,name=orderStatusDesc,proto3" json:"orderStatusDesc,omitempty"` // 订单状态描述
}

func (x *OrderItem) Reset() {
	*x = OrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[475]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItem) ProtoMessage() {}

func (x *OrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[475]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItem.ProtoReflect.Descriptor instead.
func (*OrderItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{475}
}

func (x *OrderItem) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderItem) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

func (x *OrderItem) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *OrderItem) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderItem) GetTotalPay() int32 {
	if x != nil {
		return x.TotalPay
	}
	return 0
}

func (x *OrderItem) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *OrderItem) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *OrderItem) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *OrderItem) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *OrderItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OrderItem) GetRecordId() uint64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *OrderItem) GetPayerOpenid() string {
	if x != nil {
		return x.PayerOpenid
	}
	return ""
}

func (x *OrderItem) GetPayTime() int64 {
	if x != nil {
		return x.PayTime
	}
	return 0
}

func (x *OrderItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderItem) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *OrderItem) GetOrderStatusDesc() string {
	if x != nil {
		return x.OrderStatusDesc
	}
	return ""
}

type ListOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项
}

func (x *ListOrderReq) Reset() {
	*x = ListOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[476]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderReq) ProtoMessage() {}

func (x *ListOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[476]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderReq.ProtoReflect.Descriptor instead.
func (*ListOrderReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{476}
}

func (x *ListOrderReq) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListOrderReq) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ListOrderRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   *ErrCode     `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`      // 错误码
	Total int32        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*OrderItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`    // 订单信息列表
}

func (x *ListOrderRsp) Reset() {
	*x = ListOrderRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[477]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderRsp) ProtoMessage() {}

func (x *ListOrderRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[477]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderRsp.ProtoReflect.Descriptor instead.
func (*ListOrderRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{477}
}

func (x *ListOrderRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ListOrderRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListOrderRsp) GetList() []*OrderItem {
	if x != nil {
		return x.List
	}
	return nil
}

type WeiXinFansInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                    // 粉丝ID
	ToUserName   string `protobuf:"bytes,2,opt,name=toUserName,proto3" json:"toUserName,omitempty"`     // 接收者用户名
	FromUserName string `protobuf:"bytes,3,opt,name=fromUserName,proto3" json:"fromUserName,omitempty"` // 发送者用户名
	FollowTime   string `protobuf:"bytes,4,opt,name=followTime,proto3" json:"followTime,omitempty"`     // 关注时间
	CreateTime   string `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`     // 创建时间
}

func (x *WeiXinFansInfo) Reset() {
	*x = WeiXinFansInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[478]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeiXinFansInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeiXinFansInfo) ProtoMessage() {}

func (x *WeiXinFansInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[478]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeiXinFansInfo.ProtoReflect.Descriptor instead.
func (*WeiXinFansInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{478}
}

func (x *WeiXinFansInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WeiXinFansInfo) GetToUserName() string {
	if x != nil {
		return x.ToUserName
	}
	return ""
}

func (x *WeiXinFansInfo) GetFromUserName() string {
	if x != nil {
		return x.FromUserName
	}
	return ""
}

func (x *WeiXinFansInfo) GetFollowTime() string {
	if x != nil {
		return x.FollowTime
	}
	return ""
}

func (x *WeiXinFansInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type AddWeiXinFansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info     *WeiXinFansInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`         // 微信粉丝信息
	EventKey string          `protobuf:"bytes,2,opt,name=eventKey,proto3" json:"eventKey,omitempty"` // 事件键值
}

func (x *AddWeiXinFansRequest) Reset() {
	*x = AddWeiXinFansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[479]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWeiXinFansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWeiXinFansRequest) ProtoMessage() {}

func (x *AddWeiXinFansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[479]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWeiXinFansRequest.ProtoReflect.Descriptor instead.
func (*AddWeiXinFansRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{479}
}

func (x *AddWeiXinFansRequest) GetInfo() *WeiXinFansInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AddWeiXinFansRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

type AddWeiXinFansResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddWeiXinFansResp) Reset() {
	*x = AddWeiXinFansResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[480]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWeiXinFansResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWeiXinFansResp) ProtoMessage() {}

func (x *AddWeiXinFansResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[480]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWeiXinFansResp.ProtoReflect.Descriptor instead.
func (*AddWeiXinFansResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{480}
}

type DelWeiXinFansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *WeiXinFansInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 微信粉丝信息
}

func (x *DelWeiXinFansRequest) Reset() {
	*x = DelWeiXinFansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[481]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelWeiXinFansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWeiXinFansRequest) ProtoMessage() {}

func (x *DelWeiXinFansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[481]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWeiXinFansRequest.ProtoReflect.Descriptor instead.
func (*DelWeiXinFansRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{481}
}

func (x *DelWeiXinFansRequest) GetInfo() *WeiXinFansInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DelWeiXinFansResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelWeiXinFansResp) Reset() {
	*x = DelWeiXinFansResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[482]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelWeiXinFansResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWeiXinFansResp) ProtoMessage() {}

func (x *DelWeiXinFansResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[482]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWeiXinFansResp.ProtoReflect.Descriptor instead.
func (*DelWeiXinFansResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{482}
}

type GetAuthorizerAccessTokenByAppIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizerAppId string `protobuf:"bytes,1,opt,name=authorizerAppId,proto3" json:"authorizerAppId,omitempty"` // 授权方AppID
	Retry           int32  `protobuf:"varint,2,opt,name=retry,proto3" json:"retry,omitempty"`                    // 重试次数
}

func (x *GetAuthorizerAccessTokenByAppIdRequest) Reset() {
	*x = GetAuthorizerAccessTokenByAppIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[483]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizerAccessTokenByAppIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizerAccessTokenByAppIdRequest) ProtoMessage() {}

func (x *GetAuthorizerAccessTokenByAppIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[483]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizerAccessTokenByAppIdRequest.ProtoReflect.Descriptor instead.
func (*GetAuthorizerAccessTokenByAppIdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{483}
}

func (x *GetAuthorizerAccessTokenByAppIdRequest) GetAuthorizerAppId() string {
	if x != nil {
		return x.AuthorizerAppId
	}
	return ""
}

func (x *GetAuthorizerAccessTokenByAppIdRequest) GetRetry() int32 {
	if x != nil {
		return x.Retry
	}
	return 0
}

type GetAuthorizerAccessTokenByAppIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizerAccessToken string `protobuf:"bytes,1,opt,name=authorizerAccessToken,proto3" json:"authorizerAccessToken,omitempty"` // 授权方访问令牌
}

func (x *GetAuthorizerAccessTokenByAppIdResp) Reset() {
	*x = GetAuthorizerAccessTokenByAppIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[484]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizerAccessTokenByAppIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizerAccessTokenByAppIdResp) ProtoMessage() {}

func (x *GetAuthorizerAccessTokenByAppIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[484]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizerAccessTokenByAppIdResp.ProtoReflect.Descriptor instead.
func (*GetAuthorizerAccessTokenByAppIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{484}
}

func (x *GetAuthorizerAccessTokenByAppIdResp) GetAuthorizerAccessToken() string {
	if x != nil {
		return x.AuthorizerAccessToken
	}
	return ""
}

type SCANRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUserName   string `protobuf:"bytes,1,opt,name=toUserName,proto3" json:"toUserName,omitempty"`     // 接收者用户名
	FromUserName string `protobuf:"bytes,2,opt,name=fromUserName,proto3" json:"fromUserName,omitempty"` // 发送者用户名
	EventKey     string `protobuf:"bytes,3,opt,name=eventKey,proto3" json:"eventKey,omitempty"`         // 事件键值
}

func (x *SCANRequest) Reset() {
	*x = SCANRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[485]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCANRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCANRequest) ProtoMessage() {}

func (x *SCANRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[485]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCANRequest.ProtoReflect.Descriptor instead.
func (*SCANRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{485}
}

func (x *SCANRequest) GetToUserName() string {
	if x != nil {
		return x.ToUserName
	}
	return ""
}

func (x *SCANRequest) GetFromUserName() string {
	if x != nil {
		return x.FromUserName
	}
	return ""
}

func (x *SCANRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

type SCANResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SCANResp) Reset() {
	*x = SCANResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[486]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCANResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCANResp) ProtoMessage() {}

func (x *SCANResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[486]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCANResp.ProtoReflect.Descriptor instead.
func (*SCANResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{486}
}

type SCANByRecordIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUserName   string `protobuf:"bytes,1,opt,name=toUserName,proto3" json:"toUserName,omitempty"`     // 接收者用户名
	FromUserName string `protobuf:"bytes,2,opt,name=fromUserName,proto3" json:"fromUserName,omitempty"` // 发送者用户名
	EventKey     string `protobuf:"bytes,3,opt,name=eventKey,proto3" json:"eventKey,omitempty"`         // 事件键值
}

func (x *SCANByRecordIdRequest) Reset() {
	*x = SCANByRecordIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[487]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCANByRecordIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCANByRecordIdRequest) ProtoMessage() {}

func (x *SCANByRecordIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[487]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCANByRecordIdRequest.ProtoReflect.Descriptor instead.
func (*SCANByRecordIdRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{487}
}

func (x *SCANByRecordIdRequest) GetToUserName() string {
	if x != nil {
		return x.ToUserName
	}
	return ""
}

func (x *SCANByRecordIdRequest) GetFromUserName() string {
	if x != nil {
		return x.FromUserName
	}
	return ""
}

func (x *SCANByRecordIdRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

type SCANByRecordIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SCANByRecordIdResp) Reset() {
	*x = SCANByRecordIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[488]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCANByRecordIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCANByRecordIdResp) ProtoMessage() {}

func (x *SCANByRecordIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[488]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCANByRecordIdResp.ProtoReflect.Descriptor instead.
func (*SCANByRecordIdResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{488}
}

type AddWechatOfficialAccountPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *WechatOfficialAccountPlatform `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 微信公众号平台信息
}

func (x *AddWechatOfficialAccountPlatformReq) Reset() {
	*x = AddWechatOfficialAccountPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[489]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWechatOfficialAccountPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWechatOfficialAccountPlatformReq) ProtoMessage() {}

func (x *AddWechatOfficialAccountPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[489]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWechatOfficialAccountPlatformReq.ProtoReflect.Descriptor instead.
func (*AddWechatOfficialAccountPlatformReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{489}
}

func (x *AddWechatOfficialAccountPlatformReq) GetInfo() *WechatOfficialAccountPlatform {
	if x != nil {
		return x.Info
	}
	return nil
}

type AddWechatOfficialAccountPlatformResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AddWechatOfficialAccountPlatformResp) Reset() {
	*x = AddWechatOfficialAccountPlatformResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[490]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWechatOfficialAccountPlatformResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWechatOfficialAccountPlatformResp) ProtoMessage() {}

func (x *AddWechatOfficialAccountPlatformResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[490]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWechatOfficialAccountPlatformResp.ProtoReflect.Descriptor instead.
func (*AddWechatOfficialAccountPlatformResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{490}
}

func (x *AddWechatOfficialAccountPlatformResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type DictItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              // 名称
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`              // 描述
	BusinessId int32  `protobuf:"varint,4,opt,name=businessId,proto3" json:"businessId,omitempty"` // 商家ID
	ShopId     int32  `protobuf:"varint,5,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 店铺ID
	CreateTime string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	UpdateTime string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  // 更新时间
}

func (x *DictItem) Reset() {
	*x = DictItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[491]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItem) ProtoMessage() {}

func (x *DictItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[491]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItem.ProtoReflect.Descriptor instead.
func (*DictItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{491}
}

func (x *DictItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DictItem) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *DictItem) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *DictItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DictItem) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type DictBrief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              // 名称
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`              // 描述
	BusinessId int32  `protobuf:"varint,4,opt,name=businessId,proto3" json:"businessId,omitempty"` // 商家ID
	ShopId     int32  `protobuf:"varint,5,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 店铺ID
}

func (x *DictBrief) Reset() {
	*x = DictBrief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[492]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictBrief) ProtoMessage() {}

func (x *DictBrief) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[492]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictBrief.ProtoReflect.Descriptor instead.
func (*DictBrief) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{492}
}

func (x *DictBrief) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictBrief) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictBrief) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DictBrief) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *DictBrief) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type AddDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictType DictType   `protobuf:"varint,1,opt,name=dictType,proto3,enum=manage.DictType" json:"dictType,omitempty"` // 字典类型
	Brief    *DictBrief `protobuf:"bytes,2,opt,name=brief,proto3" json:"brief,omitempty"`                             // 字典简要信息
}

func (x *AddDictReq) Reset() {
	*x = AddDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[493]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictReq) ProtoMessage() {}

func (x *AddDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[493]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictReq.ProtoReflect.Descriptor instead.
func (*AddDictReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{493}
}

func (x *AddDictReq) GetDictType() DictType {
	if x != nil {
		return x.DictType
	}
	return DictType_UnKnowDict
}

func (x *AddDictReq) GetBrief() *DictBrief {
	if x != nil {
		return x.Brief
	}
	return nil
}

type AddDictRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`   // 错误码
	Id   uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`    // ID
	Name string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"` // 名称
}

func (x *AddDictRsp) Reset() {
	*x = AddDictRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[494]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictRsp) ProtoMessage() {}

func (x *AddDictRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[494]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictRsp.ProtoReflect.Descriptor instead.
func (*AddDictRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{494}
}

func (x *AddDictRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *AddDictRsp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddDictRsp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DelDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictType   DictType `protobuf:"varint,1,opt,name=dictType,proto3,enum=manage.DictType" json:"dictType,omitempty"` // 字典类型
	Ids        []uint64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`                         // ID列表
	BusinessId int32    `protobuf:"varint,3,opt,name=businessId,proto3" json:"businessId,omitempty"`                  // 商家ID
	ShopId     int32    `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`                          // 店铺ID
}

func (x *DelDictReq) Reset() {
	*x = DelDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[495]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDictReq) ProtoMessage() {}

func (x *DelDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[495]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDictReq.ProtoReflect.Descriptor instead.
func (*DelDictReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{495}
}

func (x *DelDictReq) GetDictType() DictType {
	if x != nil {
		return x.DictType
	}
	return DictType_UnKnowDict
}

func (x *DelDictReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DelDictReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *DelDictReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type DelDictRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelDictRsp) Reset() {
	*x = DelDictRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[496]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDictRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDictRsp) ProtoMessage() {}

func (x *DelDictRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[496]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDictRsp.ProtoReflect.Descriptor instead.
func (*DelDictRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{496}
}

func (x *DelDictRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type ModDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictType DictType   `protobuf:"varint,1,opt,name=dictType,proto3,enum=manage.DictType" json:"dictType,omitempty"` // 字典类型
	Brief    *DictBrief `protobuf:"bytes,2,opt,name=brief,proto3" json:"brief,omitempty"`                             // 字典简要信息
}

func (x *ModDictReq) Reset() {
	*x = ModDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[497]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModDictReq) ProtoMessage() {}

func (x *ModDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[497]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModDictReq.ProtoReflect.Descriptor instead.
func (*ModDictReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{497}
}

func (x *ModDictReq) GetDictType() DictType {
	if x != nil {
		return x.DictType
	}
	return DictType_UnKnowDict
}

func (x *ModDictReq) GetBrief() *DictBrief {
	if x != nil {
		return x.Brief
	}
	return nil
}

type ModDictRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModDictRsp) Reset() {
	*x = ModDictRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[498]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModDictRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModDictRsp) ProtoMessage() {}

func (x *ModDictRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[498]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModDictRsp.ProtoReflect.Descriptor instead.
func (*ModDictRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{498}
}

func (x *ModDictRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type ListDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictType   DictType          `protobuf:"varint,1,opt,name=dictType,proto3,enum=manage.DictType" json:"dictType,omitempty"` // 字典类型
	Filters    []*RunTimeFilters `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`                         // 运行时过滤器
	FindOption *FindOptionCommon `protobuf:"bytes,3,opt,name=findOption,proto3" json:"findOption,omitempty"`                   // 查找选项
}

func (x *ListDictReq) Reset() {
	*x = ListDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[499]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictReq) ProtoMessage() {}

func (x *ListDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[499]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictReq.ProtoReflect.Descriptor instead.
func (*ListDictReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{499}
}

func (x *ListDictReq) GetDictType() DictType {
	if x != nil {
		return x.DictType
	}
	return DictType_UnKnowDict
}

func (x *ListDictReq) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListDictReq) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ListDictRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*DictItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 字典信息列表
}

func (x *ListDictRsp) Reset() {
	*x = ListDictRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[500]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictRsp) ProtoMessage() {}

func (x *ListDictRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[500]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictRsp.ProtoReflect.Descriptor instead.
func (*ListDictRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{500}
}

func (x *ListDictRsp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDictRsp) GetList() []*DictItem {
	if x != nil {
		return x.List
	}
	return nil
}

type AddThemeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err     *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`         // 错误码
	Version string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // 版本号
}

func (x *AddThemeRsp) Reset() {
	*x = AddThemeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[501]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddThemeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddThemeRsp) ProtoMessage() {}

func (x *AddThemeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[501]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddThemeRsp.ProtoReflect.Descriptor instead.
func (*AddThemeRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{501}
}

func (x *AddThemeRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *AddThemeRsp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DelThemeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelThemeRsp) Reset() {
	*x = DelThemeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[502]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelThemeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelThemeRsp) ProtoMessage() {}

func (x *DelThemeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[502]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelThemeRsp.ProtoReflect.Descriptor instead.
func (*DelThemeRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{502}
}

func (x *DelThemeRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type ModThemeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`                // 错误码
	Id         uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Status     int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`         // 状态
	BusinessId int32    `protobuf:"varint,4,opt,name=businessId,proto3" json:"businessId,omitempty"` // 商家ID
	ShopId     int32    `protobuf:"varint,5,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 店铺ID
}

func (x *ModThemeReq) Reset() {
	*x = ModThemeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[503]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModThemeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModThemeReq) ProtoMessage() {}

func (x *ModThemeReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[503]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModThemeReq.ProtoReflect.Descriptor instead.
func (*ModThemeReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{503}
}

func (x *ModThemeReq) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ModThemeReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModThemeReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModThemeReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *ModThemeReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type ModThemeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModThemeRsp) Reset() {
	*x = ModThemeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[504]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModThemeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModThemeRsp) ProtoMessage() {}

func (x *ModThemeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[504]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModThemeRsp.ProtoReflect.Descriptor instead.
func (*ModThemeRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{504}
}

func (x *ModThemeRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type StandbyTheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              // 名称
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`              // 描述
	Version    string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`        // 版本号
	Themes     string `protobuf:"bytes,5,opt,name=themes,proto3" json:"themes,omitempty"`          // 主题
	Video      string `protobuf:"bytes,6,opt,name=video,proto3" json:"video,omitempty"`            // 视频
	Status     int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`         // 状态
	Secs       int32  `protobuf:"varint,8,opt,name=secs,proto3" json:"secs,omitempty"`             // 秒数
	CreateTime string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`  // 创建时间
	UpdateTime string `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"` // 更新时间
}

func (x *StandbyTheme) Reset() {
	*x = StandbyTheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[505]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandbyTheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandbyTheme) ProtoMessage() {}

func (x *StandbyTheme) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[505]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandbyTheme.ProtoReflect.Descriptor instead.
func (*StandbyTheme) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{505}
}

func (x *StandbyTheme) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StandbyTheme) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StandbyTheme) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *StandbyTheme) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StandbyTheme) GetThemes() string {
	if x != nil {
		return x.Themes
	}
	return ""
}

func (x *StandbyTheme) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *StandbyTheme) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StandbyTheme) GetSecs() int32 {
	if x != nil {
		return x.Secs
	}
	return 0
}

func (x *StandbyTheme) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *StandbyTheme) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type ListThemeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项
}

func (x *ListThemeReq) Reset() {
	*x = ListThemeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[506]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThemeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThemeReq) ProtoMessage() {}

func (x *ListThemeReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[506]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThemeReq.ProtoReflect.Descriptor instead.
func (*ListThemeReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{506}
}

func (x *ListThemeReq) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListThemeReq) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ListThemeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err          *ErrCode        `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`                    // 错误码
	ThemeList    []*StandbyTheme `protobuf:"bytes,2,rep,name=themeList,proto3" json:"themeList,omitempty"`        // 主题信息列表
	Total        int32           `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`               // 总数
	NumOnShelves int32           `protobuf:"varint,4,opt,name=numOnShelves,proto3" json:"numOnShelves,omitempty"` // 上架数量
}

func (x *ListThemeRsp) Reset() {
	*x = ListThemeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[507]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThemeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThemeRsp) ProtoMessage() {}

func (x *ListThemeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[507]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThemeRsp.ProtoReflect.Descriptor instead.
func (*ListThemeRsp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{507}
}

func (x *ListThemeRsp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ListThemeRsp) GetThemeList() []*StandbyTheme {
	if x != nil {
		return x.ThemeList
	}
	return nil
}

func (x *ListThemeRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListThemeRsp) GetNumOnShelves() int32 {
	if x != nil {
		return x.NumOnShelves
	}
	return 0
}

type GetOssInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOssInfoRequest) Reset() {
	*x = GetOssInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[508]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOssInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOssInfoRequest) ProtoMessage() {}

func (x *GetOssInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[508]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOssInfoRequest.ProtoReflect.Descriptor instead.
func (*GetOssInfoRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{508}
}

type GetOssInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err             *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`                         // 错误码
	AccessKeyId     string   `protobuf:"bytes,2,opt,name=accessKeyId,proto3" json:"accessKeyId,omitempty"`         // 访问密钥ID
	AccessKeySecret string   `protobuf:"bytes,3,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"` // 访问密钥密钥
	StsToken        string   `protobuf:"bytes,4,opt,name=stsToken,proto3" json:"stsToken,omitempty"`               // STS令牌
}

func (x *GetOssInfoResp) Reset() {
	*x = GetOssInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[509]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOssInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOssInfoResp) ProtoMessage() {}

func (x *GetOssInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[509]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOssInfoResp.ProtoReflect.Descriptor instead.
func (*GetOssInfoResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{509}
}

func (x *GetOssInfoResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetOssInfoResp) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *GetOssInfoResp) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *GetOssInfoResp) GetStsToken() string {
	if x != nil {
		return x.StsToken
	}
	return ""
}

type ExportDeviceUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters       []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`              // 运行时过滤器
	IsAllBusiness bool              `protobuf:"varint,2,opt,name=isAllBusiness,proto3" json:"isAllBusiness,omitempty"` // 是否所有业务
	IsAllShop     bool              `protobuf:"varint,3,opt,name=isAllShop,proto3" json:"isAllShop,omitempty"`         // 是否所有店铺
	FindOption    *FindOptionCommon `protobuf:"bytes,4,opt,name=findOption,proto3" json:"findOption,omitempty"`        // 查找选项
}

func (x *ExportDeviceUserRequest) Reset() {
	*x = ExportDeviceUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[510]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportDeviceUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDeviceUserRequest) ProtoMessage() {}

func (x *ExportDeviceUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[510]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportDeviceUserRequest.ProtoReflect.Descriptor instead.
func (*ExportDeviceUserRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{510}
}

func (x *ExportDeviceUserRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ExportDeviceUserRequest) GetIsAllBusiness() bool {
	if x != nil {
		return x.IsAllBusiness
	}
	return false
}

func (x *ExportDeviceUserRequest) GetIsAllShop() bool {
	if x != nil {
		return x.IsAllShop
	}
	return false
}

func (x *ExportDeviceUserRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ExportDeviceUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadUrl string   `protobuf:"bytes,1,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"` // 下载链接
	Err         *ErrCode `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`                 // 错误码
}

func (x *ExportDeviceUserResp) Reset() {
	*x = ExportDeviceUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[511]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportDeviceUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDeviceUserResp) ProtoMessage() {}

func (x *ExportDeviceUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[511]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportDeviceUserResp.ProtoReflect.Descriptor instead.
func (*ExportDeviceUserResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{511}
}

func (x *ExportDeviceUserResp) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *ExportDeviceUserResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type ExportExportMeasureSkinRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters       []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`              // 运行时过滤器
	IsAllBusiness bool              `protobuf:"varint,2,opt,name=isAllBusiness,proto3" json:"isAllBusiness,omitempty"` // 是否所有业务
	IsAllShop     bool              `protobuf:"varint,3,opt,name=isAllShop,proto3" json:"isAllShop,omitempty"`         // 是否所有店铺
	FindOption    *FindOptionCommon `protobuf:"bytes,4,opt,name=findOption,proto3" json:"findOption,omitempty"`        // 查找选项
}

func (x *ExportExportMeasureSkinRecordRequest) Reset() {
	*x = ExportExportMeasureSkinRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[512]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportExportMeasureSkinRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportExportMeasureSkinRecordRequest) ProtoMessage() {}

func (x *ExportExportMeasureSkinRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[512]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportExportMeasureSkinRecordRequest.ProtoReflect.Descriptor instead.
func (*ExportExportMeasureSkinRecordRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{512}
}

func (x *ExportExportMeasureSkinRecordRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ExportExportMeasureSkinRecordRequest) GetIsAllBusiness() bool {
	if x != nil {
		return x.IsAllBusiness
	}
	return false
}

func (x *ExportExportMeasureSkinRecordRequest) GetIsAllShop() bool {
	if x != nil {
		return x.IsAllShop
	}
	return false
}

func (x *ExportExportMeasureSkinRecordRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ExportExportMeasureSkinRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadUrl string   `protobuf:"bytes,1,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"` // 下载链接
	Err         *ErrCode `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`                 // 错误码
}

func (x *ExportExportMeasureSkinRecordResp) Reset() {
	*x = ExportExportMeasureSkinRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[513]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportExportMeasureSkinRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportExportMeasureSkinRecordResp) ProtoMessage() {}

func (x *ExportExportMeasureSkinRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[513]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportExportMeasureSkinRecordResp.ProtoReflect.Descriptor instead.
func (*ExportExportMeasureSkinRecordResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{513}
}

func (x *ExportExportMeasureSkinRecordResp) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *ExportExportMeasureSkinRecordResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type AddThemeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`              // 名称
	Desc       string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`              // 描述
	Themes     string `protobuf:"bytes,3,opt,name=themes,proto3" json:"themes,omitempty"`          // 主题
	Video      string `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`            // 视频
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`         // 状态
	Secs       int32  `protobuf:"varint,6,opt,name=secs,proto3" json:"secs,omitempty"`             // 秒数
	BusinessId int32  `protobuf:"varint,7,opt,name=businessId,proto3" json:"businessId,omitempty"` // 商家ID
	ShopId     int32  `protobuf:"varint,8,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 店铺ID
}

func (x *AddThemeReq) Reset() {
	*x = AddThemeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[514]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddThemeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddThemeReq) ProtoMessage() {}

func (x *AddThemeReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[514]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddThemeReq.ProtoReflect.Descriptor instead.
func (*AddThemeReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{514}
}

func (x *AddThemeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddThemeReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddThemeReq) GetThemes() string {
	if x != nil {
		return x.Themes
	}
	return ""
}

func (x *AddThemeReq) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *AddThemeReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddThemeReq) GetSecs() int32 {
	if x != nil {
		return x.Secs
	}
	return 0
}

func (x *AddThemeReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *AddThemeReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type DelThemeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // ID
	BusinessId int32  `protobuf:"varint,2,opt,name=businessId,proto3" json:"businessId,omitempty"` // 商家ID
	ShopId     int32  `protobuf:"varint,3,opt,name=shopId,proto3" json:"shopId,omitempty"`         // 店铺ID
}

func (x *DelThemeReq) Reset() {
	*x = DelThemeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[515]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelThemeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelThemeReq) ProtoMessage() {}

func (x *DelThemeReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[515]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelThemeReq.ProtoReflect.Descriptor instead.
func (*DelThemeReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{515}
}

func (x *DelThemeReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelThemeReq) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *DelThemeReq) GetShopId() int32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type SystemSayingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // ID
	Title            string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                        // 标题
	Tags             string `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`                          // 标签
	Body             string `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`                          // 正文
	LikeCount        int64  `protobuf:"varint,6,opt,name=likeCount,proto3" json:"likeCount,omitempty"`               // 点赞数
	StemFrom         string `protobuf:"bytes,7,opt,name=stemFrom,proto3" json:"stemFrom,omitempty"`                  // 来源
	SuitableAge      string `protobuf:"bytes,8,opt,name=suitableAge,proto3" json:"suitableAge,omitempty"`            // 适用年龄
	SuitableSex      string `protobuf:"bytes,9,opt,name=suitableSex,proto3" json:"suitableSex,omitempty"`            // 适用性别
	CollectCount     int64  `protobuf:"varint,10,opt,name=collectCount,proto3" json:"collectCount,omitempty"`        // 收藏数
	LiteratureAuthor string `protobuf:"bytes,11,opt,name=literatureAuthor,proto3" json:"literatureAuthor,omitempty"` // 文学作者
	RecommendStatus  bool   `protobuf:"varint,12,opt,name=recommendStatus,proto3" json:"recommendStatus,omitempty"`  // 推荐状态
	CreateTime       string `protobuf:"bytes,13,opt,name=createTime,proto3" json:"createTime,omitempty"`             // 创建时间
	UpdateTime       string `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`             // 更新时间
}

func (x *SystemSayingInfo) Reset() {
	*x = SystemSayingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[516]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemSayingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemSayingInfo) ProtoMessage() {}

func (x *SystemSayingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[516]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemSayingInfo.ProtoReflect.Descriptor instead.
func (*SystemSayingInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{516}
}

func (x *SystemSayingInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SystemSayingInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SystemSayingInfo) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *SystemSayingInfo) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *SystemSayingInfo) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *SystemSayingInfo) GetStemFrom() string {
	if x != nil {
		return x.StemFrom
	}
	return ""
}

func (x *SystemSayingInfo) GetSuitableAge() string {
	if x != nil {
		return x.SuitableAge
	}
	return ""
}

func (x *SystemSayingInfo) GetSuitableSex() string {
	if x != nil {
		return x.SuitableSex
	}
	return ""
}

func (x *SystemSayingInfo) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *SystemSayingInfo) GetLiteratureAuthor() string {
	if x != nil {
		return x.LiteratureAuthor
	}
	return ""
}

func (x *SystemSayingInfo) GetRecommendStatus() bool {
	if x != nil {
		return x.RecommendStatus
	}
	return false
}

func (x *SystemSayingInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SystemSayingInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type ListSystemSayingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项
}

func (x *ListSystemSayingRequest) Reset() {
	*x = ListSystemSayingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[517]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemSayingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemSayingRequest) ProtoMessage() {}

func (x *ListSystemSayingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[517]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemSayingRequest.ProtoReflect.Descriptor instead.
func (*ListSystemSayingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{517}
}

func (x *ListSystemSayingRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListSystemSayingRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

type ListSystemSayingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*SystemSayingInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 系统说法信息列表
}

func (x *ListSystemSayingResponse) Reset() {
	*x = ListSystemSayingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[518]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemSayingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemSayingResponse) ProtoMessage() {}

func (x *ListSystemSayingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[518]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemSayingResponse.ProtoReflect.Descriptor instead.
func (*ListSystemSayingResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{518}
}

func (x *ListSystemSayingResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSystemSayingResponse) GetList() []*SystemSayingInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type AddSystemSayingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SystemSayingInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` // 系统说法信息
}

func (x *AddSystemSayingRequest) Reset() {
	*x = AddSystemSayingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[519]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSystemSayingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSystemSayingRequest) ProtoMessage() {}

func (x *AddSystemSayingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[519]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSystemSayingRequest.ProtoReflect.Descriptor instead.
func (*AddSystemSayingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{519}
}

func (x *AddSystemSayingRequest) GetInfo() *SystemSayingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type AddSystemSayingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AddSystemSayingResponse) Reset() {
	*x = AddSystemSayingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[520]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSystemSayingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSystemSayingResponse) ProtoMessage() {}

func (x *AddSystemSayingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[520]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSystemSayingResponse.ProtoReflect.Descriptor instead.
func (*AddSystemSayingResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{520}
}

func (x *AddSystemSayingResponse) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

type DelSystemSayingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"` // ID列表
}

func (x *DelSystemSayingRequest) Reset() {
	*x = DelSystemSayingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[521]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSystemSayingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSystemSayingRequest) ProtoMessage() {}

func (x *DelSystemSayingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[521]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSystemSayingRequest.ProtoReflect.Descriptor instead.
func (*DelSystemSayingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{521}
}

func (x *DelSystemSayingRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DelSystemSayingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelSystemSayingResponse) Reset() {
	*x = DelSystemSayingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[522]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSystemSayingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSystemSayingResponse) ProtoMessage() {}

func (x *DelSystemSayingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[522]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSystemSayingResponse.ProtoReflect.Descriptor instead.
func (*DelSystemSayingResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{522}
}

func (x *DelSystemSayingResponse) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 修改系统说法请求
type ModSystemSayingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SystemSayingInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 系统说法信息
}

func (x *ModSystemSayingRequest) Reset() {
	*x = ModSystemSayingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[523]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSystemSayingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSystemSayingRequest) ProtoMessage() {}

func (x *ModSystemSayingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[523]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSystemSayingRequest.ProtoReflect.Descriptor instead.
func (*ModSystemSayingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{523}
}

func (x *ModSystemSayingRequest) GetInfo() *SystemSayingInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改系统说法响应
type ModSystemSayingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModSystemSayingResponse) Reset() {
	*x = ModSystemSayingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[524]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSystemSayingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSystemSayingResponse) ProtoMessage() {}

func (x *ModSystemSayingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[524]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSystemSayingResponse.ProtoReflect.Descriptor instead.
func (*ModSystemSayingResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{524}
}

func (x *ModSystemSayingResponse) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 开关系统说法请求
type OnOffSystemSayingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  // ID
	RecommendStatus bool  `protobuf:"varint,2,opt,name=recommend_status,json=recommendStatus,proto3" json:"recommend_status,omitempty"` // 推荐状态
}

func (x *OnOffSystemSayingRequest) Reset() {
	*x = OnOffSystemSayingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[525]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnOffSystemSayingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnOffSystemSayingRequest) ProtoMessage() {}

func (x *OnOffSystemSayingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[525]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnOffSystemSayingRequest.ProtoReflect.Descriptor instead.
func (*OnOffSystemSayingRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{525}
}

func (x *OnOffSystemSayingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OnOffSystemSayingRequest) GetRecommendStatus() bool {
	if x != nil {
		return x.RecommendStatus
	}
	return false
}

// 开关系统说法响应
type OnOffSystemSayingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *OnOffSystemSayingResponse) Reset() {
	*x = OnOffSystemSayingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[526]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnOffSystemSayingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnOffSystemSayingResponse) ProtoMessage() {}

func (x *OnOffSystemSayingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[526]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnOffSystemSayingResponse.ProtoReflect.Descriptor instead.
func (*OnOffSystemSayingResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{526}
}

func (x *OnOffSystemSayingResponse) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 查询应用列表请求
type ListSystemEnumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`                         // 运行时过滤器
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=find_option,json=findOption,proto3" json:"find_option,omitempty"` // 查找选项
}

func (x *ListSystemEnumRequest) Reset() {
	*x = ListSystemEnumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[527]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemEnumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemEnumRequest) ProtoMessage() {}

func (x *ListSystemEnumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[527]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemEnumRequest.ProtoReflect.Descriptor instead.
func (*ListSystemEnumRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{527}
}

func (x *ListSystemEnumRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListSystemEnumRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询应用列表响应
type ListSystemEnumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*ListSystemEnumRespItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 应用列表
}

func (x *ListSystemEnumResp) Reset() {
	*x = ListSystemEnumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[528]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemEnumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemEnumResp) ProtoMessage() {}

func (x *ListSystemEnumResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[528]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemEnumResp.ProtoReflect.Descriptor instead.
func (*ListSystemEnumResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{528}
}

func (x *ListSystemEnumResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSystemEnumResp) GetList() []*ListSystemEnumRespItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询应用列表响应项
type ListSystemEnumRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  // ID
	Type       uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                              // 类型
	Label      string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`                             // 标签
	Value      string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`                             // 值
	CreateTime string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
	UpdateTime string `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 更新时间
}

func (x *ListSystemEnumRespItem) Reset() {
	*x = ListSystemEnumRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[529]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemEnumRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemEnumRespItem) ProtoMessage() {}

func (x *ListSystemEnumRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[529]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemEnumRespItem.ProtoReflect.Descriptor instead.
func (*ListSystemEnumRespItem) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{529}
}

func (x *ListSystemEnumRespItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListSystemEnumRespItem) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ListSystemEnumRespItem) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ListSystemEnumRespItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ListSystemEnumRespItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListSystemEnumRespItem) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 课程分类ID和名称信息
type CourseClassIdNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseClassId   int64  `protobuf:"varint,1,opt,name=courseClassId,proto3" json:"courseClassId,omitempty"`    // 课程分类ID
	CourseClassName string `protobuf:"bytes,2,opt,name=courseClassName,proto3" json:"courseClassName,omitempty"` // 课程分类名称
}

func (x *CourseClassIdNameInfo) Reset() {
	*x = CourseClassIdNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[530]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseClassIdNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseClassIdNameInfo) ProtoMessage() {}

func (x *CourseClassIdNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[530]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseClassIdNameInfo.ProtoReflect.Descriptor instead.
func (*CourseClassIdNameInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{530}
}

func (x *CourseClassIdNameInfo) GetCourseClassId() int64 {
	if x != nil {
		return x.CourseClassId
	}
	return 0
}

func (x *CourseClassIdNameInfo) GetCourseClassName() string {
	if x != nil {
		return x.CourseClassName
	}
	return ""
}

// 皮肤类型信息
type SkinTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // ID
	MinAge     int32  `protobuf:"varint,2,opt,name=minAge,proto3" json:"minAge,omitempty"`        // 最小年龄
	MaxAge     int32  `protobuf:"varint,3,opt,name=maxAge,proto3" json:"maxAge,omitempty"`        // 最大年龄
	Score      int32  `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`          // 评分
	Status     bool   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`        // 状态
	SkinType   string `protobuf:"bytes,6,opt,name=skinType,proto3" json:"skinType,omitempty"`     // 皮肤类型
	CreateTime string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"` // 创建时间
	UpdateTime string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"` // 更新时间
}

func (x *SkinTypeInfo) Reset() {
	*x = SkinTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[531]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkinTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkinTypeInfo) ProtoMessage() {}

func (x *SkinTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[531]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkinTypeInfo.ProtoReflect.Descriptor instead.
func (*SkinTypeInfo) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{531}
}

func (x *SkinTypeInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkinTypeInfo) GetMinAge() int32 {
	if x != nil {
		return x.MinAge
	}
	return 0
}

func (x *SkinTypeInfo) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *SkinTypeInfo) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SkinTypeInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SkinTypeInfo) GetSkinType() string {
	if x != nil {
		return x.SkinType
	}
	return ""
}

func (x *SkinTypeInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SkinTypeInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 查询皮肤类型请求
type ListSkinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*RunTimeFilters `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`       // 运行时过滤器
	FindOption *FindOptionCommon `protobuf:"bytes,2,opt,name=findOption,proto3" json:"findOption,omitempty"` // 查找选项
}

func (x *ListSkinTypeRequest) Reset() {
	*x = ListSkinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[532]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinTypeRequest) ProtoMessage() {}

func (x *ListSkinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[532]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinTypeRequest.ProtoReflect.Descriptor instead.
func (*ListSkinTypeRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{532}
}

func (x *ListSkinTypeRequest) GetFilters() []*RunTimeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListSkinTypeRequest) GetFindOption() *FindOptionCommon {
	if x != nil {
		return x.FindOption
	}
	return nil
}

// 查询皮肤类型响应
type ListSkinTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*SkinTypeInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 皮肤类型列表
}

func (x *ListSkinTypeResponse) Reset() {
	*x = ListSkinTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[533]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSkinTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkinTypeResponse) ProtoMessage() {}

func (x *ListSkinTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[533]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkinTypeResponse.ProtoReflect.Descriptor instead.
func (*ListSkinTypeResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{533}
}

func (x *ListSkinTypeResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSkinTypeResponse) GetList() []*SkinTypeInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加皮肤类型请求
type AddSkinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SkinTypeInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` // 皮肤类型信息
}

func (x *AddSkinTypeRequest) Reset() {
	*x = AddSkinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[534]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSkinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSkinTypeRequest) ProtoMessage() {}

func (x *AddSkinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[534]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSkinTypeRequest.ProtoReflect.Descriptor instead.
func (*AddSkinTypeRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{534}
}

func (x *AddSkinTypeRequest) GetInfo() *SkinTypeInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 添加皮肤类型响应
type AddSkinTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *AddSkinTypeResponse) Reset() {
	*x = AddSkinTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[535]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSkinTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSkinTypeResponse) ProtoMessage() {}

func (x *AddSkinTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[535]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSkinTypeResponse.ProtoReflect.Descriptor instead.
func (*AddSkinTypeResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{535}
}

func (x *AddSkinTypeResponse) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 删除皮肤类型请求
type DelSkinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"` // ID列表
}

func (x *DelSkinTypeRequest) Reset() {
	*x = DelSkinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[536]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSkinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSkinTypeRequest) ProtoMessage() {}

func (x *DelSkinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[536]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSkinTypeRequest.ProtoReflect.Descriptor instead.
func (*DelSkinTypeRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{536}
}

func (x *DelSkinTypeRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除皮肤类型响应
type DelSkinTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *DelSkinTypeResponse) Reset() {
	*x = DelSkinTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[537]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSkinTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSkinTypeResponse) ProtoMessage() {}

func (x *DelSkinTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[537]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSkinTypeResponse.ProtoReflect.Descriptor instead.
func (*DelSkinTypeResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{537}
}

func (x *DelSkinTypeResponse) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 修改皮肤类型请求
type ModSkinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SkinTypeInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` // 皮肤类型信息
}

func (x *ModSkinTypeRequest) Reset() {
	*x = ModSkinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[538]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSkinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSkinTypeRequest) ProtoMessage() {}

func (x *ModSkinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[538]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSkinTypeRequest.ProtoReflect.Descriptor instead.
func (*ModSkinTypeRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{538}
}

func (x *ModSkinTypeRequest) GetInfo() *SkinTypeInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 修改皮肤类型响应
type ModSkinTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *ModSkinTypeResponse) Reset() {
	*x = ModSkinTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[539]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModSkinTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModSkinTypeResponse) ProtoMessage() {}

func (x *ModSkinTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[539]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModSkinTypeResponse.ProtoReflect.Descriptor instead.
func (*ModSkinTypeResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{539}
}

func (x *ModSkinTypeResponse) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 开关皮肤类型请求
type OnOffSkinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // ID
	Status bool  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` // 状态
}

func (x *OnOffSkinTypeRequest) Reset() {
	*x = OnOffSkinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[540]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnOffSkinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnOffSkinTypeRequest) ProtoMessage() {}

func (x *OnOffSkinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[540]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnOffSkinTypeRequest.ProtoReflect.Descriptor instead.
func (*OnOffSkinTypeRequest) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{540}
}

func (x *OnOffSkinTypeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OnOffSkinTypeRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// 开关皮肤类型响应
type OnOffSkinTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *OnOffSkinTypeResponse) Reset() {
	*x = OnOffSkinTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[541]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnOffSkinTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnOffSkinTypeResponse) ProtoMessage() {}

func (x *OnOffSkinTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[541]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnOffSkinTypeResponse.ProtoReflect.Descriptor instead.
func (*OnOffSkinTypeResponse) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{541}
}

func (x *OnOffSkinTypeResponse) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

// 获取登录令牌缓存请求
type GetLoginTokenCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户ID
}

func (x *GetLoginTokenCacheReq) Reset() {
	*x = GetLoginTokenCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[542]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginTokenCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginTokenCacheReq) ProtoMessage() {}

func (x *GetLoginTokenCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[542]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginTokenCacheReq.ProtoReflect.Descriptor instead.
func (*GetLoginTokenCacheReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{542}
}

func (x *GetLoginTokenCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 获取登录令牌缓存响应
type GetLoginTokenCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`     // 错误码
	Token string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // 令牌
}

func (x *GetLoginTokenCacheResp) Reset() {
	*x = GetLoginTokenCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[543]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginTokenCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginTokenCacheResp) ProtoMessage() {}

func (x *GetLoginTokenCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[543]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginTokenCacheResp.ProtoReflect.Descriptor instead.
func (*GetLoginTokenCacheResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{543}
}

func (x *GetLoginTokenCacheResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetLoginTokenCacheResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 设置登录令牌缓存请求
type SetLoginTokenCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户ID
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`   // 令牌
}

func (x *SetLoginTokenCacheReq) Reset() {
	*x = SetLoginTokenCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[544]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLoginTokenCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLoginTokenCacheReq) ProtoMessage() {}

func (x *SetLoginTokenCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[544]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLoginTokenCacheReq.ProtoReflect.Descriptor instead.
func (*SetLoginTokenCacheReq) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{544}
}

func (x *SetLoginTokenCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetLoginTokenCacheReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 设置登录令牌缓存响应
type SetLoginTokenCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *ErrCode `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"` // 错误码
}

func (x *SetLoginTokenCacheResp) Reset() {
	*x = SetLoginTokenCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_proto_msgTypes[545]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLoginTokenCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLoginTokenCacheResp) ProtoMessage() {}

func (x *SetLoginTokenCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_manage_proto_msgTypes[545]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLoginTokenCacheResp.ProtoReflect.Descriptor instead.
func (*SetLoginTokenCacheResp) Descriptor() ([]byte, []int) {
	return file_manage_proto_rawDescGZIP(), []int{545}
}

func (x *SetLoginTokenCacheResp) GetErr() *ErrCode {
	if x != nil {
		return x.Err
	}
	return nil
}

var File_manage_proto protoreflect.FileDescriptor

var file_manage_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x9b, 0x04, 0x0a, 0x0b, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0xb6, 0x03, 0x0a, 0x18, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x78,
	0x22, 0xb1, 0x02, 0x0a, 0x1b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x4d, 0x61,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x4d, 0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x53, 0x75,
	0x62, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x53, 0x75, 0x62, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x53, 0x75,
	0x62, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x53, 0x75, 0x62, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xf7,
	0x01, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x83, 0x04, 0x0a, 0x09, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x78, 0x44, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x78, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8a,
	0x02, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xce, 0x04, 0x0a, 0x14,
	0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0xeb, 0x02, 0x0a,
	0x11, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x79, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x79, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x79, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x79, 0x6f, 0x75, 0x5a, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x79, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x79, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x22, 0xd5, 0x03, 0x0a, 0x11, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x32, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x33, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x33, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xd6, 0x02, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x44,
	0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x22, 0x5c, 0x0a, 0x0e, 0x52,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x61,
	0x63, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65,
	0x78, 0x61, 0x63, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x62, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xad, 0x09, 0x0a,
	0x0b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x16,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61,
	0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x79, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x79, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x64, 0x61, 0x79, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x17, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x17, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x32, 0x0a, 0x14, 0x73, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x73, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63,
	0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a,
	0x0a, 0x18, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x18, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x2a, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x2a,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x27, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x65, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x27, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x32, 0x0a, 0x14, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x1c, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x1c, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x18, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x18, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x70, 0x0a, 0x14,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x49,
	0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd1, 0x0d, 0x0a, 0x13, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x51, 0x0a, 0x16, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x16, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x1a, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61,
	0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x1a, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x41, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x15, 0x79,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x15, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x17,
	0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x17, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x14, 0x73, 0x6b, 0x69,
	0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x4f, 0x0a, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x15, 0x63, 0x6f, 0x73,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x51, 0x0a, 0x16, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x16, 0x74,
	0x6f, 0x64, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x18, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x18, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x18,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x18, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x79, 0x0a, 0x2a, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x2a, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x73,
	0x0a, 0x27, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x27, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x18, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x18, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x14, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x14, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x1c, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x1c, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x1c, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x1c, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x14, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x14, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x18, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x18, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35, 0x0a,
	0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x22, 0x3e, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x7d,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb8, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x52, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x68, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x0d, 0x4d, 0x6f,
	0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x73,
	0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x4e, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6c, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa3, 0x01, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x22, 0x30, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0x59, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x32,
	0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x22, 0xbd, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x22, 0x32, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x58, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0x34, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x58, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0x34, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x44, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0x7d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x52, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x28, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x11, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x22, 0x10,
	0x0a, 0x0e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x54, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xac, 0x01, 0x0a, 0x1e, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x1f, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a,
	0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x58,
	0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69,
	0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x74, 0x0a, 0x1e, 0x4d, 0x6f, 0x64, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1d,
	0x0a, 0x1b, 0x4d, 0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x50, 0x0a,
	0x1e, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69,
	0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb2,
	0x01, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x90, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38,
	0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x5e, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x7a, 0x0a, 0x21, 0x4d, 0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x20,
	0x0a, 0x1e, 0x4d, 0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x53, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb7, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x64, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x4d,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x38, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x38, 0x0a,
	0x13, 0x4d, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x4e, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5d, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x60, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x46, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x15, 0x4d, 0x6f,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x37,
	0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x7f, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x22, 0x62, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x84, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x15,
	0x4d, 0x6f, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x14, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x47, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7e, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66,
	0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x0e, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x41, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a,
	0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x40, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0xa2, 0x04, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x44, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x5c, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xe5, 0x02, 0x0a, 0x13, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x32,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x32,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x33, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x33, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x88, 0x01, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a,
	0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x6a, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x18, 0x0a,
	0x16, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x49, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6a, 0x0a, 0x19,
	0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xbf, 0x07, 0x0a, 0x13, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x09,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4a, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e,
	0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x88, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x6a, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x3b, 0x0a,
	0x16, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x6b, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x8a, 0x01, 0x0a, 0x19, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x3b,
	0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x6a, 0x0a, 0x18, 0x55,
	0x70, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x53, 0x6b, 0x69,
	0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x6c, 0x0a, 0x1a, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x19,
	0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x41, 0x0a, 0x1c,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22,
	0x80, 0x01, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x41, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x4c, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x73,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69,
	0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x73, 0x6d,
	0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x66, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x73,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x65,
	0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x73, 0x6d,
	0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x4c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x19,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6c, 0x0a, 0x1a, 0x4d, 0x6f, 0x64,
	0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x73,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x43, 0x6f,
	0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x69, 0x0a, 0x19, 0x55, 0x70, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63,
	0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x12, 0x63, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x6f, 0x73, 0x6d, 0x65,
	0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x55, 0x70, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6b, 0x0a, 0x1b, 0x44, 0x6f, 0x77, 0x6e, 0x43,
	0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63,
	0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x63, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x73, 0x6d,
	0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x85, 0x02, 0x0a, 0x0f, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68,
	0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x01, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x63, 0x68, 0x65,
	0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x63, 0x68,
	0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x62, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50,
	0x68, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x63, 0x68,
	0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x47, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x4d, 0x69, 0x63, 0x68, 0x65,
	0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x62, 0x0a, 0x15, 0x4d, 0x6f,
	0x64, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c,
	0x50, 0x68, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x14,
	0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xbc, 0x02, 0x0a, 0x12, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x73,
	0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x70,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x69, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43,
	0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x87, 0x01,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a,
	0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x17,
	0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x68, 0x0a, 0x18,
	0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69,
	0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x47, 0x0a, 0x17, 0x55, 0x70, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x49, 0x0a, 0x19, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65,
	0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44,
	0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8d, 0x05, 0x0a, 0x15, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x70, 0x70,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x1b,
	0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x07, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c,
	0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x0f,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x61, 0x63, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x52, 0x0a, 0x17, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf4, 0x05, 0x0a, 0x1b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x61, 0x63,
	0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x61, 0x63, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x61, 0x72, 0x65, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x65, 0x70, 0x57, 0x72, 0x69, 0x6e, 0x6b,
	0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64,
	0x65, 0x65, 0x70, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x13, 0x73, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x73, 0x68,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73,
	0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2f, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6f,
	0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x67,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x0a, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x67, 0x22, 0x7c, 0x0a, 0x10,
	0x53, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x79, 0x6d, 0x70,
	0x74, 0x6f, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79,
	0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x06, 0x0a, 0x09, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x6f, 0x72, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x66, 0x6f, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x57,
	0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x32, 0x0a, 0x14, 0x66, 0x6f,
	0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x66, 0x6f, 0x72, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x67, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x57, 0x72, 0x69, 0x6e, 0x6b,
	0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x67, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x57,
	0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x15, 0x67, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x57, 0x72, 0x69, 0x6e,
	0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x62, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x6e, 0x45, 0x79, 0x65, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e,
	0x45, 0x79, 0x65, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x36,
	0x0a, 0x16, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x45, 0x79, 0x65, 0x57, 0x72, 0x69, 0x6e,
	0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16,
	0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x45, 0x79, 0x65, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x45,
	0x79, 0x65, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x79, 0x65, 0x57, 0x72, 0x69,
	0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x45, 0x79, 0x65, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x79, 0x65,
	0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x14,
	0x6e, 0x61, 0x73, 0x6f, 0x66, 0x6f, 0x6c, 0x64, 0x73, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6e, 0x61, 0x73, 0x6f,
	0x66, 0x6f, 0x6c, 0x64, 0x73, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61,
	0x12, 0x34, 0x0a, 0x15, 0x6e, 0x61, 0x73, 0x6f, 0x66, 0x6f, 0x6c, 0x64, 0x73, 0x57, 0x72, 0x69,
	0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x15, 0x6e, 0x61, 0x73, 0x6f, 0x66, 0x6f, 0x6c, 0x64, 0x73, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x72, 0x4d, 0x6f, 0x75,
	0x74, 0x68, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x13, 0x63, 0x6f, 0x72, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x57, 0x72, 0x69,
	0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x72, 0x4d,
	0x6f, 0x75, 0x74, 0x68, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x63, 0x6f, 0x72, 0x4d, 0x6f, 0x75, 0x74, 0x68,
	0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x69, 0x64, 0x65, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x69, 0x64, 0x65, 0x57, 0x72, 0x69, 0x6e, 0x6b,
	0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x69, 0x64, 0x65, 0x57, 0x72,
	0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x73, 0x69, 0x64, 0x65, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x50, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x50,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x50,
	0x6f, 0x72, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xa8, 0x02, 0x0a, 0x26, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x53, 0x75, 0x62, 0x31, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x53, 0x75, 0x62, 0x31,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x53,
	0x75, 0x62, 0x32, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x53, 0x75, 0x62, 0x32, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x22, 0x70, 0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x42, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x46, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x90,
	0x01, 0x0a, 0x2c, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x2b, 0x0a, 0x29, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e,
	0x0a, 0x2c, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2b,
	0x0a, 0x29, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x90, 0x01, 0x0a, 0x2c,
	0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2b,
	0x0a, 0x29, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0xea, 0x04, 0x0a, 0x0e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53,
	0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x44,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x17, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x16, 0x0a, 0x14, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4a, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa3, 0x02, 0x0a,
	0x0b, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x22, 0x37, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x19, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x18, 0x0a,
	0x16, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x70, 0x0a, 0x19, 0x4d, 0x6f, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x6f, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x65, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x53,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0x3b, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xc3, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66,
	0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x57, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x1d, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x14, 0x55,
	0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0x13, 0x0a,
	0x11, 0x55, 0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x62, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0x38, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x22, 0xed, 0x01, 0x0a, 0x07, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x22, 0x31, 0x0a, 0x0b, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x77, 0x69,
	0x73, 0x65, 0x4d, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x07, 0x77, 0x69,
	0x73, 0x65, 0x4d, 0x61, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x57, 0x69, 0x73, 0x65,
	0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x60, 0x0a, 0x15, 0x4d,
	0x6f, 0x64, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x77, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x73,
	0x65, 0x4d, 0x61, 0x6e, 0x52, 0x07, 0x77, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x22, 0x14, 0x0a,
	0x12, 0x4d, 0x6f, 0x64, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x53, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69,
	0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77,
	0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x57,
	0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x33,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x65,
	0x4d, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x73, 0x65, 0x4d,
	0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x01, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x58, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x10, 0x55, 0x70, 0x57, 0x69, 0x73, 0x65, 0x4d,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69, 0x73, 0x65, 0x4d,
	0x61, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x77, 0x69, 0x73, 0x65,
	0x4d, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x57, 0x69, 0x73, 0x65, 0x4d,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x50, 0x0a, 0x12, 0x44, 0x6f, 0x77, 0x6e, 0x57, 0x69,
	0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69,
	0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x77,
	0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e,
	0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xca, 0x01, 0x0a, 0x0a,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x34, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22,
	0x5c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53,
	0x74, 0x65, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4c, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x22, 0xe2, 0x04, 0x0a, 0x06,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x77, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x65, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x74, 0x65, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x6e, 0x64,
	0x73, 0x63, 0x61, 0x70, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x22, 0x3c, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe1,
	0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x11, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0xe1, 0x01, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x4d,
	0x6f, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x56, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7f, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x8f, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4c, 0x0a, 0x22, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x0f, 0x55, 0x70, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x55,
	0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x53, 0x0a, 0x11, 0x44,
	0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x53, 0x65, 0x74,
	0x22, 0x10, 0x0a, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x3d, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x22, 0xaf, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x46, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x11, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xbf, 0x03, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x80, 0x01, 0x0a, 0x1d, 0x4d, 0x6f, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x6f, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x71, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x01,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0e, 0x69, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x69, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x6c, 0x0a, 0x18, 0x55, 0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22,
	0x17, 0x0a, 0x15, 0x55, 0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6e, 0x0a, 0x1a, 0x44, 0x6f, 0x77, 0x6e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x49, 0x64, 0x53, 0x65, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xe2, 0x01, 0x0a, 0x06, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06,
	0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5c, 0x0a, 0x14, 0x4d,
	0x6f, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x6f, 0x64,
	0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x50,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a,
	0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x38,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x0f, 0x55, 0x70, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x55, 0x70, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4d, 0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x46, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x15,
	0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x48, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x83, 0x01, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x5e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x40, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x26, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0xce, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb7, 0x02, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x66, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38,
	0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x86,
	0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a,
	0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x17, 0x41, 0x64, 0x64,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x66, 0x0a, 0x17, 0x4d, 0x6f, 0x64,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x49, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7e, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7a, 0x0a, 0x10,
	0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x22, 0x5d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x59,
	0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x59, 0x6f,
	0x75, 0x5a, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x7d, 0x0a, 0x07, 0x53,
	0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xf3, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x66, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x99, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x85, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38,
	0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x69, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x16, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x62, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x34, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xed, 0x01, 0x0a, 0x0d,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x5e, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x8f, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x12, 0x0a, 0x10, 0x4d, 0x6f,
	0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x54,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x79,
	0x6e, 0x63, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x8d, 0x06, 0x0a, 0x0c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x61, 0x69, 0x6e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x55,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x55, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x77, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x77, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72,
	0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72,
	0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2a,
	0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65,
	0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65,
	0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73,
	0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xa4, 0x03, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x70, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x3e, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x55, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22,
	0x34, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x3e, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66,
	0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x3a, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x34, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x26, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x34,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a,
	0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x42, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a, 0x14, 0x4d,
	0x6f, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x13, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x37, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x7f, 0x0a, 0x17, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x68, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x1d, 0x41,
	0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x54, 0x0a, 0x1d, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x3a, 0x0a, 0x28, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c,
	0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x27,
	0x44, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7f, 0x0a,
	0x27, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x26,
	0x0a, 0x24, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x22, 0x8f, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x1f, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x5a, 0x0a, 0x20, 0x4d, 0x6f, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1f, 0x0a, 0x1d,
	0x4d, 0x6f, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x0a,
	0x20, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x22, 0x39, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x43, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x22, 0x2f, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x33, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x22, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0xd2, 0x01, 0x0a, 0x24, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x73, 0x67, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x4a, 0x0a, 0x25, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x22, 0x77, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4a, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4a, 0x73,
	0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0f, 0x41, 0x70, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x51, 0x0a, 0x10, 0x41, 0x70, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x66, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x66, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0xbf, 0x04,
	0x0a, 0x1d, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x70, 0x70, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0x84, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x39, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x23, 0x4d, 0x6f, 0x64, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x24, 0x4d, 0x6f, 0x64, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0x3f, 0x0a, 0x14, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x15, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x07, 0x41, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x67, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x01, 0x0a, 0x12, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x4d, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x92, 0x01, 0x0a,
	0x14, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x5e, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x46, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x46, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x64, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x45, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x32, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xf5, 0x04, 0x0a, 0x13, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x48, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x66, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53,
	0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x3a, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x67, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e,
	0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x22, 0x86,
	0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e,
	0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x30,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a,
	0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x17, 0x4f,
	0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x19,
	0x0a, 0x17, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x33, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0x7d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x73, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x0e, 0x4d, 0x6f, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x30,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73,
	0x22, 0x33, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xfd, 0x03, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x44, 0x65, 0x73, 0x63, 0x22, 0x7a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x6e, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x57,
	0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61,
	0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x57,
	0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x57, 0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x65, 0x69,
	0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x57, 0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x68, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x22, 0x5b, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a,
	0x0b, 0x53, 0x43, 0x41, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x0a, 0x0a, 0x08,
	0x53, 0x43, 0x41, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x77, 0x0a, 0x15, 0x53, 0x43, 0x41, 0x4e,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x43, 0x41, 0x4e, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x60, 0x0a, 0x23, 0x41, 0x64, 0x64, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x39,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x24, 0x41, 0x64, 0x64,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x22, 0xba, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x7b, 0x0a, 0x09, 0x44, 0x69, 0x63, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x63,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x05, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x22, 0x53, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22,
	0x2f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x22, 0x63, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c,
	0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x05,
	0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x05,
	0x62, 0x72, 0x69, 0x65, 0x66, 0x22, 0x2f, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x44, 0x69, 0x63, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x49, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x4d, 0x6f,
	0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0b,
	0x4d, 0x6f, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xfa,
	0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x63, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a,
	0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x32, 0x0a, 0x09, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x4f, 0x6e, 0x53, 0x68,
	0x65, 0x6c, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d,
	0x4f, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9b,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc9, 0x01, 0x0a,
	0x17, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x38,
	0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x24, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x53,
	0x68, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x53, 0x68, 0x6f, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x68,
	0x0a, 0x21, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x63, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x22, 0x55, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x98, 0x03, 0x0a, 0x10, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x69, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x3c, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0x2a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x3c,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x46, 0x0a, 0x16,
	0x4d, 0x6f, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x3c, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0x55, 0x0a, 0x18, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a, 0x19, 0x4f, 0x6e, 0x4f,
	0x66, 0x66, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x5e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xaa, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x67, 0x0a,
	0x15, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x6b, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x41, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x66,
	0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x26, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x53, 0x6b,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x38, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x3e, 0x0a, 0x12, 0x4d, 0x6f, 0x64,
	0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a, 0x13, 0x4d, 0x6f, 0x64,
	0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0x3e, 0x0a, 0x14, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x15, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22,
	0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x51, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x45, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3b, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x2a, 0x6c, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x78, 0x10, 0x04, 0x2a, 0xa2, 0x01, 0x0a, 0x18, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x72, 0x69, 0x6e, 0x6b, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x6f, 0x72, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x72, 0x65, 0x61, 0x73, 0x65, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x69, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x70, 0x6f, 0x74, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x64, 0x61, 0x63,
	0x6e, 0x65, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x65, 0x61,
	0x64, 0x73, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x61, 0x72, 0x6b, 0x65, 0x79, 0x65, 0x10,
	0x09, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x61, 0x78, 0x10, 0x0a, 0x2a, 0x48, 0x0a, 0x10, 0x53, 0x6b,
	0x69, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x75, 0x6c,
	0x6c, 0x46, 0x61, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x03, 0x2a, 0xb8, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x44, 0x69, 0x63, 0x74, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x10,
	0x04, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05,
	0x12, 0x14, 0x0a, 0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x61, 0x69, 0x6e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x73, 0x6d,
	0x65, 0x74, 0x69, 0x63, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x54, 0x79, 0x70, 0x65, 0x10, 0x09, 0x32,
	0xbc, 0x8f, 0x01, 0x0a, 0x06, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a,
	0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1a,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x12, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x42, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x4d,
	0x6f, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40,
	0x0a, 0x0b, 0x46, 0x72, 0x6f, 0x6e, 0x7a, 0x65, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x42, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69,
	0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b,
	0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x66, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69,
	0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b,
	0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x1a,
	0x4d, 0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x10, 0x4d, 0x6f,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x69, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x31, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x12, 0x12,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x44,
	0x69, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x44, 0x69, 0x63,
	0x74, 0x12, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x44, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x44, 0x69, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x69, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x34, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x68, 0x65,
	0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x54, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x4d,
	0x6f, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x14,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x65, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x50, 0x75,
	0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3c, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x18,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x44, 0x65,
	0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x42, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12,
	0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43,
	0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a,
	0x12, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x55, 0x70, 0x53, 0x6b, 0x69, 0x6e,
	0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13,
	0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x67, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69,
	0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e,
	0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x52,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43,
	0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43,
	0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x58, 0x0a,
	0x14, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4f,
	0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x73,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x73,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74,
	0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69,
	0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74,
	0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a,
	0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x55, 0x70,
	0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x43, 0x6f, 0x73, 0x6d,
	0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x43,
	0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x73, 0x6d, 0x65,
	0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x23, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x73, 0x6d, 0x65, 0x74, 0x69,
	0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f,
	0x73, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c,
	0x6c, 0x50, 0x68, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c,
	0x50, 0x68, 0x61, 0x6e, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61,
	0x6e, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x69,
	0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x69, 0x63,
	0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e,
	0x4d, 0x6f, 0x64, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x12, 0x1d,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x69, 0x63, 0x68, 0x65,
	0x6c, 0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x69, 0x63, 0x68, 0x65, 0x6c,
	0x6c, 0x50, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69,
	0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x53,
	0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e,
	0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54,
	0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x55, 0x70, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x55, 0x70, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x55, 0x70, 0x53, 0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x44, 0x6f, 0x77, 0x6e, 0x53,
	0x6b, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b, 0x69, 0x6e, 0x43,
	0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x6b,
	0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x60, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53,
	0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b,
	0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x53, 0x6b, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b,
	0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53,
	0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x93, 0x01, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x90, 0x01, 0x0a, 0x25, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x34, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x90, 0x01, 0x0a, 0x25, 0x44, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x34, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x90, 0x01, 0x0a,
	0x25, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10,
	0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65,
	0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x54, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x63, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x55, 0x70, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x55, 0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4e, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x4f, 0x6e, 0x53, 0x61,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x4f, 0x6e, 0x53,
	0x61, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x59,
	0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x59, 0x6f, 0x75, 0x5a, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x57, 0x69,
	0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x57, 0x69, 0x73, 0x65, 0x4d,
	0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x57,
	0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x1a, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09, 0x55,
	0x70, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x55, 0x70, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x57, 0x69,
	0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x44, 0x6f, 0x77,
	0x6e, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x57, 0x69, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x48, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x55, 0x70, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x16, 0x4d, 0x6f, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x54, 0x0a, 0x11, 0x55, 0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x55, 0x70, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x48, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x4d,
	0x6f, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x08, 0x55, 0x70, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x55,
	0x70, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x44,
	0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12,
	0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x55, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x15, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x53,
	0x79, 0x6e, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a,
	0x0c, 0x4d, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x4d, 0x6f, 0x64,
	0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x66, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x63, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x84, 0x01, 0x0a, 0x21, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x30, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x81, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x81, 0x01, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x19, 0x41, 0x64, 0x64,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x19, 0x4d, 0x6f, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6d, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6d, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x6d,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x80, 0x01, 0x0a, 0x21, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x0c, 0x41, 0x70, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x17, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x70, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x7d, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x7d, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x2b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x2c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7d,
	0x0a, 0x20, 0x4d, 0x6f, 0x64, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x2b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a,
	0x11, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x56, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x57, 0x65,
	0x69, 0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x57, 0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x48, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x57, 0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61,
	0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x57,
	0x65, 0x69, 0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x57, 0x65, 0x69,
	0x58, 0x69, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7e, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2e,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x53,
	0x43, 0x41, 0x4e, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x41,
	0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x43, 0x41, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x4d,
	0x6f, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x53, 0x43, 0x41, 0x4e, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43,
	0x41, 0x4e, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x41,
	0x4e, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x53, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x51, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2c,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12,
	0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x4f, 0x6e,
	0x4f, 0x66, 0x66, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12,
	0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x6e, 0x4f, 0x66, 0x66,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x6b, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x53, 0x6b,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x53,
	0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x4f, 0x6e, 0x4f, 0x66, 0x66,
	0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x4f, 0x6e, 0x4f, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_manage_proto_rawDescOnce sync.Once
	file_manage_proto_rawDescData = file_manage_proto_rawDesc
)

func file_manage_proto_rawDescGZIP() []byte {
	file_manage_proto_rawDescOnce.Do(func() {
		file_manage_proto_rawDescData = protoimpl.X.CompressGZIP(file_manage_proto_rawDescData)
	})
	return file_manage_proto_rawDescData
}

var file_manage_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_manage_proto_msgTypes = make([]protoimpl.MessageInfo, 548)
var file_manage_proto_goTypes = []interface{}{
	(VersionType)(0),                                      // 0: manage.VersionType
	(MeasureSkinDimensionType)(0),                         // 1: manage.MeasureSkinDimensionType
	(SkinAnalysisType)(0),                                 // 2: manage.SkinAnalysisType
	(DictType)(0),                                         // 3: manage.DictType
	(*RoleInfo)(nil),                                      // 4: manage.RoleInfo
	(*ManagerInfo)(nil),                                   // 5: manage.ManagerInfo
	(*MeasureSkinDimensionInfo)(nil),                      // 6: manage.MeasureSkinDimensionInfo
	(*MeasureDimensionSettingInfo)(nil),                   // 7: manage.MeasureDimensionSettingInfo
	(*ProductDictInfo)(nil),                               // 8: manage.ProductDictInfo
	(*PushMessageInfo)(nil),                               // 9: manage.PushMessageInfo
	(*IssueInfo)(nil),                                     // 10: manage.IssueInfo
	(*OperationLogInfo)(nil),                              // 11: manage.OperationLogInfo
	(*CosmeticsProductInfo)(nil),                          // 12: manage.CosmeticsProductInfo
	(*CourseProductInfo)(nil),                             // 13: manage.CourseProductInfo
	(*DeviceVersionInfo)(nil),                             // 14: manage.DeviceVersionInfo
	(*ImportTask)(nil),                                    // 15: manage.ImportTask
	(*RunTimeFilters)(nil),                                // 16: manage.RunTimeFilters
	(*FindOptionCommon)(nil),                              // 17: manage.FindOptionCommon
	(*SummaryRequest)(nil),                                // 18: manage.SummaryRequest
	(*SummaryResp)(nil),                                   // 19: manage.SummaryResp
	(*ExportSummaryRequest)(nil),                          // 20: manage.ExportSummaryRequest
	(*ExportSummaryItem)(nil),                             // 21: manage.ExportSummaryItem
	(*DurationSummaryResp)(nil),                           // 22: manage.DurationSummaryResp
	(*ExportSummaryResp)(nil),                             // 23: manage.ExportSummaryResp
	(*LoginRequest)(nil),                                  // 24: manage.LoginRequest
	(*LoginResp)(nil),                                     // 25: manage.LoginResp
	(*ListUserRequest)(nil),                               // 26: manage.ListUserRequest
	(*ListManagerRequest)(nil),                            // 27: manage.ListManagerRequest
	(*ListManagerResp)(nil),                               // 28: manage.ListManagerResp
	(*ListUserResp)(nil),                                  // 29: manage.ListUserResp
	(*ListUserRespItem)(nil),                              // 30: manage.ListUserRespItem
	(*ModPasswdRequest)(nil),                              // 31: manage.ModPasswdRequest
	(*ModPasswdResp)(nil),                                 // 32: manage.ModPasswdResp
	(*ModUserInfoRequest)(nil),                            // 33: manage.ModUserInfoRequest
	(*ModUserInfoResp)(nil),                               // 34: manage.ModUserInfoResp
	(*DelUserRequest)(nil),                                // 35: manage.DelUserRequest
	(*DelUserResp)(nil),                                   // 36: manage.DelUserResp
	(*ModUserStatusRequest)(nil),                          // 37: manage.ModUserStatusRequest
	(*ModUserStatusResp)(nil),                             // 38: manage.ModUserStatusResp
	(*AddUserRequest)(nil),                                // 39: manage.AddUserRequest
	(*AddUserResp)(nil),                                   // 40: manage.AddUserResp
	(*ExportUserRequest)(nil),                             // 41: manage.ExportUserRequest
	(*ExportUserResp)(nil),                                // 42: manage.ExportUserResp
	(*UploadFileRequest)(nil),                             // 43: manage.UploadFileRequest
	(*UploadFileResp)(nil),                                // 44: manage.UploadFileResp
	(*AddRoleInfoRequest)(nil),                            // 45: manage.AddRoleInfoRequest
	(*AddRoleInfoResp)(nil),                               // 46: manage.AddRoleInfoResp
	(*ModRoleInfoRequest)(nil),                            // 47: manage.ModRoleInfoRequest
	(*ModRoleInfoResp)(nil),                               // 48: manage.ModRoleInfoResp
	(*DelRoleInfoRequest)(nil),                            // 49: manage.DelRoleInfoRequest
	(*DelRoleInfoResp)(nil),                               // 50: manage.DelRoleInfoResp
	(*ListRoleRequest)(nil),                               // 51: manage.ListRoleRequest
	(*ListRoleResp)(nil),                                  // 52: manage.ListRoleResp
	(*ListRoleRespItem)(nil),                              // 53: manage.ListRoleRespItem
	(*FrozenRoleRequest)(nil),                             // 54: manage.FrozenRoleRequest
	(*FrozenRoleResp)(nil),                                // 55: manage.FrozenRoleResp
	(*RecoverRoleRequest)(nil),                            // 56: manage.RecoverRoleRequest
	(*RecoverRoleResp)(nil),                               // 57: manage.RecoverRoleResp
	(*AddMeasureSkinDimensionRequest)(nil),                // 58: manage.AddMeasureSkinDimensionRequest
	(*AddMeasureSkinDimensionResp)(nil),                   // 59: manage.AddMeasureSkinDimensionResp
	(*ListMeasureSkinDimensionRequest)(nil),               // 60: manage.ListMeasureSkinDimensionRequest
	(*ListMeasureSkinDimensionResp)(nil),                  // 61: manage.ListMeasureSkinDimensionResp
	(*ListMeasureSkinDimensionRespItem)(nil),              // 62: manage.ListMeasureSkinDimensionRespItem
	(*ModMeasureSkinDimensionRequest)(nil),                // 63: manage.ModMeasureSkinDimensionRequest
	(*ModMeasureSkinDimensionResp)(nil),                   // 64: manage.ModMeasureSkinDimensionResp
	(*DelMeasureSkinDimensionRequest)(nil),                // 65: manage.DelMeasureSkinDimensionRequest
	(*DelMeasureSkinDimensionResp)(nil),                   // 66: manage.DelMeasureSkinDimensionResp
	(*AddMeasureDimensionSettingRequest)(nil),             // 67: manage.AddMeasureDimensionSettingRequest
	(*AddMeasureDimensionSettingResp)(nil),                // 68: manage.AddMeasureDimensionSettingResp
	(*ListMeasureDimensionSettingRequest)(nil),            // 69: manage.ListMeasureDimensionSettingRequest
	(*ListMeasureDimensionSettingResp)(nil),               // 70: manage.ListMeasureDimensionSettingResp
	(*ListMeasureDimensionSettingRespItem)(nil),           // 71: manage.ListMeasureDimensionSettingRespItem
	(*ModMeasureDimensionSettingRequest)(nil),             // 72: manage.ModMeasureDimensionSettingRequest
	(*ModMeasureDimensionSettingResp)(nil),                // 73: manage.ModMeasureDimensionSettingResp
	(*DelMeasureDimensionSettingRequest)(nil),             // 74: manage.DelMeasureDimensionSettingRequest
	(*DelMeasureDimensionSettingResp)(nil),                // 75: manage.DelMeasureDimensionSettingResp
	(*ReportSetting)(nil),                                 // 76: manage.ReportSetting
	(*AddReportSettingReq)(nil),                           // 77: manage.AddReportSettingReq
	(*AddReportSettingRsp)(nil),                           // 78: manage.AddReportSettingRsp
	(*DelReportSettingReq)(nil),                           // 79: manage.DelReportSettingReq
	(*DelReportSettingRsp)(nil),                           // 80: manage.DelReportSettingRsp
	(*ModReportSettingReq)(nil),                           // 81: manage.ModReportSettingReq
	(*ModReportSettingRsp)(nil),                           // 82: manage.ModReportSettingRsp
	(*ListReportSettingReq)(nil),                          // 83: manage.ListReportSettingReq
	(*ListReportSettingRsp)(nil),                          // 84: manage.ListReportSettingRsp
	(*AddProductDictRequest)(nil),                         // 85: manage.AddProductDictRequest
	(*AddProductDictResp)(nil),                            // 86: manage.AddProductDictResp
	(*ListProductDictRequest)(nil),                        // 87: manage.ListProductDictRequest
	(*ListProductDictResp)(nil),                           // 88: manage.ListProductDictResp
	(*ListProductDictRespItem)(nil),                       // 89: manage.ListProductDictRespItem
	(*ModProductDictRequest)(nil),                         // 90: manage.ModProductDictRequest
	(*ModProductDictResp)(nil),                            // 91: manage.ModProductDictResp
	(*DelProductDictRequest)(nil),                         // 92: manage.DelProductDictRequest
	(*DelProductDictResp)(nil),                            // 93: manage.DelProductDictResp
	(*AddPushMessageRequest)(nil),                         // 94: manage.AddPushMessageRequest
	(*AddPushMessageResp)(nil),                            // 95: manage.AddPushMessageResp
	(*ListPushMessageRequest)(nil),                        // 96: manage.ListPushMessageRequest
	(*ListPushMessageResp)(nil),                           // 97: manage.ListPushMessageResp
	(*ListPushMessageRespItem)(nil),                       // 98: manage.ListPushMessageRespItem
	(*ModPushMessageRequest)(nil),                         // 99: manage.ModPushMessageRequest
	(*ModPushMessageResp)(nil),                            // 100: manage.ModPushMessageResp
	(*DelPushMessageRequest)(nil),                         // 101: manage.DelPushMessageRequest
	(*DelPushMessageResp)(nil),                            // 102: manage.DelPushMessageResp
	(*ListIssueRequest)(nil),                              // 103: manage.ListIssueRequest
	(*ListIssueResp)(nil),                                 // 104: manage.ListIssueResp
	(*ListIssueRespItem)(nil),                             // 105: manage.ListIssueRespItem
	(*ModIssueRequest)(nil),                               // 106: manage.ModIssueRequest
	(*ModIssueResp)(nil),                                  // 107: manage.ModIssueResp
	(*DelIssueRequest)(nil),                               // 108: manage.DelIssueRequest
	(*DelIssueResp)(nil),                                  // 109: manage.DelIssueResp
	(*ListMachinesRequest)(nil),                           // 110: manage.ListMachinesRequest
	(*ListMachinesResp)(nil),                              // 111: manage.ListMachinesResp
	(*ListMachinesRespItem)(nil),                          // 112: manage.ListMachinesRespItem
	(*MachinesInfo)(nil),                                  // 113: manage.MachinesInfo
	(*AddMachinesRequest)(nil),                            // 114: manage.AddMachinesRequest
	(*AddMachinesResp)(nil),                               // 115: manage.AddMachinesResp
	(*DelMachinesRequest)(nil),                            // 116: manage.DelMachinesRequest
	(*DelMachinesResp)(nil),                               // 117: manage.DelMachinesResp
	(*ModMachinesRequest)(nil),                            // 118: manage.ModMachinesRequest
	(*ModMachinesResp)(nil),                               // 119: manage.ModMachinesResp
	(*MachinesIdleResInfo)(nil),                           // 120: manage.MachinesIdleResInfo
	(*ListMachinesIdleResRespItem)(nil),                   // 121: manage.ListMachinesIdleResRespItem
	(*ListMachinesIdleResRequest)(nil),                    // 122: manage.ListMachinesIdleResRequest
	(*ListMachinesIdleResResp)(nil),                       // 123: manage.ListMachinesIdleResResp
	(*AddMachinesIdleResRequest)(nil),                     // 124: manage.AddMachinesIdleResRequest
	(*AddMachinesIdleResResp)(nil),                        // 125: manage.AddMachinesIdleResResp
	(*DelMachinesIdleResRequest)(nil),                     // 126: manage.DelMachinesIdleResRequest
	(*DelMachinesIdleResResp)(nil),                        // 127: manage.DelMachinesIdleResResp
	(*ModMachinesIdleResRequest)(nil),                     // 128: manage.ModMachinesIdleResRequest
	(*ModMachinesIdleResResp)(nil),                        // 129: manage.ModMachinesIdleResResp
	(*SkinCareProductInfo)(nil),                           // 130: manage.SkinCareProductInfo
	(*ListSkinCareProductItem)(nil),                       // 131: manage.ListSkinCareProductItem
	(*ListSkinCareProductRequest)(nil),                    // 132: manage.ListSkinCareProductRequest
	(*ListSkinCareProductResp)(nil),                       // 133: manage.ListSkinCareProductResp
	(*AddSkinCareProductRequest)(nil),                     // 134: manage.AddSkinCareProductRequest
	(*AddSkinCareProductResp)(nil),                        // 135: manage.AddSkinCareProductResp
	(*DelSkinCareProductRequest)(nil),                     // 136: manage.DelSkinCareProductRequest
	(*DelSkinCareProductResp)(nil),                        // 137: manage.DelSkinCareProductResp
	(*ModSkinCareProductRequest)(nil),                     // 138: manage.ModSkinCareProductRequest
	(*ModSkinCareProductResp)(nil),                        // 139: manage.ModSkinCareProductResp
	(*UpSkinCareProductRequest)(nil),                      // 140: manage.UpSkinCareProductRequest
	(*UpSkinCareProductResp)(nil),                         // 141: manage.UpSkinCareProductResp
	(*DownSkinCareProductRequest)(nil),                    // 142: manage.DownSkinCareProductRequest
	(*DownSkinCareProductResp)(nil),                       // 143: manage.DownSkinCareProductResp
	(*BatchSyncRecommendProductReq)(nil),                  // 144: manage.BatchSyncRecommendProductReq
	(*BatchSyncRecommendProductRsp)(nil),                  // 145: manage.BatchSyncRecommendProductRsp
	(*BatchSyncRecommendProjectReq)(nil),                  // 146: manage.BatchSyncRecommendProjectReq
	(*BatchSyncRecommendProjectRsp)(nil),                  // 147: manage.BatchSyncRecommendProjectRsp
	(*ListCosmeticsProductItem)(nil),                      // 148: manage.ListCosmeticsProductItem
	(*ListCosmeticsProductRequest)(nil),                   // 149: manage.ListCosmeticsProductRequest
	(*ListCosmeticsProductResp)(nil),                      // 150: manage.ListCosmeticsProductResp
	(*AddCosmeticsProductRequest)(nil),                    // 151: manage.AddCosmeticsProductRequest
	(*AddCosmeticsProductResp)(nil),                       // 152: manage.AddCosmeticsProductResp
	(*DelCosmeticsProductRequest)(nil),                    // 153: manage.DelCosmeticsProductRequest
	(*DelCosmeticsProductResp)(nil),                       // 154: manage.DelCosmeticsProductResp
	(*ModCosmeticsProductRequest)(nil),                    // 155: manage.ModCosmeticsProductRequest
	(*ModCosmeticsProductResp)(nil),                       // 156: manage.ModCosmeticsProductResp
	(*UpCosmeticsProductRequest)(nil),                     // 157: manage.UpCosmeticsProductRequest
	(*UpCosmeticsProductResp)(nil),                        // 158: manage.UpCosmeticsProductResp
	(*DownCosmeticsProductRequest)(nil),                   // 159: manage.DownCosmeticsProductRequest
	(*DownCosmeticsProductResp)(nil),                      // 160: manage.DownCosmeticsProductResp
	(*MichellPhanInfo)(nil),                               // 161: manage.MichellPhanInfo
	(*ListMichellPhanItem)(nil),                           // 162: manage.ListMichellPhanItem
	(*ListMichellPhanRequest)(nil),                        // 163: manage.ListMichellPhanRequest
	(*ListMichellPhanResp)(nil),                           // 164: manage.ListMichellPhanResp
	(*AddMichellPhanRequest)(nil),                         // 165: manage.AddMichellPhanRequest
	(*AddMichellPhanResp)(nil),                            // 166: manage.AddMichellPhanResp
	(*DelMichellPhanRequest)(nil),                         // 167: manage.DelMichellPhanRequest
	(*DelMichellPhanResp)(nil),                            // 168: manage.DelMichellPhanResp
	(*ModMichellPhanRequest)(nil),                         // 169: manage.ModMichellPhanRequest
	(*ModMichellPhanResp)(nil),                            // 170: manage.ModMichellPhanResp
	(*SkinCareAdviceInfo)(nil),                            // 171: manage.SkinCareAdviceInfo
	(*ListSkinCareAdviceItem)(nil),                        // 172: manage.ListSkinCareAdviceItem
	(*ListSkinCareAdviceRequest)(nil),                     // 173: manage.ListSkinCareAdviceRequest
	(*ListSkinCareAdviceResp)(nil),                        // 174: manage.ListSkinCareAdviceResp
	(*AddSkinCareAdviceRequest)(nil),                      // 175: manage.AddSkinCareAdviceRequest
	(*AddSkinCareAdviceResp)(nil),                         // 176: manage.AddSkinCareAdviceResp
	(*DelSkinCareAdviceRequest)(nil),                      // 177: manage.DelSkinCareAdviceRequest
	(*DelSkinCareAdviceResp)(nil),                         // 178: manage.DelSkinCareAdviceResp
	(*ModSkinCareAdviceRequest)(nil),                      // 179: manage.ModSkinCareAdviceRequest
	(*ModSkinCareAdviceResp)(nil),                         // 180: manage.ModSkinCareAdviceResp
	(*UpSkinCareAdviceRequest)(nil),                       // 181: manage.UpSkinCareAdviceRequest
	(*UpSkinCareAdviceResp)(nil),                          // 182: manage.UpSkinCareAdviceResp
	(*DownSkinCareAdviceRequest)(nil),                     // 183: manage.DownSkinCareAdviceRequest
	(*DownSkinCareAdviceResp)(nil),                        // 184: manage.DownSkinCareAdviceResp
	(*MeasureSkinRecordInfo)(nil),                         // 185: manage.MeasureSkinRecordInfo
	(*ListMeasureSkinRecordItem)(nil),                     // 186: manage.ListMeasureSkinRecordItem
	(*ListMeasureSkinRecordRequest)(nil),                  // 187: manage.ListMeasureSkinRecordRequest
	(*ListMeasureSkinRecordResp)(nil),                     // 188: manage.ListMeasureSkinRecordResp
	(*DelMeasureSkinRecordRequest)(nil),                   // 189: manage.DelMeasureSkinRecordRequest
	(*DelMeasureSkinRecordResp)(nil),                      // 190: manage.DelMeasureSkinRecordResp
	(*GetMeasureSkinDetailRequest)(nil),                   // 191: manage.GetMeasureSkinDetailRequest
	(*MeasureSkinRecord)(nil),                             // 192: manage.MeasureSkinRecord
	(*MeasureSkinRecordResult)(nil),                       // 193: manage.MeasureSkinRecordResult
	(*MeasureSkinRecordResultItem)(nil),                   // 194: manage.MeasureSkinRecordResultItem
	(*SymptomImgSimple)(nil),                              // 195: manage.SymptomImgSimple
	(*ExtraInfo)(nil),                                     // 196: manage.ExtraInfo
	(*GetMeasureSkinDetailResp)(nil),                      // 197: manage.GetMeasureSkinDetailResp
	(*ProductRecommendationWeightSettingInfo)(nil),        // 198: manage.ProductRecommendationWeightSettingInfo
	(*ListProductRecommendationWeightSettingItem)(nil),    // 199: manage.ListProductRecommendationWeightSettingItem
	(*ListProductRecommendationWeightSettingRequest)(nil), // 200: manage.ListProductRecommendationWeightSettingRequest
	(*ListProductRecommendationWeightSettingResp)(nil),    // 201: manage.ListProductRecommendationWeightSettingResp
	(*AddProductRecommendationWeightSettingRequest)(nil),  // 202: manage.AddProductRecommendationWeightSettingRequest
	(*AddProductRecommendationWeightSettingResp)(nil),     // 203: manage.AddProductRecommendationWeightSettingResp
	(*DelProductRecommendationWeightSettingRequest)(nil),  // 204: manage.DelProductRecommendationWeightSettingRequest
	(*DelProductRecommendationWeightSettingResp)(nil),     // 205: manage.DelProductRecommendationWeightSettingResp
	(*ModProductRecommendationWeightSettingRequest)(nil),  // 206: manage.ModProductRecommendationWeightSettingRequest
	(*ModProductRecommendationWeightSettingResp)(nil),     // 207: manage.ModProductRecommendationWeightSettingResp
	(*DeviceUserInfo)(nil),                                // 208: manage.DeviceUserInfo
	(*ListDeviceUserRequest)(nil),                         // 209: manage.ListDeviceUserRequest
	(*ListDeviceUserResp)(nil),                            // 210: manage.ListDeviceUserResp
	(*ListDeviceUserRespItem)(nil),                        // 211: manage.ListDeviceUserRespItem
	(*FrozenDeviceUserRequest)(nil),                       // 212: manage.FrozenDeviceUserRequest
	(*FrozenDeviceUserResp)(nil),                          // 213: manage.FrozenDeviceUserResp
	(*RecoverDeviceUserRequest)(nil),                      // 214: manage.RecoverDeviceUserRequest
	(*RecoverDeviceUserResp)(nil),                         // 215: manage.RecoverDeviceUserResp
	(*CourseClass)(nil),                                   // 216: manage.CourseClass
	(*CourseClassIdName)(nil),                             // 217: manage.CourseClassIdName
	(*AddCourseClassInfoRequest)(nil),                     // 218: manage.AddCourseClassInfoRequest
	(*AddCourseClassInfoResp)(nil),                        // 219: manage.AddCourseClassInfoResp
	(*ModCourseClassInfoRequest)(nil),                     // 220: manage.ModCourseClassInfoRequest
	(*ModCourseClassInfoResp)(nil),                        // 221: manage.ModCourseClassInfoResp
	(*DelCourseClassInfoRequest)(nil),                     // 222: manage.DelCourseClassInfoRequest
	(*DelCourseClassInfoResp)(nil),                        // 223: manage.DelCourseClassInfoResp
	(*GetCourseClassNameListRequest)(nil),                 // 224: manage.GetCourseClassNameListRequest
	(*GetCourseClassNameListResp)(nil),                    // 225: manage.GetCourseClassNameListResp
	(*ListCourseClassRequest)(nil),                        // 226: manage.ListCourseClassRequest
	(*ListCourseClassResp)(nil),                           // 227: manage.ListCourseClassResp
	(*ListCourseClassRespItem)(nil),                       // 228: manage.ListCourseClassRespItem
	(*ListCourseClassIdNameRespItem)(nil),                 // 229: manage.ListCourseClassIdNameRespItem
	(*UpCourseClassRequest)(nil),                          // 230: manage.UpCourseClassRequest
	(*UpCourseClassResp)(nil),                             // 231: manage.UpCourseClassResp
	(*DownCourseClassRequest)(nil),                        // 232: manage.DownCourseClassRequest
	(*DownCourseClassResp)(nil),                           // 233: manage.DownCourseClassResp
	(*WiseMan)(nil),                                       // 234: manage.WiseMan
	(*WiseManName)(nil),                                   // 235: manage.WiseManName
	(*AddWiseManInfoRequest)(nil),                         // 236: manage.AddWiseManInfoRequest
	(*AddWiseManInfoResp)(nil),                            // 237: manage.AddWiseManInfoResp
	(*ModWiseManInfoRequest)(nil),                         // 238: manage.ModWiseManInfoRequest
	(*ModWiseManInfoResp)(nil),                            // 239: manage.ModWiseManInfoResp
	(*DelWiseManInfoRequest)(nil),                         // 240: manage.DelWiseManInfoRequest
	(*DelWiseManInfoResp)(nil),                            // 241: manage.DelWiseManInfoResp
	(*GetWiseManNameListRequest)(nil),                     // 242: manage.GetWiseManNameListRequest
	(*GetWiseManNameListResp)(nil),                        // 243: manage.GetWiseManNameListResp
	(*GetWiseManNameListRespItem)(nil),                    // 244: manage.GetWiseManNameListRespItem
	(*ListWiseManRequest)(nil),                            // 245: manage.ListWiseManRequest
	(*ListWiseManResp)(nil),                               // 246: manage.ListWiseManResp
	(*ListWiseManRespItem)(nil),                           // 247: manage.ListWiseManRespItem
	(*UpWiseManRequest)(nil),                              // 248: manage.UpWiseManRequest
	(*UpWiseManResp)(nil),                                 // 249: manage.UpWiseManResp
	(*DownWiseManRequest)(nil),                            // 250: manage.DownWiseManRequest
	(*DownWiseManResp)(nil),                               // 251: manage.DownWiseManResp
	(*CourseStep)(nil),                                    // 252: manage.CourseStep
	(*AddCourseStepRequest)(nil),                          // 253: manage.AddCourseStepRequest
	(*AddCourseStepResp)(nil),                             // 254: manage.AddCourseStepResp
	(*ListCourseStepRequest)(nil),                         // 255: manage.ListCourseStepRequest
	(*ListCourseStepResp)(nil),                            // 256: manage.ListCourseStepResp
	(*ListCourseStepRespItem)(nil),                        // 257: manage.ListCourseStepRespItem
	(*Course)(nil),                                        // 258: manage.Course
	(*CourseName)(nil),                                    // 259: manage.CourseName
	(*AddCourseInfoRequest)(nil),                          // 260: manage.AddCourseInfoRequest
	(*AddCourseInfoResp)(nil),                             // 261: manage.AddCourseInfoResp
	(*ModCourseInfoRequest)(nil),                          // 262: manage.ModCourseInfoRequest
	(*ModCourseInfoResp)(nil),                             // 263: manage.ModCourseInfoResp
	(*DelCourseInfoRequest)(nil),                          // 264: manage.DelCourseInfoRequest
	(*DelCourseInfoResp)(nil),                             // 265: manage.DelCourseInfoResp
	(*ListCourseRequest)(nil),                             // 266: manage.ListCourseRequest
	(*ListCourseResp)(nil),                                // 267: manage.ListCourseResp
	(*ListCourseRespItem)(nil),                            // 268: manage.ListCourseRespItem
	(*ListCanRecommendCourseNameRequest)(nil),             // 269: manage.ListCanRecommendCourseNameRequest
	(*ListCanRecommendCourseNameResp)(nil),                // 270: manage.ListCanRecommendCourseNameResp
	(*ListCanRecommendCourseNameRespItem)(nil),            // 271: manage.ListCanRecommendCourseNameRespItem
	(*UpCourseRequest)(nil),                               // 272: manage.UpCourseRequest
	(*UpCourseResp)(nil),                                  // 273: manage.UpCourseResp
	(*DownCourseRequest)(nil),                             // 274: manage.DownCourseRequest
	(*DownCourseResp)(nil),                                // 275: manage.DownCourseResp
	(*ListCourseStepAndProductRequest)(nil),               // 276: manage.ListCourseStepAndProductRequest
	(*ListCourseStepAndProductResp)(nil),                  // 277: manage.ListCourseStepAndProductResp
	(*CourseRecommend)(nil),                               // 278: manage.CourseRecommend
	(*AddCourseRecommendInfoRequest)(nil),                 // 279: manage.AddCourseRecommendInfoRequest
	(*AddCourseRecommendInfoResp)(nil),                    // 280: manage.AddCourseRecommendInfoResp
	(*ModCourseRecommendInfoRequest)(nil),                 // 281: manage.ModCourseRecommendInfoRequest
	(*ModCourseRecommendInfoResp)(nil),                    // 282: manage.ModCourseRecommendInfoResp
	(*DelCourseRecommendInfoRequest)(nil),                 // 283: manage.DelCourseRecommendInfoRequest
	(*DelCourseRecommendInfoResp)(nil),                    // 284: manage.DelCourseRecommendInfoResp
	(*ListCourseRecommendRequest)(nil),                    // 285: manage.ListCourseRecommendRequest
	(*ListCourseRecommendResp)(nil),                       // 286: manage.ListCourseRecommendResp
	(*ListCourseRecommendRespItem)(nil),                   // 287: manage.ListCourseRecommendRespItem
	(*UpCourseRecommendRequest)(nil),                      // 288: manage.UpCourseRecommendRequest
	(*UpCourseRecommendResp)(nil),                         // 289: manage.UpCourseRecommendResp
	(*DownCourseRecommendRequest)(nil),                    // 290: manage.DownCourseRecommendRequest
	(*DownCourseRecommendResp)(nil),                       // 291: manage.DownCourseRecommendResp
	(*Doctor)(nil),                                        // 292: manage.Doctor
	(*AddDoctorInfoRequest)(nil),                          // 293: manage.AddDoctorInfoRequest
	(*AddDoctorInfoResp)(nil),                             // 294: manage.AddDoctorInfoResp
	(*ModDoctorInfoRequest)(nil),                          // 295: manage.ModDoctorInfoRequest
	(*ModDoctorInfoResp)(nil),                             // 296: manage.ModDoctorInfoResp
	(*DelDoctorInfoRequest)(nil),                          // 297: manage.DelDoctorInfoRequest
	(*DelDoctorInfoResp)(nil),                             // 298: manage.DelDoctorInfoResp
	(*ListDoctorRequest)(nil),                             // 299: manage.ListDoctorRequest
	(*ListDoctorResp)(nil),                                // 300: manage.ListDoctorResp
	(*ListDoctorRespItem)(nil),                            // 301: manage.ListDoctorRespItem
	(*UpDoctorRequest)(nil),                               // 302: manage.UpDoctorRequest
	(*UpDoctorResp)(nil),                                  // 303: manage.UpDoctorResp
	(*DownDoctorRequest)(nil),                             // 304: manage.DownDoctorRequest
	(*DownDoctorResp)(nil),                                // 305: manage.DownDoctorResp
	(*AddOperationLogRequest)(nil),                        // 306: manage.AddOperationLogRequest
	(*AddOperationLogResp)(nil),                           // 307: manage.AddOperationLogResp
	(*ListOperationLogRequest)(nil),                       // 308: manage.ListOperationLogRequest
	(*ListOperationLogResp)(nil),                          // 309: manage.ListOperationLogResp
	(*ListOperationLogRespItem)(nil),                      // 310: manage.ListOperationLogRespItem
	(*ListImportTaskRequest)(nil),                         // 311: manage.ListImportTaskRequest
	(*ListImportTaskResp)(nil),                            // 312: manage.ListImportTaskResp
	(*ListImportTaskRespItem)(nil),                        // 313: manage.ListImportTaskRespItem
	(*AddImportTaskRequest)(nil),                          // 314: manage.AddImportTaskRequest
	(*AddImportTaskResp)(nil),                             // 315: manage.AddImportTaskResp
	(*DataPoint)(nil),                                     // 316: manage.DataPoint
	(*ListDataPointRequest)(nil),                          // 317: manage.ListDataPointRequest
	(*ListDataPointResp)(nil),                             // 318: manage.ListDataPointResp
	(*ListDataPointRespItem)(nil),                         // 319: manage.ListDataPointRespItem
	(*ListDeviceVersionItem)(nil),                         // 320: manage.ListDeviceVersionItem
	(*ListDeviceVersionRequest)(nil),                      // 321: manage.ListDeviceVersionRequest
	(*ListDeviceVersionResp)(nil),                         // 322: manage.ListDeviceVersionResp
	(*AddDeviceVersionRequest)(nil),                       // 323: manage.AddDeviceVersionRequest
	(*AddDeviceVersionResp)(nil),                          // 324: manage.AddDeviceVersionResp
	(*ModDeviceVersionRequest)(nil),                       // 325: manage.ModDeviceVersionRequest
	(*ModDeviceVersionResp)(nil),                          // 326: manage.ModDeviceVersionResp
	(*DelDeviceVersionRequest)(nil),                       // 327: manage.DelDeviceVersionRequest
	(*DelDeviceVersionResp)(nil),                          // 328: manage.DelDeviceVersionResp
	(*GetYouZanOnSaleListRequest)(nil),                    // 329: manage.GetYouZanOnSaleListRequest
	(*YouZanOnSaleItem)(nil),                              // 330: manage.YouZanOnSaleItem
	(*GetYouZanOnSaleListResp)(nil),                       // 331: manage.GetYouZanOnSaleListResp
	(*GetYouZanItemDetailRequest)(nil),                    // 332: manage.GetYouZanItemDetailRequest
	(*SkuItem)(nil),                                       // 333: manage.SkuItem
	(*GetYouZanItemDetailResp)(nil),                       // 334: manage.GetYouZanItemDetailResp
	(*CheckPasswordInfo)(nil),                             // 335: manage.CheckPasswordInfo
	(*GetCheckPasswordListRequest)(nil),                   // 336: manage.GetCheckPasswordListRequest
	(*GetCheckPasswordListResp)(nil),                      // 337: manage.GetCheckPasswordListResp
	(*SetCheckPasswordTimerRequest)(nil),                  // 338: manage.SetCheckPasswordTimerRequest
	(*SetCheckPasswordTimerResp)(nil),                     // 339: manage.SetCheckPasswordTimerResp
	(*ListWhiteInfo)(nil),                                 // 340: manage.ListWhiteInfo
	(*GetListWhiteListRequest)(nil),                       // 341: manage.GetListWhiteListRequest
	(*GetListWhiteListResp)(nil),                          // 342: manage.GetListWhiteListResp
	(*DelListWhiteListRequest)(nil),                       // 343: manage.DelListWhiteListRequest
	(*DelListWhiteListResp)(nil),                          // 344: manage.DelListWhiteListResp
	(*AddListWhiteListRequest)(nil),                       // 345: manage.AddListWhiteListRequest
	(*AddListWhiteListResp)(nil),                          // 346: manage.AddListWhiteListResp
	(*SyncWhiteListRequest)(nil),                          // 347: manage.SyncWhiteListRequest
	(*SyncWhiteListResp)(nil),                             // 348: manage.SyncWhiteListResp
	(*AppConfigInfo)(nil),                                 // 349: manage.AppConfigInfo
	(*ListAppConfigRequest)(nil),                          // 350: manage.ListAppConfigRequest
	(*AddAppConfigRequest)(nil),                           // 351: manage.AddAppConfigRequest
	(*DelAppConfigRequest)(nil),                           // 352: manage.DelAppConfigRequest
	(*ModAppConfigRequest)(nil),                           // 353: manage.ModAppConfigRequest
	(*AddAppConfigResp)(nil),                              // 354: manage.AddAppConfigResp
	(*DelAppConfigResp)(nil),                              // 355: manage.DelAppConfigResp
	(*ModAppConfigResp)(nil),                              // 356: manage.ModAppConfigResp
	(*ListAppConfigResp)(nil),                             // 357: manage.ListAppConfigResp
	(*SyncAppConfigRequest)(nil),                          // 358: manage.SyncAppConfigRequest
	(*SyncAppConfigResp)(nil),                             // 359: manage.SyncAppConfigResp
	(*BusinessInfo)(nil),                                  // 360: manage.BusinessInfo
	(*ShopInfo)(nil),                                      // 361: manage.ShopInfo
	(*PermissionInfo)(nil),                                // 362: manage.PermissionInfo
	(*ListBusinessRequest)(nil),                           // 363: manage.ListBusinessRequest
	(*ListBusinessResp)(nil),                              // 364: manage.ListBusinessResp
	(*AddBusinessRequest)(nil),                            // 365: manage.AddBusinessRequest
	(*CreateBusinessRequest)(nil),                         // 366: manage.CreateBusinessRequest
	(*CreateBusinessResp)(nil),                            // 367: manage.CreateBusinessResp
	(*AddBusinessResp)(nil),                               // 368: manage.AddBusinessResp
	(*ModBusinessRequest)(nil),                            // 369: manage.ModBusinessRequest
	(*ModBusinessResp)(nil),                               // 370: manage.ModBusinessResp
	(*DelBusinessRequest)(nil),                            // 371: manage.DelBusinessRequest
	(*DelBusinessResp)(nil),                               // 372: manage.DelBusinessResp
	(*ListShopInfoRequest)(nil),                           // 373: manage.ListShopInfoRequest
	(*ListShopInfoResp)(nil),                              // 374: manage.ListShopInfoResp
	(*AddShopInfoRequest)(nil),                            // 375: manage.AddShopInfoRequest
	(*AddShopInfoResp)(nil),                               // 376: manage.AddShopInfoResp
	(*ModShopInfoRequest)(nil),                            // 377: manage.ModShopInfoRequest
	(*ModShopInfoResp)(nil),                               // 378: manage.ModShopInfoResp
	(*DelShopInfoRequest)(nil),                            // 379: manage.DelShopInfoRequest
	(*DelShopInfoResp)(nil),                               // 380: manage.DelShopInfoResp
	(*ListPermissionRequest)(nil),                         // 381: manage.ListPermissionRequest
	(*ListPermissionResp)(nil),                            // 382: manage.ListPermissionResp
	(*AddPermissionRequest)(nil),                          // 383: manage.AddPermissionRequest
	(*AddPermissionResp)(nil),                             // 384: manage.AddPermissionResp
	(*ModPermissionRequest)(nil),                          // 385: manage.ModPermissionRequest
	(*ModPermissionResp)(nil),                             // 386: manage.ModPermissionResp
	(*DelPermissionRequest)(nil),                          // 387: manage.DelPermissionRequest
	(*DelPermissionResp)(nil),                             // 388: manage.DelPermissionResp
	(*ListPermissionByRoleIdRequest)(nil),                 // 389: manage.ListPermissionByRoleIdRequest
	(*ListPermissionByRoleIdResp)(nil),                    // 390: manage.ListPermissionByRoleIdResp
	(*ListPermissionByManageIdRequest)(nil),               // 391: manage.ListPermissionByManageIdRequest
	(*ListPermissionByManageIdResp)(nil),                  // 392: manage.ListPermissionByManageIdResp
	(*ManagerRoleRelationInfo)(nil),                       // 393: manage.ManagerRoleRelationInfo
	(*ListManagerRoleRelationRequest)(nil),                // 394: manage.ListManagerRoleRelationRequest
	(*ListManagerRoleRelationResp)(nil),                   // 395: manage.ListManagerRoleRelationResp
	(*AddManagerRoleRelationRequest)(nil),                 // 396: manage.AddManagerRoleRelationRequest
	(*AddManagerRoleRelationResp)(nil),                    // 397: manage.AddManagerRoleRelationResp
	(*ModManagerRoleRelationRequest)(nil),                 // 398: manage.ModManagerRoleRelationRequest
	(*ModManagerRoleRelationResp)(nil),                    // 399: manage.ModManagerRoleRelationResp
	(*DelManagerRoleRelationRequest)(nil),                 // 400: manage.DelManagerRoleRelationRequest
	(*DelManagerRoleRelationResp)(nil),                    // 401: manage.DelManagerRoleRelationResp
	(*ListManagerRoleRelationByManageIdRequest)(nil),      // 402: manage.ListManagerRoleRelationByManageIdRequest
	(*ListManagerRoleRelationByManageIdResp)(nil),         // 403: manage.ListManagerRoleRelationByManageIdResp
	(*DelManagerRoleRelationByManageIdRequest)(nil),       // 404: manage.DelManagerRoleRelationByManageIdRequest
	(*DelManagerRoleRelationByManageIdResp)(nil),          // 405: manage.DelManagerRoleRelationByManageIdResp
	(*AddManagerRoleRelationByManageIdRequest)(nil),       // 406: manage.AddManagerRoleRelationByManageIdRequest
	(*AddManagerRoleRelationByManageIdResp)(nil),          // 407: manage.AddManagerRoleRelationByManageIdResp
	(*RolePermissionRelationInfo)(nil),                    // 408: manage.RolePermissionRelationInfo
	(*ListRolePermissionRelationRequest)(nil),             // 409: manage.ListRolePermissionRelationRequest
	(*ListRolePermissionRelationResp)(nil),                // 410: manage.ListRolePermissionRelationResp
	(*AddRolePermissionRelationRequest)(nil),              // 411: manage.AddRolePermissionRelationRequest
	(*AddRolePermissionRelationResp)(nil),                 // 412: manage.AddRolePermissionRelationResp
	(*ModRolePermissionRelationRequest)(nil),              // 413: manage.ModRolePermissionRelationRequest
	(*ModRolePermissionRelationResp)(nil),                 // 414: manage.ModRolePermissionRelationResp
	(*DelRolePermissionRelationRequest)(nil),              // 415: manage.DelRolePermissionRelationRequest
	(*DelRolePermissionRelationResp)(nil),                 // 416: manage.DelRolePermissionRelationResp
	(*LoginWithSmsCodeRequest)(nil),                       // 417: manage.LoginWithSmsCodeRequest
	(*LoginWithSmsCodeResp)(nil),                          // 418: manage.LoginWithSmsCodeResp
	(*GetSmsCodeRequest)(nil),                             // 419: manage.GetSmsCodeRequest
	(*GetSmsCodeByCreateBusinessRequest)(nil),             // 420: manage.GetSmsCodeByCreateBusinessRequest
	(*GetSmsCodeByCreateBusinessResp)(nil),                // 421: manage.GetSmsCodeByCreateBusinessResp
	(*ErrCode)(nil),                                       // 422: manage.ErrCode
	(*GetSmsCodeResp)(nil),                                // 423: manage.GetSmsCodeResp
	(*GetBusinessByIdRequest)(nil),                        // 424: manage.GetBusinessByIdRequest
	(*GetBusinessByIdResp)(nil),                           // 425: manage.GetBusinessByIdResp
	(*GetPreAuthCodeReq)(nil),                             // 426: manage.GetPreAuthCodeReq
	(*GetPreAuthCodeResp)(nil),                            // 427: manage.GetPreAuthCodeResp
	(*AuthorizationEventReceptionConfigReq)(nil),          // 428: manage.AuthorizationEventReceptionConfigReq
	(*AuthorizationEventReceptionConfigResp)(nil),         // 429: manage.AuthorizationEventReceptionConfigResp
	(*GetAuthorizerAccessTokenReq)(nil),                   // 430: manage.GetAuthorizerAccessTokenReq
	(*GetAuthorizerAccessTokenResp)(nil),                  // 431: manage.GetAuthorizerAccessTokenResp
	(*GetAuthorizerInfoReq)(nil),                          // 432: manage.GetAuthorizerInfoReq
	(*GetAuthorizerInfoResp)(nil),                         // 433: manage.GetAuthorizerInfoResp
	(*ApiQueryAuthReq)(nil),                               // 434: manage.ApiQueryAuthReq
	(*ApiQueryAuthResp)(nil),                              // 435: manage.ApiQueryAuthResp
	(*GetWechatOfficialAccountPlatformReq)(nil),           // 436: manage.GetWechatOfficialAccountPlatformReq
	(*WechatOfficialAccountPlatform)(nil),                 // 437: manage.WechatOfficialAccountPlatform
	(*GetWechatOfficialAccountPlatformResp)(nil),          // 438: manage.GetWechatOfficialAccountPlatformResp
	(*ModWechatOfficialAccountPlatformReq)(nil),           // 439: manage.ModWechatOfficialAccountPlatformReq
	(*ModWechatOfficialAccountPlatformResp)(nil),          // 440: manage.ModWechatOfficialAccountPlatformResp
	(*SimpleModUserInfoReq)(nil),                          // 441: manage.SimpleModUserInfoReq
	(*SimpleModUserInfoResp)(nil),                         // 442: manage.SimpleModUserInfoResp
	(*GetRoleInfoByShopIdReq)(nil),                        // 443: manage.GetRoleInfoByShopIdReq
	(*GetRoleInfoByShopIdResp)(nil),                       // 444: manage.GetRoleInfoByShopIdResp
	(*ScoreSettingInfo)(nil),                              // 445: manage.ScoreSettingInfo
	(*AgeInfo)(nil),                                       // 446: manage.AgeInfo
	(*ListScoreSettingRequest)(nil),                       // 447: manage.ListScoreSettingRequest
	(*ScoreSettingInfoV2)(nil),                            // 448: manage.ScoreSettingInfoV2
	(*ScoreSettingListInfo)(nil),                          // 449: manage.ScoreSettingListInfo
	(*ListScoreSettingResp)(nil),                          // 450: manage.ListScoreSettingResp
	(*AddScoreSettingRequest)(nil),                        // 451: manage.AddScoreSettingRequest
	(*AddScoreSettingResp)(nil),                           // 452: manage.AddScoreSettingResp
	(*ModScoreSettingRequest)(nil),                        // 453: manage.ModScoreSettingRequest
	(*ModScoreSettingResp)(nil),                           // 454: manage.ModScoreSettingResp
	(*DelScoreSettingRequest)(nil),                        // 455: manage.DelScoreSettingRequest
	(*DelScoreSettingResp)(nil),                           // 456: manage.DelScoreSettingResp
	(*GetScoreSettingByTypeRequest)(nil),                  // 457: manage.GetScoreSettingByTypeRequest
	(*GetScoreSettingByTypeResp)(nil),                     // 458: manage.GetScoreSettingByTypeResp
	(*SkinCareProjectInfo)(nil),                           // 459: manage.SkinCareProjectInfo
	(*AddSkinCareProjectReq)(nil),                         // 460: manage.AddSkinCareProjectReq
	(*AddSkinCareProjectRsp)(nil),                         // 461: manage.AddSkinCareProjectRsp
	(*DelSkinCareProjectReq)(nil),                         // 462: manage.DelSkinCareProjectReq
	(*DelSkinCareProjectRsp)(nil),                         // 463: manage.DelSkinCareProjectRsp
	(*ModSkinCareProjectReq)(nil),                         // 464: manage.ModSkinCareProjectReq
	(*ModSkinCareProjectRsp)(nil),                         // 465: manage.ModSkinCareProjectRsp
	(*ListSkinCareProjectReq)(nil),                        // 466: manage.ListSkinCareProjectReq
	(*ListSkinCareProjectRsp)(nil),                        // 467: manage.ListSkinCareProjectRsp
	(*OnOffSkinCareProjectReq)(nil),                       // 468: manage.OnOffSkinCareProjectReq
	(*OnOffSkinCareProjectRsp)(nil),                       // 469: manage.OnOffSkinCareProjectRsp
	(*PackageItem)(nil),                                   // 470: manage.PackageItem
	(*AddPackagesReq)(nil),                                // 471: manage.AddPackagesReq
	(*AddPackagesRsp)(nil),                                // 472: manage.AddPackagesRsp
	(*ListPackagesReq)(nil),                               // 473: manage.ListPackagesReq
	(*ListPackagesRsp)(nil),                               // 474: manage.ListPackagesRsp
	(*ModPackagesReq)(nil),                                // 475: manage.ModPackagesReq
	(*ModPackagesRsp)(nil),                                // 476: manage.ModPackagesRsp
	(*DelPackagesReq)(nil),                                // 477: manage.DelPackagesReq
	(*DelPackagesRsp)(nil),                                // 478: manage.DelPackagesRsp
	(*OrderItem)(nil),                                     // 479: manage.OrderItem
	(*ListOrderReq)(nil),                                  // 480: manage.ListOrderReq
	(*ListOrderRsp)(nil),                                  // 481: manage.ListOrderRsp
	(*WeiXinFansInfo)(nil),                                // 482: manage.WeiXinFansInfo
	(*AddWeiXinFansRequest)(nil),                          // 483: manage.AddWeiXinFansRequest
	(*AddWeiXinFansResp)(nil),                             // 484: manage.AddWeiXinFansResp
	(*DelWeiXinFansRequest)(nil),                          // 485: manage.DelWeiXinFansRequest
	(*DelWeiXinFansResp)(nil),                             // 486: manage.DelWeiXinFansResp
	(*GetAuthorizerAccessTokenByAppIdRequest)(nil),        // 487: manage.GetAuthorizerAccessTokenByAppIdRequest
	(*GetAuthorizerAccessTokenByAppIdResp)(nil),           // 488: manage.GetAuthorizerAccessTokenByAppIdResp
	(*SCANRequest)(nil),                                   // 489: manage.SCANRequest
	(*SCANResp)(nil),                                      // 490: manage.SCANResp
	(*SCANByRecordIdRequest)(nil),                         // 491: manage.SCANByRecordIdRequest
	(*SCANByRecordIdResp)(nil),                            // 492: manage.SCANByRecordIdResp
	(*AddWechatOfficialAccountPlatformReq)(nil),           // 493: manage.AddWechatOfficialAccountPlatformReq
	(*AddWechatOfficialAccountPlatformResp)(nil),          // 494: manage.AddWechatOfficialAccountPlatformResp
	(*DictItem)(nil),                                      // 495: manage.DictItem
	(*DictBrief)(nil),                                     // 496: manage.DictBrief
	(*AddDictReq)(nil),                                    // 497: manage.AddDictReq
	(*AddDictRsp)(nil),                                    // 498: manage.AddDictRsp
	(*DelDictReq)(nil),                                    // 499: manage.DelDictReq
	(*DelDictRsp)(nil),                                    // 500: manage.DelDictRsp
	(*ModDictReq)(nil),                                    // 501: manage.ModDictReq
	(*ModDictRsp)(nil),                                    // 502: manage.ModDictRsp
	(*ListDictReq)(nil),                                   // 503: manage.ListDictReq
	(*ListDictRsp)(nil),                                   // 504: manage.ListDictRsp
	(*AddThemeRsp)(nil),                                   // 505: manage.AddThemeRsp
	(*DelThemeRsp)(nil),                                   // 506: manage.DelThemeRsp
	(*ModThemeReq)(nil),                                   // 507: manage.ModThemeReq
	(*ModThemeRsp)(nil),                                   // 508: manage.ModThemeRsp
	(*StandbyTheme)(nil),                                  // 509: manage.StandbyTheme
	(*ListThemeReq)(nil),                                  // 510: manage.ListThemeReq
	(*ListThemeRsp)(nil),                                  // 511: manage.ListThemeRsp
	(*GetOssInfoRequest)(nil),                             // 512: manage.GetOssInfoRequest
	(*GetOssInfoResp)(nil),                                // 513: manage.GetOssInfoResp
	(*ExportDeviceUserRequest)(nil),                       // 514: manage.ExportDeviceUserRequest
	(*ExportDeviceUserResp)(nil),                          // 515: manage.ExportDeviceUserResp
	(*ExportExportMeasureSkinRecordRequest)(nil),          // 516: manage.ExportExportMeasureSkinRecordRequest
	(*ExportExportMeasureSkinRecordResp)(nil),             // 517: manage.ExportExportMeasureSkinRecordResp
	(*AddThemeReq)(nil),                                   // 518: manage.AddThemeReq
	(*DelThemeReq)(nil),                                   // 519: manage.DelThemeReq
	(*SystemSayingInfo)(nil),                              // 520: manage.SystemSayingInfo
	(*ListSystemSayingRequest)(nil),                       // 521: manage.ListSystemSayingRequest
	(*ListSystemSayingResponse)(nil),                      // 522: manage.ListSystemSayingResponse
	(*AddSystemSayingRequest)(nil),                        // 523: manage.AddSystemSayingRequest
	(*AddSystemSayingResponse)(nil),                       // 524: manage.AddSystemSayingResponse
	(*DelSystemSayingRequest)(nil),                        // 525: manage.DelSystemSayingRequest
	(*DelSystemSayingResponse)(nil),                       // 526: manage.DelSystemSayingResponse
	(*ModSystemSayingRequest)(nil),                        // 527: manage.ModSystemSayingRequest
	(*ModSystemSayingResponse)(nil),                       // 528: manage.ModSystemSayingResponse
	(*OnOffSystemSayingRequest)(nil),                      // 529: manage.OnOffSystemSayingRequest
	(*OnOffSystemSayingResponse)(nil),                     // 530: manage.OnOffSystemSayingResponse
	(*ListSystemEnumRequest)(nil),                         // 531: manage.ListSystemEnumRequest
	(*ListSystemEnumResp)(nil),                            // 532: manage.ListSystemEnumResp
	(*ListSystemEnumRespItem)(nil),                        // 533: manage.ListSystemEnumRespItem
	(*CourseClassIdNameInfo)(nil),                         // 534: manage.CourseClassIdNameInfo
	(*SkinTypeInfo)(nil),                                  // 535: manage.SkinTypeInfo
	(*ListSkinTypeRequest)(nil),                           // 536: manage.ListSkinTypeRequest
	(*ListSkinTypeResponse)(nil),                          // 537: manage.ListSkinTypeResponse
	(*AddSkinTypeRequest)(nil),                            // 538: manage.AddSkinTypeRequest
	(*AddSkinTypeResponse)(nil),                           // 539: manage.AddSkinTypeResponse
	(*DelSkinTypeRequest)(nil),                            // 540: manage.DelSkinTypeRequest
	(*DelSkinTypeResponse)(nil),                           // 541: manage.DelSkinTypeResponse
	(*ModSkinTypeRequest)(nil),                            // 542: manage.ModSkinTypeRequest
	(*ModSkinTypeResponse)(nil),                           // 543: manage.ModSkinTypeResponse
	(*OnOffSkinTypeRequest)(nil),                          // 544: manage.OnOffSkinTypeRequest
	(*OnOffSkinTypeResponse)(nil),                         // 545: manage.OnOffSkinTypeResponse
	(*GetLoginTokenCacheReq)(nil),                         // 546: manage.GetLoginTokenCacheReq
	(*GetLoginTokenCacheResp)(nil),                        // 547: manage.GetLoginTokenCacheResp
	(*SetLoginTokenCacheReq)(nil),                         // 548: manage.SetLoginTokenCacheReq
	(*SetLoginTokenCacheResp)(nil),                        // 549: manage.SetLoginTokenCacheResp
	nil,                                                   // 550: manage.SkinCareProductInfo.EffectMapEntry
	nil,                                                   // 551: manage.SkinCareProjectInfo.EffectMapEntry
}
var file_manage_proto_depIdxs = []int32{
	4,   // 0: manage.ManagerInfo.roleList:type_name -> manage.RoleInfo
	21,  // 1: manage.DurationSummaryResp.todayIncreaseUserCount:type_name -> manage.ExportSummaryItem
	21,  // 2: manage.DurationSummaryResp.yesterdayIncreaseUserCount:type_name -> manage.ExportSummaryItem
	21,  // 3: manage.DurationSummaryResp.totalUserCount:type_name -> manage.ExportSummaryItem
	21,  // 4: manage.DurationSummaryResp.todayMeasureCount:type_name -> manage.ExportSummaryItem
	21,  // 5: manage.DurationSummaryResp.yesterdayMeasureCount:type_name -> manage.ExportSummaryItem
	21,  // 6: manage.DurationSummaryResp.openStatusMachinesCount:type_name -> manage.ExportSummaryItem
	21,  // 7: manage.DurationSummaryResp.machinesCount:type_name -> manage.ExportSummaryItem
	21,  // 8: manage.DurationSummaryResp.skinCareProductCount:type_name -> manage.ExportSummaryItem
	21,  // 9: manage.DurationSummaryResp.cosmeticsProductCount:type_name -> manage.ExportSummaryItem
	21,  // 10: manage.DurationSummaryResp.todayUserActivityCount:type_name -> manage.ExportSummaryItem
	21,  // 11: manage.DurationSummaryResp.nextDayUserRetainedCount:type_name -> manage.ExportSummaryItem
	21,  // 12: manage.DurationSummaryResp.todaySkinReportOpenCount:type_name -> manage.ExportSummaryItem
	21,  // 13: manage.DurationSummaryResp.todaySkinRecordDimensionTendencyClickCount:type_name -> manage.ExportSummaryItem
	21,  // 14: manage.DurationSummaryResp.todaySkinReportDimensionDetailOpenCount:type_name -> manage.ExportSummaryItem
	21,  // 15: manage.DurationSummaryResp.todaySkinRecordOpenCount:type_name -> manage.ExportSummaryItem
	21,  // 16: manage.DurationSummaryResp.todayCoursePlayCount:type_name -> manage.ExportSummaryItem
	21,  // 17: manage.DurationSummaryResp.todayCourseCollectClickCount:type_name -> manage.ExportSummaryItem
	21,  // 18: manage.DurationSummaryResp.todayCourseProductClickCount:type_name -> manage.ExportSummaryItem
	21,  // 19: manage.DurationSummaryResp.todayCourseOpenCount:type_name -> manage.ExportSummaryItem
	21,  // 20: manage.DurationSummaryResp.yesterdayCourseOpenCount:type_name -> manage.ExportSummaryItem
	5,   // 21: manage.LoginResp.user:type_name -> manage.ManagerInfo
	362, // 22: manage.LoginResp.permissionList:type_name -> manage.PermissionInfo
	422, // 23: manage.LoginResp.err:type_name -> manage.ErrCode
	16,  // 24: manage.ListUserRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 25: manage.ListUserRequest.findOption:type_name -> manage.FindOptionCommon
	16,  // 26: manage.ListManagerRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 27: manage.ListManagerRequest.findOption:type_name -> manage.FindOptionCommon
	30,  // 28: manage.ListManagerResp.list:type_name -> manage.ListUserRespItem
	30,  // 29: manage.ListUserResp.list:type_name -> manage.ListUserRespItem
	5,   // 30: manage.ListUserRespItem.user:type_name -> manage.ManagerInfo
	422, // 31: manage.ModPasswdResp.err:type_name -> manage.ErrCode
	5,   // 32: manage.ModUserInfoRequest.user:type_name -> manage.ManagerInfo
	422, // 33: manage.ModUserInfoResp.err:type_name -> manage.ErrCode
	5,   // 34: manage.AddUserRequest.user:type_name -> manage.ManagerInfo
	422, // 35: manage.AddUserResp.err:type_name -> manage.ErrCode
	16,  // 36: manage.ExportUserRequest.filters:type_name -> manage.RunTimeFilters
	4,   // 37: manage.AddRoleInfoRequest.role:type_name -> manage.RoleInfo
	422, // 38: manage.AddRoleInfoResp.err:type_name -> manage.ErrCode
	4,   // 39: manage.ModRoleInfoRequest.role:type_name -> manage.RoleInfo
	422, // 40: manage.ModRoleInfoResp.err:type_name -> manage.ErrCode
	422, // 41: manage.DelRoleInfoResp.err:type_name -> manage.ErrCode
	16,  // 42: manage.ListRoleRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 43: manage.ListRoleRequest.findOption:type_name -> manage.FindOptionCommon
	53,  // 44: manage.ListRoleResp.list:type_name -> manage.ListRoleRespItem
	4,   // 45: manage.ListRoleRespItem.info:type_name -> manage.RoleInfo
	6,   // 46: manage.AddMeasureSkinDimensionRequest.info:type_name -> manage.MeasureSkinDimensionInfo
	422, // 47: manage.AddMeasureSkinDimensionResp.err:type_name -> manage.ErrCode
	16,  // 48: manage.ListMeasureSkinDimensionRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 49: manage.ListMeasureSkinDimensionRequest.findOption:type_name -> manage.FindOptionCommon
	62,  // 50: manage.ListMeasureSkinDimensionResp.list:type_name -> manage.ListMeasureSkinDimensionRespItem
	6,   // 51: manage.ListMeasureSkinDimensionRespItem.info:type_name -> manage.MeasureSkinDimensionInfo
	6,   // 52: manage.ModMeasureSkinDimensionRequest.info:type_name -> manage.MeasureSkinDimensionInfo
	7,   // 53: manage.AddMeasureDimensionSettingRequest.info:type_name -> manage.MeasureDimensionSettingInfo
	16,  // 54: manage.ListMeasureDimensionSettingRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 55: manage.ListMeasureDimensionSettingRequest.findOption:type_name -> manage.FindOptionCommon
	71,  // 56: manage.ListMeasureDimensionSettingResp.list:type_name -> manage.ListMeasureDimensionSettingRespItem
	7,   // 57: manage.ListMeasureDimensionSettingRespItem.info:type_name -> manage.MeasureDimensionSettingInfo
	7,   // 58: manage.ModMeasureDimensionSettingRequest.info:type_name -> manage.MeasureDimensionSettingInfo
	76,  // 59: manage.AddReportSettingReq.settings:type_name -> manage.ReportSetting
	422, // 60: manage.AddReportSettingRsp.err:type_name -> manage.ErrCode
	422, // 61: manage.DelReportSettingRsp.err:type_name -> manage.ErrCode
	422, // 62: manage.ModReportSettingReq.err:type_name -> manage.ErrCode
	76,  // 63: manage.ModReportSettingReq.settings:type_name -> manage.ReportSetting
	422, // 64: manage.ModReportSettingRsp.err:type_name -> manage.ErrCode
	422, // 65: manage.ListReportSettingRsp.err:type_name -> manage.ErrCode
	76,  // 66: manage.ListReportSettingRsp.settings:type_name -> manage.ReportSetting
	8,   // 67: manage.AddProductDictRequest.info:type_name -> manage.ProductDictInfo
	422, // 68: manage.AddProductDictResp.err:type_name -> manage.ErrCode
	16,  // 69: manage.ListProductDictRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 70: manage.ListProductDictRequest.findOption:type_name -> manage.FindOptionCommon
	89,  // 71: manage.ListProductDictResp.list:type_name -> manage.ListProductDictRespItem
	8,   // 72: manage.ListProductDictRespItem.info:type_name -> manage.ProductDictInfo
	8,   // 73: manage.ModProductDictRequest.info:type_name -> manage.ProductDictInfo
	422, // 74: manage.ModProductDictResp.err:type_name -> manage.ErrCode
	422, // 75: manage.DelProductDictResp.err:type_name -> manage.ErrCode
	9,   // 76: manage.AddPushMessageRequest.info:type_name -> manage.PushMessageInfo
	16,  // 77: manage.ListPushMessageRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 78: manage.ListPushMessageRequest.findOption:type_name -> manage.FindOptionCommon
	98,  // 79: manage.ListPushMessageResp.list:type_name -> manage.ListPushMessageRespItem
	9,   // 80: manage.ListPushMessageRespItem.info:type_name -> manage.PushMessageInfo
	9,   // 81: manage.ModPushMessageRequest.info:type_name -> manage.PushMessageInfo
	16,  // 82: manage.ListIssueRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 83: manage.ListIssueRequest.findOption:type_name -> manage.FindOptionCommon
	105, // 84: manage.ListIssueResp.list:type_name -> manage.ListIssueRespItem
	10,  // 85: manage.ListIssueRespItem.info:type_name -> manage.IssueInfo
	10,  // 86: manage.ModIssueRequest.info:type_name -> manage.IssueInfo
	16,  // 87: manage.ListMachinesRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 88: manage.ListMachinesRequest.findOption:type_name -> manage.FindOptionCommon
	112, // 89: manage.ListMachinesResp.list:type_name -> manage.ListMachinesRespItem
	113, // 90: manage.ListMachinesRespItem.info:type_name -> manage.MachinesInfo
	113, // 91: manage.AddMachinesRequest.info:type_name -> manage.MachinesInfo
	113, // 92: manage.ModMachinesRequest.info:type_name -> manage.MachinesInfo
	120, // 93: manage.ListMachinesIdleResRespItem.info:type_name -> manage.MachinesIdleResInfo
	16,  // 94: manage.ListMachinesIdleResRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 95: manage.ListMachinesIdleResRequest.findOption:type_name -> manage.FindOptionCommon
	121, // 96: manage.ListMachinesIdleResResp.list:type_name -> manage.ListMachinesIdleResRespItem
	120, // 97: manage.AddMachinesIdleResRequest.info:type_name -> manage.MachinesIdleResInfo
	120, // 98: manage.ModMachinesIdleResRequest.info:type_name -> manage.MachinesIdleResInfo
	550, // 99: manage.SkinCareProductInfo.effectMap:type_name -> manage.SkinCareProductInfo.EffectMapEntry
	130, // 100: manage.ListSkinCareProductItem.info:type_name -> manage.SkinCareProductInfo
	16,  // 101: manage.ListSkinCareProductRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 102: manage.ListSkinCareProductRequest.findOption:type_name -> manage.FindOptionCommon
	131, // 103: manage.ListSkinCareProductResp.list:type_name -> manage.ListSkinCareProductItem
	130, // 104: manage.AddSkinCareProductRequest.info:type_name -> manage.SkinCareProductInfo
	422, // 105: manage.AddSkinCareProductResp.err:type_name -> manage.ErrCode
	130, // 106: manage.ModSkinCareProductRequest.info:type_name -> manage.SkinCareProductInfo
	422, // 107: manage.ModSkinCareProductResp.err:type_name -> manage.ErrCode
	422, // 108: manage.BatchSyncRecommendProductRsp.err:type_name -> manage.ErrCode
	422, // 109: manage.BatchSyncRecommendProjectRsp.err:type_name -> manage.ErrCode
	12,  // 110: manage.ListCosmeticsProductItem.info:type_name -> manage.CosmeticsProductInfo
	16,  // 111: manage.ListCosmeticsProductRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 112: manage.ListCosmeticsProductRequest.findOption:type_name -> manage.FindOptionCommon
	148, // 113: manage.ListCosmeticsProductResp.list:type_name -> manage.ListCosmeticsProductItem
	12,  // 114: manage.AddCosmeticsProductRequest.info:type_name -> manage.CosmeticsProductInfo
	12,  // 115: manage.ModCosmeticsProductRequest.info:type_name -> manage.CosmeticsProductInfo
	161, // 116: manage.ListMichellPhanItem.info:type_name -> manage.MichellPhanInfo
	16,  // 117: manage.ListMichellPhanRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 118: manage.ListMichellPhanRequest.findOption:type_name -> manage.FindOptionCommon
	162, // 119: manage.ListMichellPhanResp.list:type_name -> manage.ListMichellPhanItem
	161, // 120: manage.AddMichellPhanRequest.info:type_name -> manage.MichellPhanInfo
	161, // 121: manage.ModMichellPhanRequest.info:type_name -> manage.MichellPhanInfo
	171, // 122: manage.ListSkinCareAdviceItem.info:type_name -> manage.SkinCareAdviceInfo
	16,  // 123: manage.ListSkinCareAdviceRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 124: manage.ListSkinCareAdviceRequest.findOption:type_name -> manage.FindOptionCommon
	172, // 125: manage.ListSkinCareAdviceResp.list:type_name -> manage.ListSkinCareAdviceItem
	171, // 126: manage.AddSkinCareAdviceRequest.info:type_name -> manage.SkinCareAdviceInfo
	171, // 127: manage.ModSkinCareAdviceRequest.info:type_name -> manage.SkinCareAdviceInfo
	185, // 128: manage.ListMeasureSkinRecordItem.info:type_name -> manage.MeasureSkinRecordInfo
	16,  // 129: manage.ListMeasureSkinRecordRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 130: manage.ListMeasureSkinRecordRequest.findOption:type_name -> manage.FindOptionCommon
	186, // 131: manage.ListMeasureSkinRecordResp.list:type_name -> manage.ListMeasureSkinRecordItem
	193, // 132: manage.MeasureSkinRecord.detectionResult:type_name -> manage.MeasureSkinRecordResult
	194, // 133: manage.MeasureSkinRecordResult.list:type_name -> manage.MeasureSkinRecordResultItem
	196, // 134: manage.MeasureSkinRecordResultItem.extraInfo:type_name -> manage.ExtraInfo
	195, // 135: manage.MeasureSkinRecordResultItem.symptomImg:type_name -> manage.SymptomImgSimple
	422, // 136: manage.GetMeasureSkinDetailResp.err:type_name -> manage.ErrCode
	192, // 137: manage.GetMeasureSkinDetailResp.record:type_name -> manage.MeasureSkinRecord
	198, // 138: manage.ListProductRecommendationWeightSettingItem.info:type_name -> manage.ProductRecommendationWeightSettingInfo
	16,  // 139: manage.ListProductRecommendationWeightSettingRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 140: manage.ListProductRecommendationWeightSettingRequest.findOption:type_name -> manage.FindOptionCommon
	199, // 141: manage.ListProductRecommendationWeightSettingResp.list:type_name -> manage.ListProductRecommendationWeightSettingItem
	198, // 142: manage.AddProductRecommendationWeightSettingRequest.info:type_name -> manage.ProductRecommendationWeightSettingInfo
	198, // 143: manage.ModProductRecommendationWeightSettingRequest.info:type_name -> manage.ProductRecommendationWeightSettingInfo
	16,  // 144: manage.ListDeviceUserRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 145: manage.ListDeviceUserRequest.findOption:type_name -> manage.FindOptionCommon
	211, // 146: manage.ListDeviceUserResp.list:type_name -> manage.ListDeviceUserRespItem
	208, // 147: manage.ListDeviceUserRespItem.info:type_name -> manage.DeviceUserInfo
	216, // 148: manage.AddCourseClassInfoRequest.courseClass:type_name -> manage.CourseClass
	216, // 149: manage.ModCourseClassInfoRequest.courseClass:type_name -> manage.CourseClass
	422, // 150: manage.DelCourseClassInfoResp.err:type_name -> manage.ErrCode
	16,  // 151: manage.GetCourseClassNameListRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 152: manage.GetCourseClassNameListRequest.findOption:type_name -> manage.FindOptionCommon
	229, // 153: manage.GetCourseClassNameListResp.list:type_name -> manage.ListCourseClassIdNameRespItem
	16,  // 154: manage.ListCourseClassRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 155: manage.ListCourseClassRequest.findOption:type_name -> manage.FindOptionCommon
	228, // 156: manage.ListCourseClassResp.list:type_name -> manage.ListCourseClassRespItem
	216, // 157: manage.ListCourseClassRespItem.info:type_name -> manage.CourseClass
	217, // 158: manage.ListCourseClassIdNameRespItem.info:type_name -> manage.CourseClassIdName
	422, // 159: manage.DownCourseClassResp.err:type_name -> manage.ErrCode
	234, // 160: manage.AddWiseManInfoRequest.wiseMan:type_name -> manage.WiseMan
	234, // 161: manage.ModWiseManInfoRequest.wiseMan:type_name -> manage.WiseMan
	244, // 162: manage.GetWiseManNameListResp.list:type_name -> manage.GetWiseManNameListRespItem
	235, // 163: manage.GetWiseManNameListRespItem.info:type_name -> manage.WiseManName
	16,  // 164: manage.ListWiseManRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 165: manage.ListWiseManRequest.findOption:type_name -> manage.FindOptionCommon
	247, // 166: manage.ListWiseManResp.list:type_name -> manage.ListWiseManRespItem
	234, // 167: manage.ListWiseManRespItem.info:type_name -> manage.WiseMan
	252, // 168: manage.AddCourseStepRequest.courseStep:type_name -> manage.CourseStep
	257, // 169: manage.ListCourseStepResp.courseStepList:type_name -> manage.ListCourseStepRespItem
	252, // 170: manage.ListCourseStepRespItem.courseStep:type_name -> manage.CourseStep
	258, // 171: manage.AddCourseInfoRequest.course:type_name -> manage.Course
	252, // 172: manage.AddCourseInfoRequest.courseStepList:type_name -> manage.CourseStep
	13,  // 173: manage.AddCourseInfoRequest.courseProductList:type_name -> manage.CourseProductInfo
	258, // 174: manage.ModCourseInfoRequest.course:type_name -> manage.Course
	252, // 175: manage.ModCourseInfoRequest.courseStepList:type_name -> manage.CourseStep
	13,  // 176: manage.ModCourseInfoRequest.courseProductList:type_name -> manage.CourseProductInfo
	16,  // 177: manage.ListCourseRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 178: manage.ListCourseRequest.findOption:type_name -> manage.FindOptionCommon
	268, // 179: manage.ListCourseResp.list:type_name -> manage.ListCourseRespItem
	258, // 180: manage.ListCourseRespItem.info:type_name -> manage.Course
	16,  // 181: manage.ListCanRecommendCourseNameRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 182: manage.ListCanRecommendCourseNameRequest.findOption:type_name -> manage.FindOptionCommon
	271, // 183: manage.ListCanRecommendCourseNameResp.list:type_name -> manage.ListCanRecommendCourseNameRespItem
	259, // 184: manage.ListCanRecommendCourseNameRespItem.info:type_name -> manage.CourseName
	257, // 185: manage.ListCourseStepAndProductResp.courseStepList:type_name -> manage.ListCourseStepRespItem
	13,  // 186: manage.ListCourseStepAndProductResp.courseProductList:type_name -> manage.CourseProductInfo
	278, // 187: manage.AddCourseRecommendInfoRequest.courseRecommend:type_name -> manage.CourseRecommend
	278, // 188: manage.ModCourseRecommendInfoRequest.courseRecommend:type_name -> manage.CourseRecommend
	16,  // 189: manage.ListCourseRecommendRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 190: manage.ListCourseRecommendRequest.findOption:type_name -> manage.FindOptionCommon
	287, // 191: manage.ListCourseRecommendResp.list:type_name -> manage.ListCourseRecommendRespItem
	278, // 192: manage.ListCourseRecommendRespItem.info:type_name -> manage.CourseRecommend
	534, // 193: manage.ListCourseRecommendRespItem.idNameInfoList:type_name -> manage.CourseClassIdNameInfo
	292, // 194: manage.AddDoctorInfoRequest.doctor:type_name -> manage.Doctor
	292, // 195: manage.ModDoctorInfoRequest.doctor:type_name -> manage.Doctor
	16,  // 196: manage.ListDoctorRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 197: manage.ListDoctorRequest.findOption:type_name -> manage.FindOptionCommon
	301, // 198: manage.ListDoctorResp.list:type_name -> manage.ListDoctorRespItem
	292, // 199: manage.ListDoctorRespItem.info:type_name -> manage.Doctor
	11,  // 200: manage.AddOperationLogRequest.info:type_name -> manage.OperationLogInfo
	16,  // 201: manage.ListOperationLogRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 202: manage.ListOperationLogRequest.findOption:type_name -> manage.FindOptionCommon
	310, // 203: manage.ListOperationLogResp.list:type_name -> manage.ListOperationLogRespItem
	11,  // 204: manage.ListOperationLogRespItem.info:type_name -> manage.OperationLogInfo
	16,  // 205: manage.ListImportTaskRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 206: manage.ListImportTaskRequest.findOption:type_name -> manage.FindOptionCommon
	313, // 207: manage.ListImportTaskResp.list:type_name -> manage.ListImportTaskRespItem
	15,  // 208: manage.ListImportTaskRespItem.info:type_name -> manage.ImportTask
	16,  // 209: manage.ListDataPointRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 210: manage.ListDataPointRequest.findOption:type_name -> manage.FindOptionCommon
	319, // 211: manage.ListDataPointResp.list:type_name -> manage.ListDataPointRespItem
	316, // 212: manage.ListDataPointRespItem.info:type_name -> manage.DataPoint
	14,  // 213: manage.ListDeviceVersionItem.info:type_name -> manage.DeviceVersionInfo
	16,  // 214: manage.ListDeviceVersionRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 215: manage.ListDeviceVersionRequest.findOption:type_name -> manage.FindOptionCommon
	320, // 216: manage.ListDeviceVersionResp.list:type_name -> manage.ListDeviceVersionItem
	14,  // 217: manage.AddDeviceVersionRequest.info:type_name -> manage.DeviceVersionInfo
	14,  // 218: manage.ModDeviceVersionRequest.info:type_name -> manage.DeviceVersionInfo
	330, // 219: manage.GetYouZanOnSaleListResp.list:type_name -> manage.YouZanOnSaleItem
	333, // 220: manage.GetYouZanItemDetailResp.skuList:type_name -> manage.SkuItem
	335, // 221: manage.GetCheckPasswordListResp.list:type_name -> manage.CheckPasswordInfo
	16,  // 222: manage.GetListWhiteListRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 223: manage.GetListWhiteListRequest.findOption:type_name -> manage.FindOptionCommon
	340, // 224: manage.GetListWhiteListResp.list:type_name -> manage.ListWhiteInfo
	340, // 225: manage.AddListWhiteListRequest.info:type_name -> manage.ListWhiteInfo
	16,  // 226: manage.ListAppConfigRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 227: manage.ListAppConfigRequest.findOption:type_name -> manage.FindOptionCommon
	349, // 228: manage.AddAppConfigRequest.info:type_name -> manage.AppConfigInfo
	349, // 229: manage.ModAppConfigRequest.info:type_name -> manage.AppConfigInfo
	349, // 230: manage.ListAppConfigResp.list:type_name -> manage.AppConfigInfo
	0,   // 231: manage.BusinessInfo.versions:type_name -> manage.VersionType
	16,  // 232: manage.ListBusinessRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 233: manage.ListBusinessRequest.findOption:type_name -> manage.FindOptionCommon
	360, // 234: manage.ListBusinessResp.list:type_name -> manage.BusinessInfo
	360, // 235: manage.AddBusinessRequest.info:type_name -> manage.BusinessInfo
	360, // 236: manage.CreateBusinessRequest.info:type_name -> manage.BusinessInfo
	422, // 237: manage.CreateBusinessResp.err:type_name -> manage.ErrCode
	422, // 238: manage.AddBusinessResp.err:type_name -> manage.ErrCode
	360, // 239: manage.ModBusinessRequest.info:type_name -> manage.BusinessInfo
	16,  // 240: manage.ListShopInfoRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 241: manage.ListShopInfoRequest.findOption:type_name -> manage.FindOptionCommon
	361, // 242: manage.ListShopInfoResp.list:type_name -> manage.ShopInfo
	361, // 243: manage.AddShopInfoRequest.info:type_name -> manage.ShopInfo
	361, // 244: manage.ModShopInfoRequest.info:type_name -> manage.ShopInfo
	422, // 245: manage.ModShopInfoResp.err:type_name -> manage.ErrCode
	422, // 246: manage.DelShopInfoResp.err:type_name -> manage.ErrCode
	16,  // 247: manage.ListPermissionRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 248: manage.ListPermissionRequest.findOption:type_name -> manage.FindOptionCommon
	362, // 249: manage.ListPermissionResp.list:type_name -> manage.PermissionInfo
	362, // 250: manage.AddPermissionRequest.info:type_name -> manage.PermissionInfo
	362, // 251: manage.ModPermissionRequest.info:type_name -> manage.PermissionInfo
	362, // 252: manage.ListPermissionByRoleIdResp.list:type_name -> manage.PermissionInfo
	362, // 253: manage.ListPermissionByManageIdResp.list:type_name -> manage.PermissionInfo
	16,  // 254: manage.ListManagerRoleRelationRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 255: manage.ListManagerRoleRelationRequest.findOption:type_name -> manage.FindOptionCommon
	393, // 256: manage.ListManagerRoleRelationResp.list:type_name -> manage.ManagerRoleRelationInfo
	393, // 257: manage.AddManagerRoleRelationRequest.info:type_name -> manage.ManagerRoleRelationInfo
	393, // 258: manage.ModManagerRoleRelationRequest.info:type_name -> manage.ManagerRoleRelationInfo
	393, // 259: manage.ListManagerRoleRelationByManageIdResp.list:type_name -> manage.ManagerRoleRelationInfo
	16,  // 260: manage.ListRolePermissionRelationRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 261: manage.ListRolePermissionRelationRequest.findOption:type_name -> manage.FindOptionCommon
	408, // 262: manage.ListRolePermissionRelationResp.list:type_name -> manage.RolePermissionRelationInfo
	408, // 263: manage.AddRolePermissionRelationRequest.info:type_name -> manage.RolePermissionRelationInfo
	408, // 264: manage.ModRolePermissionRelationRequest.info:type_name -> manage.RolePermissionRelationInfo
	5,   // 265: manage.LoginWithSmsCodeResp.user:type_name -> manage.ManagerInfo
	362, // 266: manage.LoginWithSmsCodeResp.permissionList:type_name -> manage.PermissionInfo
	422, // 267: manage.LoginWithSmsCodeResp.errorCode:type_name -> manage.ErrCode
	422, // 268: manage.GetSmsCodeByCreateBusinessResp.err:type_name -> manage.ErrCode
	422, // 269: manage.GetSmsCodeResp.err:type_name -> manage.ErrCode
	360, // 270: manage.GetBusinessByIdResp.info:type_name -> manage.BusinessInfo
	422, // 271: manage.GetPreAuthCodeResp.err:type_name -> manage.ErrCode
	422, // 272: manage.AuthorizationEventReceptionConfigResp.err:type_name -> manage.ErrCode
	422, // 273: manage.GetAuthorizerAccessTokenResp.err:type_name -> manage.ErrCode
	422, // 274: manage.GetAuthorizerInfoResp.err:type_name -> manage.ErrCode
	422, // 275: manage.ApiQueryAuthResp.err:type_name -> manage.ErrCode
	422, // 276: manage.GetWechatOfficialAccountPlatformResp.err:type_name -> manage.ErrCode
	437, // 277: manage.GetWechatOfficialAccountPlatformResp.info:type_name -> manage.WechatOfficialAccountPlatform
	437, // 278: manage.ModWechatOfficialAccountPlatformReq.info:type_name -> manage.WechatOfficialAccountPlatform
	422, // 279: manage.ModWechatOfficialAccountPlatformResp.err:type_name -> manage.ErrCode
	5,   // 280: manage.SimpleModUserInfoReq.user:type_name -> manage.ManagerInfo
	422, // 281: manage.SimpleModUserInfoResp.err:type_name -> manage.ErrCode
	4,   // 282: manage.GetRoleInfoByShopIdResp.list:type_name -> manage.RoleInfo
	422, // 283: manage.GetRoleInfoByShopIdResp.err:type_name -> manage.ErrCode
	446, // 284: manage.ScoreSettingInfo.ageInfoList:type_name -> manage.AgeInfo
	16,  // 285: manage.ListScoreSettingRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 286: manage.ListScoreSettingRequest.findOption:type_name -> manage.FindOptionCommon
	449, // 287: manage.ListScoreSettingResp.list:type_name -> manage.ScoreSettingListInfo
	445, // 288: manage.AddScoreSettingRequest.info:type_name -> manage.ScoreSettingInfo
	445, // 289: manage.ModScoreSettingRequest.info:type_name -> manage.ScoreSettingInfo
	448, // 290: manage.GetScoreSettingByTypeResp.list:type_name -> manage.ScoreSettingInfoV2
	551, // 291: manage.SkinCareProjectInfo.effectMap:type_name -> manage.SkinCareProjectInfo.EffectMapEntry
	459, // 292: manage.AddSkinCareProjectReq.info:type_name -> manage.SkinCareProjectInfo
	422, // 293: manage.AddSkinCareProjectRsp.err:type_name -> manage.ErrCode
	459, // 294: manage.ModSkinCareProjectReq.info:type_name -> manage.SkinCareProjectInfo
	422, // 295: manage.ModSkinCareProjectRsp.err:type_name -> manage.ErrCode
	16,  // 296: manage.ListSkinCareProjectReq.filters:type_name -> manage.RunTimeFilters
	17,  // 297: manage.ListSkinCareProjectReq.findOption:type_name -> manage.FindOptionCommon
	459, // 298: manage.ListSkinCareProjectRsp.list:type_name -> manage.SkinCareProjectInfo
	2,   // 299: manage.PackageItem.types:type_name -> manage.SkinAnalysisType
	2,   // 300: manage.AddPackagesReq.types:type_name -> manage.SkinAnalysisType
	422, // 301: manage.AddPackagesRsp.err:type_name -> manage.ErrCode
	16,  // 302: manage.ListPackagesReq.filters:type_name -> manage.RunTimeFilters
	17,  // 303: manage.ListPackagesReq.findOption:type_name -> manage.FindOptionCommon
	422, // 304: manage.ListPackagesRsp.err:type_name -> manage.ErrCode
	470, // 305: manage.ListPackagesRsp.list:type_name -> manage.PackageItem
	2,   // 306: manage.ModPackagesReq.types:type_name -> manage.SkinAnalysisType
	422, // 307: manage.ModPackagesRsp.err:type_name -> manage.ErrCode
	422, // 308: manage.DelPackagesRsp.err:type_name -> manage.ErrCode
	16,  // 309: manage.ListOrderReq.filters:type_name -> manage.RunTimeFilters
	17,  // 310: manage.ListOrderReq.findOption:type_name -> manage.FindOptionCommon
	422, // 311: manage.ListOrderRsp.err:type_name -> manage.ErrCode
	479, // 312: manage.ListOrderRsp.list:type_name -> manage.OrderItem
	482, // 313: manage.AddWeiXinFansRequest.info:type_name -> manage.WeiXinFansInfo
	482, // 314: manage.DelWeiXinFansRequest.info:type_name -> manage.WeiXinFansInfo
	437, // 315: manage.AddWechatOfficialAccountPlatformReq.info:type_name -> manage.WechatOfficialAccountPlatform
	422, // 316: manage.AddWechatOfficialAccountPlatformResp.err:type_name -> manage.ErrCode
	3,   // 317: manage.AddDictReq.dictType:type_name -> manage.DictType
	496, // 318: manage.AddDictReq.brief:type_name -> manage.DictBrief
	422, // 319: manage.AddDictRsp.err:type_name -> manage.ErrCode
	3,   // 320: manage.DelDictReq.dictType:type_name -> manage.DictType
	422, // 321: manage.DelDictRsp.err:type_name -> manage.ErrCode
	3,   // 322: manage.ModDictReq.dictType:type_name -> manage.DictType
	496, // 323: manage.ModDictReq.brief:type_name -> manage.DictBrief
	422, // 324: manage.ModDictRsp.err:type_name -> manage.ErrCode
	3,   // 325: manage.ListDictReq.dictType:type_name -> manage.DictType
	16,  // 326: manage.ListDictReq.filters:type_name -> manage.RunTimeFilters
	17,  // 327: manage.ListDictReq.findOption:type_name -> manage.FindOptionCommon
	495, // 328: manage.ListDictRsp.list:type_name -> manage.DictItem
	422, // 329: manage.AddThemeRsp.err:type_name -> manage.ErrCode
	422, // 330: manage.DelThemeRsp.err:type_name -> manage.ErrCode
	422, // 331: manage.ModThemeReq.err:type_name -> manage.ErrCode
	422, // 332: manage.ModThemeRsp.err:type_name -> manage.ErrCode
	16,  // 333: manage.ListThemeReq.filters:type_name -> manage.RunTimeFilters
	17,  // 334: manage.ListThemeReq.findOption:type_name -> manage.FindOptionCommon
	422, // 335: manage.ListThemeRsp.err:type_name -> manage.ErrCode
	509, // 336: manage.ListThemeRsp.themeList:type_name -> manage.StandbyTheme
	422, // 337: manage.GetOssInfoResp.err:type_name -> manage.ErrCode
	16,  // 338: manage.ExportDeviceUserRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 339: manage.ExportDeviceUserRequest.findOption:type_name -> manage.FindOptionCommon
	422, // 340: manage.ExportDeviceUserResp.err:type_name -> manage.ErrCode
	16,  // 341: manage.ExportExportMeasureSkinRecordRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 342: manage.ExportExportMeasureSkinRecordRequest.findOption:type_name -> manage.FindOptionCommon
	422, // 343: manage.ExportExportMeasureSkinRecordResp.err:type_name -> manage.ErrCode
	16,  // 344: manage.ListSystemSayingRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 345: manage.ListSystemSayingRequest.findOption:type_name -> manage.FindOptionCommon
	520, // 346: manage.ListSystemSayingResponse.list:type_name -> manage.SystemSayingInfo
	520, // 347: manage.AddSystemSayingRequest.info:type_name -> manage.SystemSayingInfo
	422, // 348: manage.AddSystemSayingResponse.err:type_name -> manage.ErrCode
	422, // 349: manage.DelSystemSayingResponse.err:type_name -> manage.ErrCode
	520, // 350: manage.ModSystemSayingRequest.info:type_name -> manage.SystemSayingInfo
	422, // 351: manage.ModSystemSayingResponse.err:type_name -> manage.ErrCode
	422, // 352: manage.OnOffSystemSayingResponse.err:type_name -> manage.ErrCode
	16,  // 353: manage.ListSystemEnumRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 354: manage.ListSystemEnumRequest.find_option:type_name -> manage.FindOptionCommon
	533, // 355: manage.ListSystemEnumResp.list:type_name -> manage.ListSystemEnumRespItem
	16,  // 356: manage.ListSkinTypeRequest.filters:type_name -> manage.RunTimeFilters
	17,  // 357: manage.ListSkinTypeRequest.findOption:type_name -> manage.FindOptionCommon
	535, // 358: manage.ListSkinTypeResponse.list:type_name -> manage.SkinTypeInfo
	535, // 359: manage.AddSkinTypeRequest.info:type_name -> manage.SkinTypeInfo
	422, // 360: manage.AddSkinTypeResponse.err:type_name -> manage.ErrCode
	422, // 361: manage.DelSkinTypeResponse.err:type_name -> manage.ErrCode
	535, // 362: manage.ModSkinTypeRequest.info:type_name -> manage.SkinTypeInfo
	422, // 363: manage.ModSkinTypeResponse.err:type_name -> manage.ErrCode
	422, // 364: manage.OnOffSkinTypeResponse.err:type_name -> manage.ErrCode
	422, // 365: manage.GetLoginTokenCacheResp.err:type_name -> manage.ErrCode
	422, // 366: manage.SetLoginTokenCacheResp.err:type_name -> manage.ErrCode
	18,  // 367: manage.Manage.Summary:input_type -> manage.SummaryRequest
	20,  // 368: manage.Manage.ExportSummary:input_type -> manage.ExportSummaryRequest
	24,  // 369: manage.Manage.Login:input_type -> manage.LoginRequest
	27,  // 370: manage.Manage.ListManager:input_type -> manage.ListManagerRequest
	31,  // 371: manage.Manage.ModPasswd:input_type -> manage.ModPasswdRequest
	33,  // 372: manage.Manage.ModUserInfo:input_type -> manage.ModUserInfoRequest
	35,  // 373: manage.Manage.DelUser:input_type -> manage.DelUserRequest
	39,  // 374: manage.Manage.AddUser:input_type -> manage.AddUserRequest
	41,  // 375: manage.Manage.ExportUser:input_type -> manage.ExportUserRequest
	43,  // 376: manage.Manage.UploadFile:input_type -> manage.UploadFileRequest
	45,  // 377: manage.Manage.AddRoleInfo:input_type -> manage.AddRoleInfoRequest
	47,  // 378: manage.Manage.ModRoleInfo:input_type -> manage.ModRoleInfoRequest
	49,  // 379: manage.Manage.DelRoleInfo:input_type -> manage.DelRoleInfoRequest
	51,  // 380: manage.Manage.ListRole:input_type -> manage.ListRoleRequest
	54,  // 381: manage.Manage.FronzenRole:input_type -> manage.FrozenRoleRequest
	56,  // 382: manage.Manage.RecoverRole:input_type -> manage.RecoverRoleRequest
	58,  // 383: manage.Manage.AddMeasureSkinDimension:input_type -> manage.AddMeasureSkinDimensionRequest
	60,  // 384: manage.Manage.ListMeasureSkinDimension:input_type -> manage.ListMeasureSkinDimensionRequest
	63,  // 385: manage.Manage.ModMeasureSkinDimension:input_type -> manage.ModMeasureSkinDimensionRequest
	65,  // 386: manage.Manage.DelMeasureSkinDimension:input_type -> manage.DelMeasureSkinDimensionRequest
	67,  // 387: manage.Manage.AddMeasureDimensionSetting:input_type -> manage.AddMeasureDimensionSettingRequest
	69,  // 388: manage.Manage.ListMeasureDimensionSetting:input_type -> manage.ListMeasureDimensionSettingRequest
	72,  // 389: manage.Manage.ModMeasureDimensionSetting:input_type -> manage.ModMeasureDimensionSettingRequest
	74,  // 390: manage.Manage.DelMeasureDimensionSetting:input_type -> manage.DelMeasureDimensionSettingRequest
	77,  // 391: manage.Manage.AddReportSetting:input_type -> manage.AddReportSettingReq
	79,  // 392: manage.Manage.DelReportSetting:input_type -> manage.DelReportSettingReq
	81,  // 393: manage.Manage.ModReportSetting:input_type -> manage.ModReportSettingReq
	83,  // 394: manage.Manage.ListReportSetting:input_type -> manage.ListReportSettingReq
	85,  // 395: manage.Manage.AddProductDict:input_type -> manage.AddProductDictRequest
	87,  // 396: manage.Manage.ListProductDict:input_type -> manage.ListProductDictRequest
	90,  // 397: manage.Manage.ModProductDict:input_type -> manage.ModProductDictRequest
	92,  // 398: manage.Manage.DelProductDict:input_type -> manage.DelProductDictRequest
	497, // 399: manage.Manage.AddDict:input_type -> manage.AddDictReq
	499, // 400: manage.Manage.DelDict:input_type -> manage.DelDictReq
	501, // 401: manage.Manage.ModDict:input_type -> manage.ModDictReq
	503, // 402: manage.Manage.ListDict:input_type -> manage.ListDictReq
	518, // 403: manage.Manage.AddTheme:input_type -> manage.AddThemeReq
	519, // 404: manage.Manage.DelTheme:input_type -> manage.DelThemeReq
	507, // 405: manage.Manage.ModTheme:input_type -> manage.ModThemeReq
	510, // 406: manage.Manage.ListTheme:input_type -> manage.ListThemeReq
	94,  // 407: manage.Manage.AddPushMessage:input_type -> manage.AddPushMessageRequest
	96,  // 408: manage.Manage.ListPushMessage:input_type -> manage.ListPushMessageRequest
	99,  // 409: manage.Manage.ModPushMessage:input_type -> manage.ModPushMessageRequest
	101, // 410: manage.Manage.DelPushMessage:input_type -> manage.DelPushMessageRequest
	103, // 411: manage.Manage.ListIssue:input_type -> manage.ListIssueRequest
	106, // 412: manage.Manage.ModIssue:input_type -> manage.ModIssueRequest
	108, // 413: manage.Manage.DelIssue:input_type -> manage.DelIssueRequest
	110, // 414: manage.Manage.ListMachines:input_type -> manage.ListMachinesRequest
	114, // 415: manage.Manage.AddMachines:input_type -> manage.AddMachinesRequest
	116, // 416: manage.Manage.DelMachines:input_type -> manage.DelMachinesRequest
	118, // 417: manage.Manage.ModMachines:input_type -> manage.ModMachinesRequest
	122, // 418: manage.Manage.ListMachinesIdleRes:input_type -> manage.ListMachinesIdleResRequest
	124, // 419: manage.Manage.AddMachinesIdleRes:input_type -> manage.AddMachinesIdleResRequest
	126, // 420: manage.Manage.DelMachinesIdleRes:input_type -> manage.DelMachinesIdleResRequest
	128, // 421: manage.Manage.ModMachinesIdleRes:input_type -> manage.ModMachinesIdleResRequest
	132, // 422: manage.Manage.ListSkinCareProduct:input_type -> manage.ListSkinCareProductRequest
	134, // 423: manage.Manage.AddSkinCareProduct:input_type -> manage.AddSkinCareProductRequest
	136, // 424: manage.Manage.DelSkinCareProduct:input_type -> manage.DelSkinCareProductRequest
	138, // 425: manage.Manage.ModSkinCareProduct:input_type -> manage.ModSkinCareProductRequest
	140, // 426: manage.Manage.UpSkinCareProduct:input_type -> manage.UpSkinCareProductRequest
	142, // 427: manage.Manage.DownSkinCareProduct:input_type -> manage.DownSkinCareProductRequest
	144, // 428: manage.Manage.BatchSyncRecommendProduct:input_type -> manage.BatchSyncRecommendProductReq
	146, // 429: manage.Manage.BatchSyncRecommendProject:input_type -> manage.BatchSyncRecommendProjectReq
	460, // 430: manage.Manage.AddSkinCareProject:input_type -> manage.AddSkinCareProjectReq
	462, // 431: manage.Manage.DelSkinCareProject:input_type -> manage.DelSkinCareProjectReq
	464, // 432: manage.Manage.ModSkinCareProject:input_type -> manage.ModSkinCareProjectReq
	466, // 433: manage.Manage.ListSkinCareProject:input_type -> manage.ListSkinCareProjectReq
	468, // 434: manage.Manage.OnOffSkinCareProject:input_type -> manage.OnOffSkinCareProjectReq
	149, // 435: manage.Manage.ListCosmeticsProduct:input_type -> manage.ListCosmeticsProductRequest
	151, // 436: manage.Manage.AddCosmeticsProduct:input_type -> manage.AddCosmeticsProductRequest
	153, // 437: manage.Manage.DelCosmeticsProduct:input_type -> manage.DelCosmeticsProductRequest
	155, // 438: manage.Manage.ModCosmeticsProduct:input_type -> manage.ModCosmeticsProductRequest
	157, // 439: manage.Manage.UpCosmeticsProduct:input_type -> manage.UpCosmeticsProductRequest
	159, // 440: manage.Manage.DownCosmeticsProduct:input_type -> manage.DownCosmeticsProductRequest
	163, // 441: manage.Manage.ListMichellPhan:input_type -> manage.ListMichellPhanRequest
	165, // 442: manage.Manage.AddMichellPhan:input_type -> manage.AddMichellPhanRequest
	167, // 443: manage.Manage.DelMichellPhan:input_type -> manage.DelMichellPhanRequest
	169, // 444: manage.Manage.ModMichellPhan:input_type -> manage.ModMichellPhanRequest
	173, // 445: manage.Manage.ListSkinCareAdvice:input_type -> manage.ListSkinCareAdviceRequest
	175, // 446: manage.Manage.AddSkinCareAdvice:input_type -> manage.AddSkinCareAdviceRequest
	177, // 447: manage.Manage.DelSkinCareAdvice:input_type -> manage.DelSkinCareAdviceRequest
	179, // 448: manage.Manage.ModSkinCareAdvice:input_type -> manage.ModSkinCareAdviceRequest
	181, // 449: manage.Manage.UpSkinCareAdvice:input_type -> manage.UpSkinCareAdviceRequest
	183, // 450: manage.Manage.DownSkinCareAdvice:input_type -> manage.DownSkinCareAdviceRequest
	187, // 451: manage.Manage.ListMeasureSkinRecord:input_type -> manage.ListMeasureSkinRecordRequest
	191, // 452: manage.Manage.GetMeasureSkinDetail:input_type -> manage.GetMeasureSkinDetailRequest
	189, // 453: manage.Manage.DelMeasureSkinRecord:input_type -> manage.DelMeasureSkinRecordRequest
	200, // 454: manage.Manage.ListProductRecommendationWeightSetting:input_type -> manage.ListProductRecommendationWeightSettingRequest
	202, // 455: manage.Manage.AddProductRecommendationWeightSetting:input_type -> manage.AddProductRecommendationWeightSettingRequest
	204, // 456: manage.Manage.DelProductRecommendationWeightSetting:input_type -> manage.DelProductRecommendationWeightSettingRequest
	206, // 457: manage.Manage.ModProductRecommendationWeightSetting:input_type -> manage.ModProductRecommendationWeightSettingRequest
	209, // 458: manage.Manage.ListDeviceUser:input_type -> manage.ListDeviceUserRequest
	212, // 459: manage.Manage.FrozenDeviceUser:input_type -> manage.FrozenDeviceUserRequest
	214, // 460: manage.Manage.RecoverDeviceUser:input_type -> manage.RecoverDeviceUserRequest
	218, // 461: manage.Manage.AddCourseClassInfo:input_type -> manage.AddCourseClassInfoRequest
	220, // 462: manage.Manage.ModCourseClassInfo:input_type -> manage.ModCourseClassInfoRequest
	222, // 463: manage.Manage.DelCourseClassInfo:input_type -> manage.DelCourseClassInfoRequest
	226, // 464: manage.Manage.ListCourseClass:input_type -> manage.ListCourseClassRequest
	224, // 465: manage.Manage.GetCourseClassNameList:input_type -> manage.GetCourseClassNameListRequest
	230, // 466: manage.Manage.UpCourseClass:input_type -> manage.UpCourseClassRequest
	232, // 467: manage.Manage.DownCourseClass:input_type -> manage.DownCourseClassRequest
	329, // 468: manage.Manage.GetYouZanOnSaleList:input_type -> manage.GetYouZanOnSaleListRequest
	332, // 469: manage.Manage.GetYouZanItemDetail:input_type -> manage.GetYouZanItemDetailRequest
	236, // 470: manage.Manage.AddWiseManInfo:input_type -> manage.AddWiseManInfoRequest
	238, // 471: manage.Manage.ModWiseManInfo:input_type -> manage.ModWiseManInfoRequest
	240, // 472: manage.Manage.DelWiseManInfo:input_type -> manage.DelWiseManInfoRequest
	245, // 473: manage.Manage.ListWiseMan:input_type -> manage.ListWiseManRequest
	242, // 474: manage.Manage.GetWiseManNameList:input_type -> manage.GetWiseManNameListRequest
	248, // 475: manage.Manage.UpWiseMan:input_type -> manage.UpWiseManRequest
	250, // 476: manage.Manage.DownWiseMan:input_type -> manage.DownWiseManRequest
	260, // 477: manage.Manage.AddCourseInfo:input_type -> manage.AddCourseInfoRequest
	262, // 478: manage.Manage.ModCourseInfo:input_type -> manage.ModCourseInfoRequest
	264, // 479: manage.Manage.DelCourseInfo:input_type -> manage.DelCourseInfoRequest
	266, // 480: manage.Manage.ListCourse:input_type -> manage.ListCourseRequest
	269, // 481: manage.Manage.ListCanRecommendCourseName:input_type -> manage.ListCanRecommendCourseNameRequest
	276, // 482: manage.Manage.ListCourseStepAndProduct:input_type -> manage.ListCourseStepAndProductRequest
	272, // 483: manage.Manage.UpCourse:input_type -> manage.UpCourseRequest
	274, // 484: manage.Manage.DownCourse:input_type -> manage.DownCourseRequest
	279, // 485: manage.Manage.AddCourseRecommendInfo:input_type -> manage.AddCourseRecommendInfoRequest
	281, // 486: manage.Manage.ModCourseRecommendInfo:input_type -> manage.ModCourseRecommendInfoRequest
	283, // 487: manage.Manage.DelCourseRecommendInfo:input_type -> manage.DelCourseRecommendInfoRequest
	285, // 488: manage.Manage.ListCourseRecommend:input_type -> manage.ListCourseRecommendRequest
	288, // 489: manage.Manage.UpCourseRecommend:input_type -> manage.UpCourseRecommendRequest
	290, // 490: manage.Manage.DownCourseRecommend:input_type -> manage.DownCourseRecommendRequest
	293, // 491: manage.Manage.AddDoctorInfo:input_type -> manage.AddDoctorInfoRequest
	295, // 492: manage.Manage.ModDoctorInfo:input_type -> manage.ModDoctorInfoRequest
	297, // 493: manage.Manage.DelDoctorInfo:input_type -> manage.DelDoctorInfoRequest
	299, // 494: manage.Manage.ListDoctor:input_type -> manage.ListDoctorRequest
	302, // 495: manage.Manage.UpDoctor:input_type -> manage.UpDoctorRequest
	304, // 496: manage.Manage.DownDoctor:input_type -> manage.DownDoctorRequest
	306, // 497: manage.Manage.AddOperationLog:input_type -> manage.AddOperationLogRequest
	308, // 498: manage.Manage.ListOperationLog:input_type -> manage.ListOperationLogRequest
	311, // 499: manage.Manage.ListImportTask:input_type -> manage.ListImportTaskRequest
	314, // 500: manage.Manage.AddImportTask:input_type -> manage.AddImportTaskRequest
	317, // 501: manage.Manage.ListDataPoint:input_type -> manage.ListDataPointRequest
	323, // 502: manage.Manage.AddDeviceVersionInfo:input_type -> manage.AddDeviceVersionRequest
	325, // 503: manage.Manage.ModDeviceVersionInfo:input_type -> manage.ModDeviceVersionRequest
	327, // 504: manage.Manage.DelDeviceVersionInfo:input_type -> manage.DelDeviceVersionRequest
	321, // 505: manage.Manage.ListDeviceVersion:input_type -> manage.ListDeviceVersionRequest
	336, // 506: manage.Manage.ListCheckPasswordList:input_type -> manage.GetCheckPasswordListRequest
	338, // 507: manage.Manage.SetCheckPasswordTimer:input_type -> manage.SetCheckPasswordTimerRequest
	341, // 508: manage.Manage.ListWhiteList:input_type -> manage.GetListWhiteListRequest
	345, // 509: manage.Manage.AddWhiteList:input_type -> manage.AddListWhiteListRequest
	343, // 510: manage.Manage.DelWhiteList:input_type -> manage.DelListWhiteListRequest
	347, // 511: manage.Manage.SyncWhiteList:input_type -> manage.SyncWhiteListRequest
	350, // 512: manage.Manage.ListAppConfig:input_type -> manage.ListAppConfigRequest
	351, // 513: manage.Manage.AddAppConfig:input_type -> manage.AddAppConfigRequest
	352, // 514: manage.Manage.DelAppConfig:input_type -> manage.DelAppConfigRequest
	353, // 515: manage.Manage.ModAppConfig:input_type -> manage.ModAppConfigRequest
	358, // 516: manage.Manage.SyncAppConfig:input_type -> manage.SyncAppConfigRequest
	363, // 517: manage.Manage.ListBusiness:input_type -> manage.ListBusinessRequest
	366, // 518: manage.Manage.CreateBusiness:input_type -> manage.CreateBusinessRequest
	365, // 519: manage.Manage.AddBusiness:input_type -> manage.AddBusinessRequest
	369, // 520: manage.Manage.ModBusiness:input_type -> manage.ModBusinessRequest
	371, // 521: manage.Manage.DelBusiness:input_type -> manage.DelBusinessRequest
	373, // 522: manage.Manage.ListShopInfo:input_type -> manage.ListShopInfoRequest
	375, // 523: manage.Manage.AddShopInfo:input_type -> manage.AddShopInfoRequest
	377, // 524: manage.Manage.ModShopInfo:input_type -> manage.ModShopInfoRequest
	379, // 525: manage.Manage.DelShopInfo:input_type -> manage.DelShopInfoRequest
	381, // 526: manage.Manage.ListPermission:input_type -> manage.ListPermissionRequest
	383, // 527: manage.Manage.AddPermission:input_type -> manage.AddPermissionRequest
	385, // 528: manage.Manage.ModPermission:input_type -> manage.ModPermissionRequest
	387, // 529: manage.Manage.DelPermission:input_type -> manage.DelPermissionRequest
	389, // 530: manage.Manage.GetListPermissionByRoleId:input_type -> manage.ListPermissionByRoleIdRequest
	391, // 531: manage.Manage.GetListPermissionByManageId:input_type -> manage.ListPermissionByManageIdRequest
	394, // 532: manage.Manage.ListManagerRoleRelation:input_type -> manage.ListManagerRoleRelationRequest
	396, // 533: manage.Manage.AddManagerRoleRelation:input_type -> manage.AddManagerRoleRelationRequest
	398, // 534: manage.Manage.ModManagerRoleRelation:input_type -> manage.ModManagerRoleRelationRequest
	400, // 535: manage.Manage.DelManagerRoleRelation:input_type -> manage.DelManagerRoleRelationRequest
	402, // 536: manage.Manage.ListManagerRoleRelationByManageId:input_type -> manage.ListManagerRoleRelationByManageIdRequest
	404, // 537: manage.Manage.DelManagerRoleRelationByManageId:input_type -> manage.DelManagerRoleRelationByManageIdRequest
	406, // 538: manage.Manage.AddManagerRoleRelationByManageId:input_type -> manage.AddManagerRoleRelationByManageIdRequest
	409, // 539: manage.Manage.ListRolePermissionRelation:input_type -> manage.ListRolePermissionRelationRequest
	411, // 540: manage.Manage.AddRolePermissionRelation:input_type -> manage.AddRolePermissionRelationRequest
	413, // 541: manage.Manage.ModRolePermissionRelation:input_type -> manage.ModRolePermissionRelationRequest
	415, // 542: manage.Manage.DelRolePermissionRelation:input_type -> manage.DelRolePermissionRelationRequest
	419, // 543: manage.Manage.GetSmsCode:input_type -> manage.GetSmsCodeRequest
	417, // 544: manage.Manage.LoginWithSmsCode:input_type -> manage.LoginWithSmsCodeRequest
	420, // 545: manage.Manage.GetSmsCodeByCreateBusiness:input_type -> manage.GetSmsCodeByCreateBusinessRequest
	424, // 546: manage.Manage.GetBusinessById:input_type -> manage.GetBusinessByIdRequest
	426, // 547: manage.Manage.GetPreAuthCode:input_type -> manage.GetPreAuthCodeReq
	428, // 548: manage.Manage.AuthorizationEventReceptionConfig:input_type -> manage.AuthorizationEventReceptionConfigReq
	430, // 549: manage.Manage.GetAuthorizerAccessToken:input_type -> manage.GetAuthorizerAccessTokenReq
	432, // 550: manage.Manage.GetAuthorizerInfo:input_type -> manage.GetAuthorizerInfoReq
	434, // 551: manage.Manage.ApiQueryAuth:input_type -> manage.ApiQueryAuthReq
	436, // 552: manage.Manage.GetWechatOfficialAccountPlatform:input_type -> manage.GetWechatOfficialAccountPlatformReq
	493, // 553: manage.Manage.AddWechatOfficialAccountPlatform:input_type -> manage.AddWechatOfficialAccountPlatformReq
	439, // 554: manage.Manage.ModWechatOfficialAccountPlatform:input_type -> manage.ModWechatOfficialAccountPlatformReq
	441, // 555: manage.Manage.SimpleModUserInfo:input_type -> manage.SimpleModUserInfoReq
	443, // 556: manage.Manage.GetRoleInfoByShopId:input_type -> manage.GetRoleInfoByShopIdReq
	531, // 557: manage.Manage.ListSystemEnum:input_type -> manage.ListSystemEnumRequest
	447, // 558: manage.Manage.ListScoreSetting:input_type -> manage.ListScoreSettingRequest
	451, // 559: manage.Manage.AddScoreSetting:input_type -> manage.AddScoreSettingRequest
	453, // 560: manage.Manage.ModScoreSetting:input_type -> manage.ModScoreSettingRequest
	455, // 561: manage.Manage.DelScoreSetting:input_type -> manage.DelScoreSettingRequest
	483, // 562: manage.Manage.AddWeiXinFans:input_type -> manage.AddWeiXinFansRequest
	485, // 563: manage.Manage.DelWeiXinFans:input_type -> manage.DelWeiXinFansRequest
	487, // 564: manage.Manage.GetAuthorizerAccessTokenByAppId:input_type -> manage.GetAuthorizerAccessTokenByAppIdRequest
	489, // 565: manage.Manage.SCAN:input_type -> manage.SCANRequest
	471, // 566: manage.Manage.AddPackages:input_type -> manage.AddPackagesReq
	473, // 567: manage.Manage.ListPackages:input_type -> manage.ListPackagesReq
	475, // 568: manage.Manage.ModPackages:input_type -> manage.ModPackagesReq
	477, // 569: manage.Manage.DelPackages:input_type -> manage.DelPackagesReq
	480, // 570: manage.Manage.ListOrder:input_type -> manage.ListOrderReq
	491, // 571: manage.Manage.SCANByRecordId:input_type -> manage.SCANByRecordIdRequest
	512, // 572: manage.Manage.GetOSSInfo:input_type -> manage.GetOssInfoRequest
	514, // 573: manage.Manage.ExportDeviceUser:input_type -> manage.ExportDeviceUserRequest
	516, // 574: manage.Manage.ExportMeasureSkinRecord:input_type -> manage.ExportExportMeasureSkinRecordRequest
	523, // 575: manage.Manage.AddSystemSaying:input_type -> manage.AddSystemSayingRequest
	521, // 576: manage.Manage.ListSystemSaying:input_type -> manage.ListSystemSayingRequest
	527, // 577: manage.Manage.ModSystemSaying:input_type -> manage.ModSystemSayingRequest
	525, // 578: manage.Manage.DelSystemSaying:input_type -> manage.DelSystemSayingRequest
	529, // 579: manage.Manage.OnOffSystemSaying:input_type -> manage.OnOffSystemSayingRequest
	538, // 580: manage.Manage.AddSkinType:input_type -> manage.AddSkinTypeRequest
	536, // 581: manage.Manage.ListSkinType:input_type -> manage.ListSkinTypeRequest
	542, // 582: manage.Manage.ModSkinType:input_type -> manage.ModSkinTypeRequest
	540, // 583: manage.Manage.DelSkinType:input_type -> manage.DelSkinTypeRequest
	544, // 584: manage.Manage.OnOffSkinType:input_type -> manage.OnOffSkinTypeRequest
	548, // 585: manage.Manage.SetLoginTokenCache:input_type -> manage.SetLoginTokenCacheReq
	546, // 586: manage.Manage.GetLoginTokenCache:input_type -> manage.GetLoginTokenCacheReq
	19,  // 587: manage.Manage.Summary:output_type -> manage.SummaryResp
	23,  // 588: manage.Manage.ExportSummary:output_type -> manage.ExportSummaryResp
	25,  // 589: manage.Manage.Login:output_type -> manage.LoginResp
	28,  // 590: manage.Manage.ListManager:output_type -> manage.ListManagerResp
	32,  // 591: manage.Manage.ModPasswd:output_type -> manage.ModPasswdResp
	34,  // 592: manage.Manage.ModUserInfo:output_type -> manage.ModUserInfoResp
	36,  // 593: manage.Manage.DelUser:output_type -> manage.DelUserResp
	40,  // 594: manage.Manage.AddUser:output_type -> manage.AddUserResp
	42,  // 595: manage.Manage.ExportUser:output_type -> manage.ExportUserResp
	44,  // 596: manage.Manage.UploadFile:output_type -> manage.UploadFileResp
	46,  // 597: manage.Manage.AddRoleInfo:output_type -> manage.AddRoleInfoResp
	48,  // 598: manage.Manage.ModRoleInfo:output_type -> manage.ModRoleInfoResp
	50,  // 599: manage.Manage.DelRoleInfo:output_type -> manage.DelRoleInfoResp
	52,  // 600: manage.Manage.ListRole:output_type -> manage.ListRoleResp
	55,  // 601: manage.Manage.FronzenRole:output_type -> manage.FrozenRoleResp
	57,  // 602: manage.Manage.RecoverRole:output_type -> manage.RecoverRoleResp
	59,  // 603: manage.Manage.AddMeasureSkinDimension:output_type -> manage.AddMeasureSkinDimensionResp
	61,  // 604: manage.Manage.ListMeasureSkinDimension:output_type -> manage.ListMeasureSkinDimensionResp
	64,  // 605: manage.Manage.ModMeasureSkinDimension:output_type -> manage.ModMeasureSkinDimensionResp
	66,  // 606: manage.Manage.DelMeasureSkinDimension:output_type -> manage.DelMeasureSkinDimensionResp
	68,  // 607: manage.Manage.AddMeasureDimensionSetting:output_type -> manage.AddMeasureDimensionSettingResp
	70,  // 608: manage.Manage.ListMeasureDimensionSetting:output_type -> manage.ListMeasureDimensionSettingResp
	73,  // 609: manage.Manage.ModMeasureDimensionSetting:output_type -> manage.ModMeasureDimensionSettingResp
	75,  // 610: manage.Manage.DelMeasureDimensionSetting:output_type -> manage.DelMeasureDimensionSettingResp
	78,  // 611: manage.Manage.AddReportSetting:output_type -> manage.AddReportSettingRsp
	80,  // 612: manage.Manage.DelReportSetting:output_type -> manage.DelReportSettingRsp
	82,  // 613: manage.Manage.ModReportSetting:output_type -> manage.ModReportSettingRsp
	84,  // 614: manage.Manage.ListReportSetting:output_type -> manage.ListReportSettingRsp
	86,  // 615: manage.Manage.AddProductDict:output_type -> manage.AddProductDictResp
	88,  // 616: manage.Manage.ListProductDict:output_type -> manage.ListProductDictResp
	91,  // 617: manage.Manage.ModProductDict:output_type -> manage.ModProductDictResp
	93,  // 618: manage.Manage.DelProductDict:output_type -> manage.DelProductDictResp
	498, // 619: manage.Manage.AddDict:output_type -> manage.AddDictRsp
	500, // 620: manage.Manage.DelDict:output_type -> manage.DelDictRsp
	502, // 621: manage.Manage.ModDict:output_type -> manage.ModDictRsp
	504, // 622: manage.Manage.ListDict:output_type -> manage.ListDictRsp
	505, // 623: manage.Manage.AddTheme:output_type -> manage.AddThemeRsp
	506, // 624: manage.Manage.DelTheme:output_type -> manage.DelThemeRsp
	508, // 625: manage.Manage.ModTheme:output_type -> manage.ModThemeRsp
	511, // 626: manage.Manage.ListTheme:output_type -> manage.ListThemeRsp
	95,  // 627: manage.Manage.AddPushMessage:output_type -> manage.AddPushMessageResp
	97,  // 628: manage.Manage.ListPushMessage:output_type -> manage.ListPushMessageResp
	100, // 629: manage.Manage.ModPushMessage:output_type -> manage.ModPushMessageResp
	102, // 630: manage.Manage.DelPushMessage:output_type -> manage.DelPushMessageResp
	104, // 631: manage.Manage.ListIssue:output_type -> manage.ListIssueResp
	107, // 632: manage.Manage.ModIssue:output_type -> manage.ModIssueResp
	109, // 633: manage.Manage.DelIssue:output_type -> manage.DelIssueResp
	111, // 634: manage.Manage.ListMachines:output_type -> manage.ListMachinesResp
	115, // 635: manage.Manage.AddMachines:output_type -> manage.AddMachinesResp
	117, // 636: manage.Manage.DelMachines:output_type -> manage.DelMachinesResp
	119, // 637: manage.Manage.ModMachines:output_type -> manage.ModMachinesResp
	123, // 638: manage.Manage.ListMachinesIdleRes:output_type -> manage.ListMachinesIdleResResp
	125, // 639: manage.Manage.AddMachinesIdleRes:output_type -> manage.AddMachinesIdleResResp
	127, // 640: manage.Manage.DelMachinesIdleRes:output_type -> manage.DelMachinesIdleResResp
	129, // 641: manage.Manage.ModMachinesIdleRes:output_type -> manage.ModMachinesIdleResResp
	133, // 642: manage.Manage.ListSkinCareProduct:output_type -> manage.ListSkinCareProductResp
	135, // 643: manage.Manage.AddSkinCareProduct:output_type -> manage.AddSkinCareProductResp
	137, // 644: manage.Manage.DelSkinCareProduct:output_type -> manage.DelSkinCareProductResp
	139, // 645: manage.Manage.ModSkinCareProduct:output_type -> manage.ModSkinCareProductResp
	141, // 646: manage.Manage.UpSkinCareProduct:output_type -> manage.UpSkinCareProductResp
	143, // 647: manage.Manage.DownSkinCareProduct:output_type -> manage.DownSkinCareProductResp
	145, // 648: manage.Manage.BatchSyncRecommendProduct:output_type -> manage.BatchSyncRecommendProductRsp
	147, // 649: manage.Manage.BatchSyncRecommendProject:output_type -> manage.BatchSyncRecommendProjectRsp
	461, // 650: manage.Manage.AddSkinCareProject:output_type -> manage.AddSkinCareProjectRsp
	463, // 651: manage.Manage.DelSkinCareProject:output_type -> manage.DelSkinCareProjectRsp
	465, // 652: manage.Manage.ModSkinCareProject:output_type -> manage.ModSkinCareProjectRsp
	467, // 653: manage.Manage.ListSkinCareProject:output_type -> manage.ListSkinCareProjectRsp
	469, // 654: manage.Manage.OnOffSkinCareProject:output_type -> manage.OnOffSkinCareProjectRsp
	150, // 655: manage.Manage.ListCosmeticsProduct:output_type -> manage.ListCosmeticsProductResp
	152, // 656: manage.Manage.AddCosmeticsProduct:output_type -> manage.AddCosmeticsProductResp
	154, // 657: manage.Manage.DelCosmeticsProduct:output_type -> manage.DelCosmeticsProductResp
	156, // 658: manage.Manage.ModCosmeticsProduct:output_type -> manage.ModCosmeticsProductResp
	158, // 659: manage.Manage.UpCosmeticsProduct:output_type -> manage.UpCosmeticsProductResp
	160, // 660: manage.Manage.DownCosmeticsProduct:output_type -> manage.DownCosmeticsProductResp
	164, // 661: manage.Manage.ListMichellPhan:output_type -> manage.ListMichellPhanResp
	166, // 662: manage.Manage.AddMichellPhan:output_type -> manage.AddMichellPhanResp
	168, // 663: manage.Manage.DelMichellPhan:output_type -> manage.DelMichellPhanResp
	170, // 664: manage.Manage.ModMichellPhan:output_type -> manage.ModMichellPhanResp
	174, // 665: manage.Manage.ListSkinCareAdvice:output_type -> manage.ListSkinCareAdviceResp
	176, // 666: manage.Manage.AddSkinCareAdvice:output_type -> manage.AddSkinCareAdviceResp
	178, // 667: manage.Manage.DelSkinCareAdvice:output_type -> manage.DelSkinCareAdviceResp
	180, // 668: manage.Manage.ModSkinCareAdvice:output_type -> manage.ModSkinCareAdviceResp
	182, // 669: manage.Manage.UpSkinCareAdvice:output_type -> manage.UpSkinCareAdviceResp
	184, // 670: manage.Manage.DownSkinCareAdvice:output_type -> manage.DownSkinCareAdviceResp
	188, // 671: manage.Manage.ListMeasureSkinRecord:output_type -> manage.ListMeasureSkinRecordResp
	197, // 672: manage.Manage.GetMeasureSkinDetail:output_type -> manage.GetMeasureSkinDetailResp
	190, // 673: manage.Manage.DelMeasureSkinRecord:output_type -> manage.DelMeasureSkinRecordResp
	201, // 674: manage.Manage.ListProductRecommendationWeightSetting:output_type -> manage.ListProductRecommendationWeightSettingResp
	203, // 675: manage.Manage.AddProductRecommendationWeightSetting:output_type -> manage.AddProductRecommendationWeightSettingResp
	205, // 676: manage.Manage.DelProductRecommendationWeightSetting:output_type -> manage.DelProductRecommendationWeightSettingResp
	207, // 677: manage.Manage.ModProductRecommendationWeightSetting:output_type -> manage.ModProductRecommendationWeightSettingResp
	210, // 678: manage.Manage.ListDeviceUser:output_type -> manage.ListDeviceUserResp
	213, // 679: manage.Manage.FrozenDeviceUser:output_type -> manage.FrozenDeviceUserResp
	215, // 680: manage.Manage.RecoverDeviceUser:output_type -> manage.RecoverDeviceUserResp
	219, // 681: manage.Manage.AddCourseClassInfo:output_type -> manage.AddCourseClassInfoResp
	221, // 682: manage.Manage.ModCourseClassInfo:output_type -> manage.ModCourseClassInfoResp
	223, // 683: manage.Manage.DelCourseClassInfo:output_type -> manage.DelCourseClassInfoResp
	227, // 684: manage.Manage.ListCourseClass:output_type -> manage.ListCourseClassResp
	225, // 685: manage.Manage.GetCourseClassNameList:output_type -> manage.GetCourseClassNameListResp
	231, // 686: manage.Manage.UpCourseClass:output_type -> manage.UpCourseClassResp
	233, // 687: manage.Manage.DownCourseClass:output_type -> manage.DownCourseClassResp
	331, // 688: manage.Manage.GetYouZanOnSaleList:output_type -> manage.GetYouZanOnSaleListResp
	334, // 689: manage.Manage.GetYouZanItemDetail:output_type -> manage.GetYouZanItemDetailResp
	237, // 690: manage.Manage.AddWiseManInfo:output_type -> manage.AddWiseManInfoResp
	239, // 691: manage.Manage.ModWiseManInfo:output_type -> manage.ModWiseManInfoResp
	241, // 692: manage.Manage.DelWiseManInfo:output_type -> manage.DelWiseManInfoResp
	246, // 693: manage.Manage.ListWiseMan:output_type -> manage.ListWiseManResp
	243, // 694: manage.Manage.GetWiseManNameList:output_type -> manage.GetWiseManNameListResp
	249, // 695: manage.Manage.UpWiseMan:output_type -> manage.UpWiseManResp
	251, // 696: manage.Manage.DownWiseMan:output_type -> manage.DownWiseManResp
	261, // 697: manage.Manage.AddCourseInfo:output_type -> manage.AddCourseInfoResp
	263, // 698: manage.Manage.ModCourseInfo:output_type -> manage.ModCourseInfoResp
	265, // 699: manage.Manage.DelCourseInfo:output_type -> manage.DelCourseInfoResp
	267, // 700: manage.Manage.ListCourse:output_type -> manage.ListCourseResp
	270, // 701: manage.Manage.ListCanRecommendCourseName:output_type -> manage.ListCanRecommendCourseNameResp
	277, // 702: manage.Manage.ListCourseStepAndProduct:output_type -> manage.ListCourseStepAndProductResp
	273, // 703: manage.Manage.UpCourse:output_type -> manage.UpCourseResp
	275, // 704: manage.Manage.DownCourse:output_type -> manage.DownCourseResp
	280, // 705: manage.Manage.AddCourseRecommendInfo:output_type -> manage.AddCourseRecommendInfoResp
	282, // 706: manage.Manage.ModCourseRecommendInfo:output_type -> manage.ModCourseRecommendInfoResp
	284, // 707: manage.Manage.DelCourseRecommendInfo:output_type -> manage.DelCourseRecommendInfoResp
	286, // 708: manage.Manage.ListCourseRecommend:output_type -> manage.ListCourseRecommendResp
	289, // 709: manage.Manage.UpCourseRecommend:output_type -> manage.UpCourseRecommendResp
	291, // 710: manage.Manage.DownCourseRecommend:output_type -> manage.DownCourseRecommendResp
	294, // 711: manage.Manage.AddDoctorInfo:output_type -> manage.AddDoctorInfoResp
	296, // 712: manage.Manage.ModDoctorInfo:output_type -> manage.ModDoctorInfoResp
	298, // 713: manage.Manage.DelDoctorInfo:output_type -> manage.DelDoctorInfoResp
	300, // 714: manage.Manage.ListDoctor:output_type -> manage.ListDoctorResp
	303, // 715: manage.Manage.UpDoctor:output_type -> manage.UpDoctorResp
	305, // 716: manage.Manage.DownDoctor:output_type -> manage.DownDoctorResp
	307, // 717: manage.Manage.AddOperationLog:output_type -> manage.AddOperationLogResp
	309, // 718: manage.Manage.ListOperationLog:output_type -> manage.ListOperationLogResp
	312, // 719: manage.Manage.ListImportTask:output_type -> manage.ListImportTaskResp
	315, // 720: manage.Manage.AddImportTask:output_type -> manage.AddImportTaskResp
	318, // 721: manage.Manage.ListDataPoint:output_type -> manage.ListDataPointResp
	324, // 722: manage.Manage.AddDeviceVersionInfo:output_type -> manage.AddDeviceVersionResp
	326, // 723: manage.Manage.ModDeviceVersionInfo:output_type -> manage.ModDeviceVersionResp
	328, // 724: manage.Manage.DelDeviceVersionInfo:output_type -> manage.DelDeviceVersionResp
	322, // 725: manage.Manage.ListDeviceVersion:output_type -> manage.ListDeviceVersionResp
	337, // 726: manage.Manage.ListCheckPasswordList:output_type -> manage.GetCheckPasswordListResp
	339, // 727: manage.Manage.SetCheckPasswordTimer:output_type -> manage.SetCheckPasswordTimerResp
	342, // 728: manage.Manage.ListWhiteList:output_type -> manage.GetListWhiteListResp
	346, // 729: manage.Manage.AddWhiteList:output_type -> manage.AddListWhiteListResp
	344, // 730: manage.Manage.DelWhiteList:output_type -> manage.DelListWhiteListResp
	348, // 731: manage.Manage.SyncWhiteList:output_type -> manage.SyncWhiteListResp
	357, // 732: manage.Manage.ListAppConfig:output_type -> manage.ListAppConfigResp
	354, // 733: manage.Manage.AddAppConfig:output_type -> manage.AddAppConfigResp
	355, // 734: manage.Manage.DelAppConfig:output_type -> manage.DelAppConfigResp
	356, // 735: manage.Manage.ModAppConfig:output_type -> manage.ModAppConfigResp
	359, // 736: manage.Manage.SyncAppConfig:output_type -> manage.SyncAppConfigResp
	364, // 737: manage.Manage.ListBusiness:output_type -> manage.ListBusinessResp
	367, // 738: manage.Manage.CreateBusiness:output_type -> manage.CreateBusinessResp
	368, // 739: manage.Manage.AddBusiness:output_type -> manage.AddBusinessResp
	370, // 740: manage.Manage.ModBusiness:output_type -> manage.ModBusinessResp
	372, // 741: manage.Manage.DelBusiness:output_type -> manage.DelBusinessResp
	374, // 742: manage.Manage.ListShopInfo:output_type -> manage.ListShopInfoResp
	376, // 743: manage.Manage.AddShopInfo:output_type -> manage.AddShopInfoResp
	378, // 744: manage.Manage.ModShopInfo:output_type -> manage.ModShopInfoResp
	380, // 745: manage.Manage.DelShopInfo:output_type -> manage.DelShopInfoResp
	382, // 746: manage.Manage.ListPermission:output_type -> manage.ListPermissionResp
	384, // 747: manage.Manage.AddPermission:output_type -> manage.AddPermissionResp
	386, // 748: manage.Manage.ModPermission:output_type -> manage.ModPermissionResp
	388, // 749: manage.Manage.DelPermission:output_type -> manage.DelPermissionResp
	390, // 750: manage.Manage.GetListPermissionByRoleId:output_type -> manage.ListPermissionByRoleIdResp
	392, // 751: manage.Manage.GetListPermissionByManageId:output_type -> manage.ListPermissionByManageIdResp
	395, // 752: manage.Manage.ListManagerRoleRelation:output_type -> manage.ListManagerRoleRelationResp
	397, // 753: manage.Manage.AddManagerRoleRelation:output_type -> manage.AddManagerRoleRelationResp
	399, // 754: manage.Manage.ModManagerRoleRelation:output_type -> manage.ModManagerRoleRelationResp
	401, // 755: manage.Manage.DelManagerRoleRelation:output_type -> manage.DelManagerRoleRelationResp
	403, // 756: manage.Manage.ListManagerRoleRelationByManageId:output_type -> manage.ListManagerRoleRelationByManageIdResp
	405, // 757: manage.Manage.DelManagerRoleRelationByManageId:output_type -> manage.DelManagerRoleRelationByManageIdResp
	407, // 758: manage.Manage.AddManagerRoleRelationByManageId:output_type -> manage.AddManagerRoleRelationByManageIdResp
	410, // 759: manage.Manage.ListRolePermissionRelation:output_type -> manage.ListRolePermissionRelationResp
	412, // 760: manage.Manage.AddRolePermissionRelation:output_type -> manage.AddRolePermissionRelationResp
	414, // 761: manage.Manage.ModRolePermissionRelation:output_type -> manage.ModRolePermissionRelationResp
	416, // 762: manage.Manage.DelRolePermissionRelation:output_type -> manage.DelRolePermissionRelationResp
	423, // 763: manage.Manage.GetSmsCode:output_type -> manage.GetSmsCodeResp
	418, // 764: manage.Manage.LoginWithSmsCode:output_type -> manage.LoginWithSmsCodeResp
	421, // 765: manage.Manage.GetSmsCodeByCreateBusiness:output_type -> manage.GetSmsCodeByCreateBusinessResp
	425, // 766: manage.Manage.GetBusinessById:output_type -> manage.GetBusinessByIdResp
	427, // 767: manage.Manage.GetPreAuthCode:output_type -> manage.GetPreAuthCodeResp
	429, // 768: manage.Manage.AuthorizationEventReceptionConfig:output_type -> manage.AuthorizationEventReceptionConfigResp
	431, // 769: manage.Manage.GetAuthorizerAccessToken:output_type -> manage.GetAuthorizerAccessTokenResp
	433, // 770: manage.Manage.GetAuthorizerInfo:output_type -> manage.GetAuthorizerInfoResp
	435, // 771: manage.Manage.ApiQueryAuth:output_type -> manage.ApiQueryAuthResp
	438, // 772: manage.Manage.GetWechatOfficialAccountPlatform:output_type -> manage.GetWechatOfficialAccountPlatformResp
	494, // 773: manage.Manage.AddWechatOfficialAccountPlatform:output_type -> manage.AddWechatOfficialAccountPlatformResp
	440, // 774: manage.Manage.ModWechatOfficialAccountPlatform:output_type -> manage.ModWechatOfficialAccountPlatformResp
	442, // 775: manage.Manage.SimpleModUserInfo:output_type -> manage.SimpleModUserInfoResp
	444, // 776: manage.Manage.GetRoleInfoByShopId:output_type -> manage.GetRoleInfoByShopIdResp
	532, // 777: manage.Manage.ListSystemEnum:output_type -> manage.ListSystemEnumResp
	450, // 778: manage.Manage.ListScoreSetting:output_type -> manage.ListScoreSettingResp
	452, // 779: manage.Manage.AddScoreSetting:output_type -> manage.AddScoreSettingResp
	454, // 780: manage.Manage.ModScoreSetting:output_type -> manage.ModScoreSettingResp
	456, // 781: manage.Manage.DelScoreSetting:output_type -> manage.DelScoreSettingResp
	484, // 782: manage.Manage.AddWeiXinFans:output_type -> manage.AddWeiXinFansResp
	486, // 783: manage.Manage.DelWeiXinFans:output_type -> manage.DelWeiXinFansResp
	488, // 784: manage.Manage.GetAuthorizerAccessTokenByAppId:output_type -> manage.GetAuthorizerAccessTokenByAppIdResp
	490, // 785: manage.Manage.SCAN:output_type -> manage.SCANResp
	472, // 786: manage.Manage.AddPackages:output_type -> manage.AddPackagesRsp
	474, // 787: manage.Manage.ListPackages:output_type -> manage.ListPackagesRsp
	476, // 788: manage.Manage.ModPackages:output_type -> manage.ModPackagesRsp
	478, // 789: manage.Manage.DelPackages:output_type -> manage.DelPackagesRsp
	481, // 790: manage.Manage.ListOrder:output_type -> manage.ListOrderRsp
	492, // 791: manage.Manage.SCANByRecordId:output_type -> manage.SCANByRecordIdResp
	513, // 792: manage.Manage.GetOSSInfo:output_type -> manage.GetOssInfoResp
	515, // 793: manage.Manage.ExportDeviceUser:output_type -> manage.ExportDeviceUserResp
	517, // 794: manage.Manage.ExportMeasureSkinRecord:output_type -> manage.ExportExportMeasureSkinRecordResp
	524, // 795: manage.Manage.AddSystemSaying:output_type -> manage.AddSystemSayingResponse
	522, // 796: manage.Manage.ListSystemSaying:output_type -> manage.ListSystemSayingResponse
	528, // 797: manage.Manage.ModSystemSaying:output_type -> manage.ModSystemSayingResponse
	526, // 798: manage.Manage.DelSystemSaying:output_type -> manage.DelSystemSayingResponse
	530, // 799: manage.Manage.OnOffSystemSaying:output_type -> manage.OnOffSystemSayingResponse
	539, // 800: manage.Manage.AddSkinType:output_type -> manage.AddSkinTypeResponse
	537, // 801: manage.Manage.ListSkinType:output_type -> manage.ListSkinTypeResponse
	543, // 802: manage.Manage.ModSkinType:output_type -> manage.ModSkinTypeResponse
	541, // 803: manage.Manage.DelSkinType:output_type -> manage.DelSkinTypeResponse
	545, // 804: manage.Manage.OnOffSkinType:output_type -> manage.OnOffSkinTypeResponse
	549, // 805: manage.Manage.SetLoginTokenCache:output_type -> manage.SetLoginTokenCacheResp
	547, // 806: manage.Manage.GetLoginTokenCache:output_type -> manage.GetLoginTokenCacheResp
	587, // [587:807] is the sub-list for method output_type
	367, // [367:587] is the sub-list for method input_type
	367, // [367:367] is the sub-list for extension type_name
	367, // [367:367] is the sub-list for extension extendee
	0,   // [0:367] is the sub-list for field type_name
}

func init() { file_manage_proto_init() }
func file_manage_proto_init() {
	if File_manage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_manage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureSkinDimensionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureDimensionSettingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDictInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmeticsProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceVersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTimeFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOptionCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportSummaryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DurationSummaryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportSummaryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListManagerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListManagerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModPasswdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModPasswdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModUserStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModUserStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModRoleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModRoleInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRoleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRoleInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMeasureSkinDimensionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMeasureSkinDimensionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureSkinDimensionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureSkinDimensionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureSkinDimensionRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMeasureSkinDimensionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMeasureSkinDimensionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMeasureSkinDimensionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMeasureSkinDimensionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMeasureDimensionSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMeasureDimensionSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureDimensionSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureDimensionSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureDimensionSettingRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMeasureDimensionSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMeasureDimensionSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMeasureDimensionSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMeasureDimensionSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReportSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReportSettingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelReportSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelReportSettingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModReportSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModReportSettingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportSettingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductDictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductDictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductDictRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModProductDictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModProductDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelProductDictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelProductDictResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPushMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPushMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushMessageRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModPushMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModPushMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPushMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPushMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIssueResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIssueRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModIssueResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIssueResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachinesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMachinesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMachinesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMachinesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachinesIdleResInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesIdleResRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesIdleResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesIdleResResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMachinesIdleResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMachinesIdleResResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMachinesIdleResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMachinesIdleResResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMachinesIdleResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMachinesIdleResResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkinCareProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinCareProductItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinCareProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinCareProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSkinCareProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSkinCareProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSkinCareProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSkinCareProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSkinCareProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSkinCareProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpSkinCareProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpSkinCareProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownSkinCareProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownSkinCareProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSyncRecommendProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSyncRecommendProductRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSyncRecommendProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSyncRecommendProjectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCosmeticsProductItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCosmeticsProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCosmeticsProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCosmeticsProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCosmeticsProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCosmeticsProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCosmeticsProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCosmeticsProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCosmeticsProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCosmeticsProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCosmeticsProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownCosmeticsProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownCosmeticsProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MichellPhanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMichellPhanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMichellPhanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMichellPhanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMichellPhanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMichellPhanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMichellPhanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMichellPhanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMichellPhanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModMichellPhanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkinCareAdviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinCareAdviceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinCareAdviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinCareAdviceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSkinCareAdviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSkinCareAdviceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSkinCareAdviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSkinCareAdviceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSkinCareAdviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSkinCareAdviceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpSkinCareAdviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpSkinCareAdviceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownSkinCareAdviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownSkinCareAdviceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureSkinRecordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureSkinRecordItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureSkinRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureSkinRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMeasureSkinRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMeasureSkinRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeasureSkinDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureSkinRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureSkinRecordResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureSkinRecordResultItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymptomImgSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeasureSkinDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductRecommendationWeightSettingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductRecommendationWeightSettingItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductRecommendationWeightSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductRecommendationWeightSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductRecommendationWeightSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductRecommendationWeightSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelProductRecommendationWeightSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelProductRecommendationWeightSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModProductRecommendationWeightSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModProductRecommendationWeightSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceUserRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenDeviceUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverDeviceUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseClassIdName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCourseClassInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCourseClassInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCourseClassInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCourseClassInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCourseClassInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCourseClassInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseClassNameListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseClassNameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseClassResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseClassRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseClassIdNameRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCourseClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCourseClassResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownCourseClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownCourseClassResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WiseMan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WiseManName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWiseManInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWiseManInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModWiseManInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModWiseManInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelWiseManInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelWiseManInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWiseManNameListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWiseManNameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWiseManNameListRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWiseManRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWiseManResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWiseManRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpWiseManRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpWiseManResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownWiseManRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownWiseManResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCourseStepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCourseStepResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseStepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseStepResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseStepRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCourseInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCourseInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCourseInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCourseInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCourseInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCourseInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCanRecommendCourseNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCanRecommendCourseNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCanRecommendCourseNameRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCourseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownCourseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseStepAndProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseStepAndProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseRecommend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCourseRecommendInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCourseRecommendInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCourseRecommendInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCourseRecommendInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCourseRecommendInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCourseRecommendInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseRecommendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCourseRecommendRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCourseRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpCourseRecommendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownCourseRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownCourseRecommendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Doctor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDoctorInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDoctorInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModDoctorInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModDoctorInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDoctorInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDoctorInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDoctorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDoctorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDoctorRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpDoctorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpDoctorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownDoctorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownDoctorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOperationLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOperationLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOperationLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOperationLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOperationLogRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImportTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImportTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImportTaskRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddImportTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddImportTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataPointResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataPointRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceVersionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceVersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeviceVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeviceVersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModDeviceVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModDeviceVersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDeviceVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDeviceVersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYouZanOnSaleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YouZanOnSaleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYouZanOnSaleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYouZanItemDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYouZanItemDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPasswordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[332].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckPasswordListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[333].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckPasswordListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCheckPasswordTimerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[335].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCheckPasswordTimerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[336].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWhiteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListWhiteListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListWhiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelListWhiteListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelListWhiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddListWhiteListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddListWhiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncWhiteListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncWhiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAppConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModAppConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAppConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAppConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[356].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[365].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[366].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[367].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[368].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[369].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShopInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[370].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShopInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[371].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShopInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[372].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShopInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[373].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModShopInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[374].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModShopInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[375].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelShopInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[376].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelShopInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[377].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[378].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[379].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[380].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[381].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[382].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[383].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[384].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[385].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionByRoleIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[386].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionByRoleIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[387].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionByManageIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[388].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionByManageIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[389].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerRoleRelationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[390].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListManagerRoleRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[391].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListManagerRoleRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[392].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddManagerRoleRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[393].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddManagerRoleRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[394].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModManagerRoleRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[395].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModManagerRoleRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[396].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelManagerRoleRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[397].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelManagerRoleRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[398].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListManagerRoleRelationByManageIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[399].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListManagerRoleRelationByManageIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[400].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelManagerRoleRelationByManageIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[401].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelManagerRoleRelationByManageIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[402].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddManagerRoleRelationByManageIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[403].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddManagerRoleRelationByManageIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[404].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermissionRelationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[405].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRolePermissionRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[406].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRolePermissionRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[407].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRolePermissionRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[408].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRolePermissionRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[409].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModRolePermissionRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[410].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModRolePermissionRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[411].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRolePermissionRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[412].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRolePermissionRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[413].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginWithSmsCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[414].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginWithSmsCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[415].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmsCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[416].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmsCodeByCreateBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[417].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmsCodeByCreateBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[418].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[419].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmsCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[420].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[421].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[422].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreAuthCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[423].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreAuthCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[424].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationEventReceptionConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[425].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationEventReceptionConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[426].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizerAccessTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[427].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizerAccessTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[428].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizerInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[429].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizerInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[430].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiQueryAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[431].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiQueryAuthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[432].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWechatOfficialAccountPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[433].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOfficialAccountPlatform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[434].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWechatOfficialAccountPlatformResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[435].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModWechatOfficialAccountPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[436].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModWechatOfficialAccountPlatformResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[437].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleModUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[438].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleModUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[439].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleInfoByShopIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[440].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleInfoByShopIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[441].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreSettingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[442].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[443].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScoreSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[444].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreSettingInfoV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[445].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreSettingListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[446].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScoreSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[447].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScoreSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[448].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScoreSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[449].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModScoreSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[450].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModScoreSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[451].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelScoreSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[452].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelScoreSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[453].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoreSettingByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[454].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoreSettingByTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[455].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkinCareProjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[456].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSkinCareProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[457].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSkinCareProjectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[458].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSkinCareProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[459].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSkinCareProjectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[460].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSkinCareProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[461].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSkinCareProjectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[462].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinCareProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[463].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinCareProjectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[464].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnOffSkinCareProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[465].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnOffSkinCareProjectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[466].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[467].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPackagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[468].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPackagesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[469].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPackagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[470].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPackagesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[471].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModPackagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[472].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModPackagesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[473].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPackagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[474].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPackagesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[475].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[476].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[477].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[478].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeiXinFansInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[479].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWeiXinFansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[480].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWeiXinFansResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[481].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelWeiXinFansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[482].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelWeiXinFansResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[483].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizerAccessTokenByAppIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[484].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizerAccessTokenByAppIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[485].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCANRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[486].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCANResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[487].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCANByRecordIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[488].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCANByRecordIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[489].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWechatOfficialAccountPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[490].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWechatOfficialAccountPlatformResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[491].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[492].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictBrief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[493].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[494].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDictRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[495].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[496].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDictRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[497].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[498].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModDictRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[499].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[500].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[501].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddThemeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[502].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelThemeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[503].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModThemeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[504].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModThemeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[505].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandbyTheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[506].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThemeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[507].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThemeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[508].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOssInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[509].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOssInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[510].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportDeviceUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[511].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportDeviceUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[512].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportExportMeasureSkinRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[513].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportExportMeasureSkinRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[514].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddThemeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[515].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelThemeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[516].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemSayingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[517].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemSayingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[518].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemSayingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[519].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSystemSayingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[520].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSystemSayingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[521].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSystemSayingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[522].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSystemSayingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[523].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSystemSayingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[524].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSystemSayingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[525].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnOffSystemSayingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[526].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnOffSystemSayingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[527].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemEnumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[528].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemEnumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[529].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemEnumRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[530].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseClassIdNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[531].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkinTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[532].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[533].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSkinTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[534].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSkinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[535].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSkinTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[536].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSkinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[537].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSkinTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[538].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSkinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[539].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModSkinTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[540].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnOffSkinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[541].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnOffSkinTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[542].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginTokenCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[543].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginTokenCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[544].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLoginTokenCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_proto_msgTypes[545].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLoginTokenCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manage_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   548,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manage_proto_goTypes,
		DependencyIndexes: file_manage_proto_depIdxs,
		EnumInfos:         file_manage_proto_enumTypes,
		MessageInfos:      file_manage_proto_msgTypes,
	}.Build()
	File_manage_proto = out.File
	file_manage_proto_rawDesc = nil
	file_manage_proto_goTypes = nil
	file_manage_proto_depIdxs = nil
}
