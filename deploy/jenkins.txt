pipeline {
  agent any

  parameters {
      gitParameter name: 'branch',
      type: 'PT_BRANCH',
      branchFilter: 'origin/(.*)',
      defaultValue: 'master',
      selectedValue: 'DEFAULT',
      sortMode: 'ASCENDING_SMART',
      description: '选择需要构建的分支'

  }

  stages {
      stage('服务信息')    {
          steps {
              sh 'echo 分支：$branch'
             // sh 'echo 构建服务类型：${JOB_NAME}-$project_name-$type'
          }
      }


      stage('拉取代码') {
          steps {
              checkout([$class: 'GitSCM',
              branches: [[name: '$branch']],
              doGenerateSubmoduleConfigurations: false,
              extensions: [],
              submoduleCfg: [],
              userRemoteConfigs: [[credentialsId: 'c2700060-303b-4069-882a-c3745679978d', url: 'http://git.isimetra.com/isimetra/zyxx.git']]])
          }
      }
      stage('获取commit_id') {
          steps {
              echo '获取commit_id'
              git credentialsId: 'c2700060-303b-4069-882a-c3745679978d', url: 'http://git.isimetra.com/isimetra/zyxx.git'
              script {
                  env.commit_id = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
              }
          }
      }

      stage('执行makefile') {
			steps{
				sh '''
                    #!/bin/bash -ilex
                    source /etc/profile
				    # cd services/${project_name}/${type}
				    make
				    '''
			}
	  }


      stage('Dockerfile Build') {
          steps{
                 script{
                     env.image = sh(returnStdout: true, script: 'echo zyxx:${commit_id}').trim()
                 }
                 sh 'echo 镜像名称：${image} && ls -l && docker build -f ./build/package/Dockerfile   -t ${image} ./ '
          }
      }

      stage('上传到镜像仓库') {
          steps{
               script{
                     env.docker_repo = 'registry.cn-shenzhen.aliyuncs.com'
                }
          	  //docker login 这里要注意，会把账号密码输出到jenkins页面，可以通过port.sh类似方式处理，官网文档有这里我就不详细写了
              sh 'docker login --username=dt_7465298199 --password=zywl8888 ${docker_repo}'
              sh 'docker tag  ${image} ${docker_repo}/amgs/${image}'
              sh 'docker push ${docker_repo}/amgs/${image}'
          }
      }

      stage('部署到k8s') {
          steps{
              sh '''
                cd ../zyxx
                chmod 755 ./deploy.sh
                ./deploy.sh ${docker_repo}/amgs/${image}
                /usr/bin/kubectl apply -f ./release/deploy/deploy.yaml
              '''
          }
      }

       stage('Clean') {
           steps{
               sh 'docker rmi -f ${image}'
               sh 'docker rmi -f ${docker_repo}/amgs/${image}'
               //cleanWs notFailBuild: true
           }
       }
  }
}
